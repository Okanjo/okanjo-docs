{"version":3,"sources":["theme.js","jquery.min.js","legacy.js","prism.js","showdown.js","flatdoc.js","github.js","table.js","definition.js","badges.js","eventemitter2.js"],"names":["isElementInViewport","el","$sidebar","jQuery","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","e","t","M","length","n","b","type","isWindow","nodeType","F","_","each","match","w","P","r","i","acceptData","o","a","s","expando","u","l","p","cache","f","data","c","pop","guid","toJSON","noop","extend","camelCase","R","isArray","concat","map","split","$","isEmptyObject","cleanData","support","deleteExpando","W","replace","B","toLowerCase","getAttribute","O","test","parseJSON","it","ot","pt","ft","isFunction","grep","call","ut","filter","inArray","dt","ht","createDocumentFragment","createElement","Lt","getElementsByTagName","appendChild","ownerDocument","Ht","getAttributeNode","specified","qt","Et","exec","removeAttribute","Mt","_data","_t","hasData","events","handle","event","add","Ft","nodeName","noCloneEvent","removeEvent","text","parentNode","outerHTML","html5Clone","innerHTML","trim","Nt","defaultChecked","checked","value","defaultSelected","selected","defaultValue","Ot","querySelectorAll","childNodes","push","merge","Bt","tn","charAt","toUpperCase","slice","en","nn","css","contains","rn","style","display","un","on","Vt","Math","max","an","Zt","sn","offsetWidth","offsetHeight","Rt","boxSizing","Wt","Yt","boxSizingReliable","parseFloat","Gt","ln","Pt","appendTo","contentWindow","contentDocument","write","close","detach","body","remove","gn","pn","Hn","unshift","qn","dataTypes","jn","Mn","ajaxSettings","flatOptions","_n","contents","responseFields","shift","mimeType","getResponseHeader","converters","Fn","dataFilter","dataType","splice","state","error","In","XMLHttpRequest","zn","ActiveXObject","Kn","setTimeout","Xn","now","Zn","Qn","er","Gn","Deferred","always","elem","startTime","duration","tweens","run","notifyWith","resolveWith","promise","props","opts","specialEasing","originalProperties","originalOptions","createTween","Tween","easing","stop","this","rejectWith","tr","start","fx","timer","anim","queue","progress","done","complete","fail","cssHooks","expand","nr","d","h","g","m","_queueHooks","unqueued","empty","fire","overflow","overflowX","overflowY","inlineBlockNeedsLayout","zoom","shrinkWrapBlocks","Vn","hidden","show","hide","_removeData","end","rr","prototype","init","ir","height","opacity","width","or","defaultView","parentWindow","location","indexOf","toString","y","hasOwnProperty","v","fn","x","source","T","N","C","k","E","S","A","j","D","L","H","addEventListener","readyState","q","ready","removeEventListener","detachEvent","jquery","constructor","find","parseHTML","isPlainObject","attr","getElementById","id","context","selector","makeArray","size","toArray","get","pushStack","prevObject","apply","arguments","first","eq","last","sort","noConflict","isReady","readyWait","holdReady","trigger","off","Array","isNumeric","isNaN","isFinite","Error","buildFragment","JSON","parse","Function","parseXML","DOMParser","parseFromString","async","loadXML","globalEval","execScript","eval","Object","proxy","access","Date","getTime","attachEvent","frameElement","doScroll","Callbacks","once","memory","stopOnFalse","disable","unique","has","disabled","lock","locked","fireWith","fired","then","resolve","reject","notify","pipe","when","setAttribute","cssText","getSetAttribute","className","leadingWhitespace","firstChild","tbody","htmlSerialize","hrefNormalized","cssFloat","checkOn","optSelected","enctype","cloneNode","boxModel","compatMode","reliableMarginRight","pixelPosition","noCloneChecked","optDisabled","input","radioValue","appendChecked","checkClone","lastChild","click","submit","change","focusin","attributes","backgroundClip","clearCloneStyle","reliableHiddenOffsets","doesNotIncludeMarginInBodyOffset","offsetTop","getComputedStyle","marginRight","removeChild","random","noData","embed","object","applet","removeData","name","dequeue","cur","delay","speeds","clearTimeout","clearQueue","I","z","X","U","V","Y","J","G","Q","K","removeAttr","prop","removeProp","propFix","addClass","removeClass","toggleClass","hasClass","val","valHooks","set","option","select","options","selectedIndex","isXMLDoc","attrHooks","tabindex","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","propHooks","tabIndex","parseInt","href","button","setAttributeNode","createAttribute","Z","et","tt","nt","rt","global","handler","triggered","dispatch","special","delegateType","bindType","origType","needsContext","expr","namespace","join","delegateCount","setup","RegExp","teardown","Event","isTrigger","namespace_re","result","target","noBubble","isPropagationStopped","preventDefault","isDefaultPrevented","_default","fix","delegateTarget","preDispatch","handlers","currentTarget","isImmediatePropagationStopped","handleObj","stopPropagation","postDispatch","index","fixHooks","mouseHooks","keyHooks","srcElement","metaKey","which","charCode","keyCode","fromElement","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","relatedTarget","toElement","load","focus","activeElement","blur","beforeunload","originalEvent","returnValue","simulate","isSimulated","defaultPrevented","getPreventDefault","timeStamp","cancelBubble","stopImmediatePropagation","mouseenter","mouseleave","submitBubbles","form","_submit_bubble","changeBubbles","propertyName","_just_changed","focusinBubbles","one","bind","unbind","delegate","undelegate","triggerHandler","cacheLength","at","st","getByClassName","getElementsByClassName","qsa","wt","sourceIndex","nextSibling","lt","ct","preFilter","matches","dir","gt","mt","yt","xt","vt","relative","bt","TAG","uniqueSort","ID","Tt","CLASS","NAME","ATTR","PSEUDO","CHILD","String","fromCharCode","isXML","setDocument","tagNameNoComments","createComment","getByName","insertBefore","getElementsByName","getIdNotName","attrHandle","matchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","detectDuplicates","getText","textContent","nodeValue","selectors","createPseudo",">"," ","+","~","pseudos","setFilters","not","innerText","lang","hash","root","hasFocus","enabled","parent","header","even","odd","radio","checkbox","file","password","image","reset","compile","nth","filters","children","next","prev","is","closest","prevAll","addBack","andSelf","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","sibling","reverse","Ct","kt","St","At","legend","area","param","thead","col","td","jt","Dt","optgroup","tfoot","colgroup","caption","th","append","createTextNode","wrapAll","clone","wrapInner","wrap","unwrap","replaceWith","domManip","prepend","before","after","html","src","ajax","url","throws","prependTo","insertAfter","replaceAll","$t","It","zt","Xt","Ut","Jt","BODY","Qt","position","visibility","Kt","letterSpacing","fontWeight","toggle","cssNumber","columnCount","fillOpacity","lineHeight","orphans","widows","zIndex","cssProps","float","swap","getPropertyValue","minWidth","maxWidth","currentStyle","runtimeStyle","pixelLeft","$1","visible","margin","padding","border","cn","dn","hn","serialize","serializeArray","encodeURIComponent","traditional","hover","mn","yn","vn","bn","xn","wn","Tn","Nn","Cn","kn","En","Sn","An","Dn","Ln","responseText","success","active","lastModified","etag","isLocal","processData","contentType","accepts","*","xml","json","* text","text html","text json","text xml","ajaxSetup","ajaxPrefilter","ajaxTransport","ifModified","status","statusText","statusCode","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","method","crossDomain","hasContent","headers","beforeSend","timeout","send","getScript","getJSON","script","text script","head","scriptCharset","charset","onload","onreadystatechange","On","Bn","jsonp","jsonpCallback","Pn","Rn","Wn","$n","xhr","cors","username","open","xhrFields","unload","Un","Yn","Jn","unit","Animation","tweener","prefilter","pos","step","animate","fadeTo","speed","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","old","linear","swing","cos","PI","tick","interval","setInterval","clearInterval","slow","fast","animated","offset","setOffset","pageYOffset","pageXOffset","using","offsetParent","scrollTo","Height","Width","content","","define","amd","elements","createElem","canHaveChildren","frag","createFrag","shivMethods","shivCSS","hasCSS","html5","version","supportsUnknownElements","shivDocument","matchMedia","doc","undefined","bool","docElem","refNode","firstElementChild","fakeBody","div","background","media","win","callMedia","applyMedia","respond","update","mediaQueriesSupported","lastCall","resizeDefer","eminpx","mediastyles","rules","appendedEls","parsedSheets","resizeThrottle","base","links","requestQueue","ripCSS","sheet","isCSS","rel","styleSheet","rawCssText","translate","host","makeRequests","thisRequest","styles","qs","ql","substring","lastIndexOf","repUrls","useMedia","fullq","thisq","eachq","eql","$2","hasquery","minw","maxw","getEmValue","ret","fakeUsed","fromResize","docElemProp","currWidth","styleBlocks","lastLink","thisstyle","min","minnull","maxnull","em","ss","callback","req","xmlHttp","xmlhttpmethod","self","WorkerGlobalScope","Prism","util","encode","alias","languages","DFS","highlightAll","highlightElement","element","language","grammar","code","hooks","Worker","filename","onmessage","highlightedCode","stringify","postMessage","highlight","tokenize","Token","rest","inside","lookbehind","pattern","lastIndex","all","tag","classes","spellcheck","hasAttribute","module","exports","markup","comment","prolog","doctype","cdata","punctuation","attr-value","attr-name","entity","title","atrule","string","property","important","function","style-attr","clike","class-name","keyword","boolean","number","operator","ignore","javascript","regex","template-string","interpolation","interpolation-punctuation","http","request-line","response-status","httpLanguages","application/json","application/xml","text/xml","text/html","less","variable","mixin-usage","php","constant","shell-comment","delimiter","package","tokenStack","backupCode","twig","ld","rd","space-operator","other","Showdown","extensions","forEach","obj","len","stdExtName","converter","converter_options","g_urls","g_titles","g_html_blocks","g_list_level","g_lang_extensions","g_output_modifiers","require","fs","readdirSync","__dirname","ext","makeHtml","_Detab","_ExecuteExtension","_DoGithubCodeBlocks","_HashHTMLBlocks","_StripLinkDefinitions","_RunBlockGamut","_UnescapeSpecialChars","plugin","_ProcessListItems","re","wholeMatch","m1","m2","m3","m4","_EncodeAmpsAndAngles","hashElement","blockText","_DoHeaders","key","hashBlock","_DoLists","_DoCodeBlocks","_DoBlockQuotes","_FormParagraphs","_RunSpanGamut","_DoCodeSpans","_EscapeSpecialCharsWithinTagAttributes","_EncodeBackslashEscapes","_DoImages","_DoAnchors","_DoAutoLinks","_DoItalicsAndBold","escapeCharacters","writeAnchorTag","m5","m6","m7","whole_match","link_text","link_id","search","writeImageTag","alt_text","headerId","matchFound","h_level","whole_list","list","list_type","runup","list_str","item","leading_line","_Outdent","codeblock","nextChar","_EncodeCode","bq","pre","grafs","grafsOut","str","escapeCharacters_callback","_EncodeEmailAddress","addr","ch","charCodeAt","floor","charCodeToReplace","leadingText","numSpaces","charsToEscape","afterBackslash","regexString","charCodeToEscape","getTextNodesIn","exclude","quotify","Flatdoc","runner","loadData","locations","response","github","repo","filepath","token","access_token","ref","markdown","Base64","decode","bitbucket","branch","alert","Parser","parser","h1","Transformer","mangle","menu","getMenu","transformer","$content","addIDs","buttonize","smartquotes","slugs","$el","num","slug","slugify","mkdir_p","level","items","substr","section","$a","nodes","node","Highlighters","highlighters","js","tokens","endTag","generic","MenuView","menuView","process","$parent","$li","$ul","Runner","initialize","fetcher","err","console","applyData","scrollIntoView","jumping","updateCodeBlocks","languageBlocks","block","aspect","defaults","normal","gfm","tables","breaks","pedantic","lex","escaped","message","silent","newline","fences","hr","heading","nptable","lheading","blockquote","def","table","paragraph","bullet","_tag","depth","align","cells","ordered","smartLists","sanitize","escape","autolink","link","reflink","nolink","strong","br","del","_inside","_href","output","outputLink","smartypants","inline","tok","peek","parseText","langPrefix","setOptions","Lexer","lexer","InlineLexer","inlineLexer","marked","Buffer","btoa","atob","VERSION","fromBase64","toBase64","utob","encodeURI","btou","defineProperty","enumerable","writable","configurable","extendString","LATIN_MAP","À","Á","Â","Ã","Ä","Å","Æ","Ç","È","É","Ê","Ë","Ì","Í","Î","Ï","Ð","Ñ","Ò","Ó","Ô","Õ","Ö","Ő","Ø","Ù","Ú","Û","Ü","Ű","Ý","Þ","ß","à","á","â","ã","ä","å","æ","ç","è","é","ê","ë","ì","í","î","ï","ð","ñ","ò","ó","ô","õ","ö","ő","ø","ù","ú","û","ü","ű","ý","þ","ÿ","LATIN_SYMBOLS_MAP","©","GREEK_MAP","α","β","γ","δ","ε","ζ","η","θ","ι","κ","λ","μ","ν","ξ","ο","π","ρ","σ","τ","υ","φ","χ","ψ","ω","ά","έ","ί","ό","ύ","ή","ώ","ς","ϊ","ΰ","ϋ","ΐ","Α","Β","Γ","Δ","Ε","Ζ","Η","Θ","Ι","Κ","Λ","Μ","Ν","Ξ","Ο","Π","Ρ","Σ","Τ","Υ","Φ","Χ","Ψ","Ω","Ά","Έ","Ί","Ό","Ύ","Ή","Ώ","Ϊ","Ϋ","TURKISH_MAP","ş","Ş","ı","İ","ğ","Ğ","RUSSIAN_MAP","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","А","Б","В","Г","Д","Е","Ё","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","UKRAINIAN_MAP","Є","І","Ї","Ґ","є","і","ї","ґ","CZECH_MAP","č","ď","ě","ň","ř","š","ť","ů","ž","Č","Ď","Ě","Ň","Ř","Š","Ť","Ů","Ž","POLISH_MAP","ą","ć","ę","ł","ń","ś","ź","ż","Ą","Ć","Ę","Ł","Ń","Ś","Ź","Ż","LATVIAN_MAP","ā","ē","ģ","ī","ķ","ļ","ņ","ū","Ā","Ē","Ģ","Ī","Ķ","Ļ","Ņ","Ū","ALL_DOWNCODE_MAPS","Downcoder","Initialize","chars","lookup","downcode","downcoded","pieces","mapped","num_chars","prefix","suffix","cell","ths","out","hs","tds","ds","cs","line","lines","tbl","definitionList","lastOffset","lastLength","counter","sets","p1","p2","isJoinedToLast","parts","postCounter","definition","badges","leadingSlash","entireThing","badgeName","putSideBarHeaderIntoView","sidebarCatchupEl","sidebarCatchup","$window","$document","scrollagent","cid","pid","currentElement","previousElement","anchorjump","$card","$header","headerHeight","outerHeight","windowWidth","sideStick","elTop","scrollY","$body","$sections","offsets","current","range","pow","latest","history","pushState","onClick","ctrlKey","altKey","$area","_events","_conf","configure","conf","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","tree","leaf","xTree","xxTree","isolatedBranch","endReached","listeners","typeLength","currentType","nextType","_listeners","**","growListenerTree","listener","warned","defaultMaxListeners","trace","setMaxListeners","many","ttl","_origin","emit","_all","args","ns","onAny","addListener","recursivelyGarbageCollect","keys","leafs","iLeaf","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2"],"mappings":";;;AACA,QAAAA,qBAAAC,EAAAC,GAGA,kBAAAC,SAAAF,YAAAE,UACAF,EAAAA,EAAA,GAGA,IAAAG,GAAAH,EAAAI,uBAEA,OACAD,GAAAE,KAAA,GACAF,EAAAG,MAAA,GACAH,EAAAI,SAAAC,OAAAC,aAAAC,SAAAC,gBAAAC,eACAT,EAAAU,QAAAL,OAAAM,YAAAJ,SAAAC,gBAAAI,cCZA,SAAAC,EAAAC,GAAA,QAAAC,GAAAF,GAAA,GAAAC,GAAAD,EAAAG,OAAAC,EAAAC,GAAAC,KAAAN,EAAA,OAAAK,IAAAE,SAAAP,IAAA,EAAA,IAAAA,EAAAQ,UAAAP,GAAA,EAAA,UAAAG,GAAA,aAAAA,IAAA,IAAAH,GAAA,gBAAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAD,IAAA,QAAAS,GAAAT,GAAA,GAAAC,GAAAS,GAAAV,KAAA,OAAAK,IAAAM,KAAAX,EAAAY,MAAAC,QAAA,SAAAb,EAAAI,GAAAH,EAAAG,IAAA,IAAAH,EAAA,QAAAa,GAAAd,EAAAI,EAAAW,EAAAC,GAAA,GAAAX,GAAAY,WAAAjB,GAAA,CAAA,GAAAkB,GAAAC,EAAAC,EAAAf,GAAAgB,QAAAC,EAAA,gBAAAlB,GAAAmB,EAAAvB,EAAAQ,SAAAgB,EAAAD,EAAAlB,GAAAoB,MAAAzB,EAAA0B,EAAAH,EAAAvB,EAAAoB,GAAApB,EAAAoB,IAAAA,CAAA,IAAAM,GAAAF,EAAAE,KAAAV,GAAAQ,EAAAE,GAAAC,QAAAL,GAAAP,IAAAd,EAAA,MAAAyB,KAAAH,EAAAvB,EAAAoB,GAAAM,EAAAE,EAAAC,OAAAxB,GAAAyB,OAAAJ,EAAAN,GAAAI,EAAAE,KAAAF,EAAAE,MAAAH,IAAAC,EAAAE,GAAAK,OAAA1B,GAAA2B,QAAA,gBAAA5B,IAAA,kBAAAA,MAAAY,EAAAQ,EAAAE,GAAArB,GAAA4B,OAAAT,EAAAE,GAAAtB,GAAAoB,EAAAE,GAAAC,KAAAtB,GAAA4B,OAAAT,EAAAE,GAAAC,KAAAvB,IAAAc,EAAAM,EAAAE,GAAAV,IAAAE,EAAAS,OAAAT,EAAAS,SAAAT,EAAAA,EAAAS,MAAAZ,IAAAd,IAAAiB,EAAAb,GAAA6B,UAAA9B,IAAAW,GAAAO,GAAAH,EAAAD,EAAAd,GAAA,MAAAe,IAAAA,EAAAD,EAAAb,GAAA6B,UAAA9B,MAAAe,EAAAD,EAAAC,GAAA,QAAAgB,GAAAnC,EAAAC,EAAAG,GAAA,GAAAC,GAAAY,WAAAjB,GAAA,CAAA,GAAAe,GAAAC,EAAAE,EAAAC,EAAAnB,EAAAQ,SAAAY,EAAAD,EAAAd,GAAAoB,MAAAzB,EAAAsB,EAAAH,EAAAnB,EAAAK,GAAAgB,SAAAhB,GAAAgB,OAAA,IAAAD,EAAAE,GAAA,CAAA,GAAArB,IAAAiB,EAAAd,EAAAgB,EAAAE,GAAAF,EAAAE,GAAAK,MAAA,CAAAtB,GAAA+B,QAAAnC,GAAAA,EAAAA,EAAAoC,OAAAhC,GAAAiC,IAAArC,EAAAI,GAAA6B,YAAAjC,IAAAiB,GAAAjB,GAAAA,IAAAA,EAAAI,GAAA6B,UAAAjC,GAAAA,EAAAA,IAAAiB,IAAAjB,GAAAA,EAAAsC,MAAA,KAAA,KAAAxB,EAAA,EAAAC,EAAAf,EAAAE,OAAAa,EAAAD,EAAAA,UAAAG,GAAAjB,EAAAc,GAAA,MAAAX,EAAAoC,EAAAnC,GAAAoC,eAAAvB,GAAA,QAAAd,UAAAgB,GAAAE,GAAAK,KAAAa,EAAApB,EAAAE,QAAAH,EAAAd,GAAAqC,WAAA1C,IAAA,GAAAK,GAAAsC,QAAAC,eAAAxB,GAAAA,EAAA5B,aAAA4B,GAAAE,GAAAF,EAAAE,GAAA,QAAA,QAAAuB,GAAA7C,EAAAI,EAAAW,GAAA,GAAAA,IAAAd,GAAA,IAAAD,EAAAQ,SAAA,CAAA,GAAAQ,GAAA,QAAAZ,EAAA0C,QAAAC,GAAA,OAAAC,aAAA,IAAAjC,EAAAf,EAAAiD,aAAAjC,GAAA,gBAAAD,GAAA,CAAA,IAAAA,EAAA,SAAAA,GAAA,EAAA,UAAAA,GAAA,EAAA,SAAAA,EAAA,MAAAA,EAAA,KAAAA,GAAAA,EAAAmC,GAAAC,KAAApC,GAAAV,GAAA+C,UAAArC,GAAAA,EAAA,MAAAG,IAAAb,GAAAsB,KAAA3B,EAAAI,EAAAW,OAAAA,GAAAd,EAAA,MAAAc,GAAA,QAAAyB,GAAAxC,GAAA,GAAAC,EAAA,KAAAA,IAAAD,GAAA,IAAA,SAAAC,IAAAI,GAAAoC,cAAAzC,EAAAC,MAAA,WAAAA,EAAA,OAAA,CAAA,QAAA,EAAA,QAAAoD,KAAA,OAAA,EAAA,QAAAC,KAAA,OAAA,EACA,QAAAC,GAAAvD,EAAAC,GAAA,EAAAD,GAAAA,EAAAC,SAAAD,GAAA,IAAAA,EAAAQ,SAAA,OAAAR,GAAA,QAAAwD,GAAAxD,EAAAC,EAAAG,GAAA,GAAAH,EAAAA,GAAA,EAAAI,GAAAoD,WAAAxD,GAAA,MAAAI,IAAAqD,KAAA1D,EAAA,SAAAA,EAAAe,GAAA,GAAAC,KAAAf,EAAA0D,KAAA3D,EAAAe,EAAAf,EAAA,OAAAgB,KAAAZ,GAAA,IAAAH,EAAAO,SAAA,MAAAH,IAAAqD,KAAA1D,EAAA,SAAAA,GAAA,MAAAA,KAAAC,IAAAG,GAAA,IAAA,gBAAAH,GAAA,CAAA,GAAAc,GAAAV,GAAAqD,KAAA1D,EAAA,SAAAA,GAAA,MAAA,KAAAA,EAAAQ,UAAA,IAAAoD,GAAAT,KAAAlD,GAAA,MAAAI,IAAAwD,OAAA5D,EAAAc,GAAAX,EAAAH,GAAAI,GAAAwD,OAAA5D,EAAAc,GAAA,MAAAV,IAAAqD,KAAA1D,EAAA,SAAAA,GAAA,MAAAK,IAAAyD,QAAA9D,EAAAC,IAAA,IAAAG,IAAA,QAAA2D,GAAA/D,GAAA,GAAAC,GAAA+D,GAAAzB,MAAA,KAAAnC,EAAAJ,EAAAiE,wBAAA,IAAA7D,EAAA8D,cAAA,KAAAjE,EAAAE,QAAAC,EAAA8D,cAAAjE,EAAA4B,MAAA,OAAAzB,GAAA,QAAA+D,GAAAnE,EAAAC,GAAA,MAAAD,GAAAoE,qBAAAnE,GAAA,IAAAD,EAAAqE,YAAArE,EAAAsE,cAAAJ,cAAAjE,IAAA,QAAAsE,GAAAvE,GAAA,GAAAC,GAAAD,EAAAwE,iBAAA,OAAA,OAAAxE,GAAAM,MAAAL,GAAAA,EAAAwE,WAAA,IAAAzE,EAAAM,KAAAN,EAAA,QAAA0E,GAAA1E,GAAA,GAAAC,GAAA0E,GAAAC,KAAA5E,EAAAM,KAAA,OAAAL,GAAAD,EAAAM,KAAAL,EAAA,GAAAD,EAAA6E,gBAAA,QAAA7E,EAAA,QAAA8E,GAAA9E,EAAAC,GAAA,IAAA,GAAAG,GAAAW,EAAA,EAAA,OAAAX,EAAAJ,EAAAe,IAAAA,IAAAV,GAAA0E,MAAA3E,EAAA,cAAAH,GAAAI,GAAA0E,MAAA9E,EAAAc,GAAA,eAAA,QAAAiE,GAAAhF,EAAAC,GAAA,GAAA,IAAAA,EAAAO,UAAAH,GAAA4E,QAAAjF,GAAA,CAAA,GAAAI,GAAAW,EAAAC,EAAAE,EAAAb,GAAA0E,MAAA/E,GAAAmB,EAAAd,GAAA0E,MAAA9E,EAAAiB,GAAAE,EAAAF,EAAAgE,MAAA,IAAA9D,EAAA,OAAAD,GAAAgE,OAAAhE,EAAA+D,SAAA,KAAA9E,IAAAgB,GAAA,IAAAL,EAAA,EAAAC,EAAAI,EAAAhB,GAAAD,OAAAa,EAAAD,EAAAA,IAAAV,GAAA+E,MAAAC,IAAApF,EAAAG,EAAAgB,EAAAhB,GAAAW,IAAAI,EAAAQ,OAAAR,EAAAQ,KAAAtB,GAAA4B,UAAAd,EAAAQ,QAAA,QAAA2D,GAAAtF,EAAAC,GAAA,GAAAG,GAAAW,EAAAC,CAAA,IAAA,IAAAf,EAAAO,SAAA,CAAA,GAAAJ,EAAAH,EAAAsF,SAAAvC,eAAA3C,GAAAsC,QAAA6C,cAAAvF,EAAAI,GAAAgB,SAAA,CAAAL,EAAAX,GAAA0E,MAAA9E,EAAA,KAAAc,IAAAC,GAAAkE,OAAA7E,GAAAoF,YAAAxF,EAAAc,EAAAC,EAAAmE,OAAAlF,GAAA4E,gBAAAxE,GAAAgB,SAAA,WAAAjB,GAAAH,EAAAyF,OAAA1F,EAAA0F,MAAAnB,EAAAtE,GAAAyF,KAAA1F,EAAA0F,KAAAhB,EAAAzE,IAAA,WAAAG,GAAAH,EAAA0F,aAAA1F,EAAA2F,UAAA5F,EAAA4F,WAAAvF,GAAAsC,QAAAkD,YAAA7F,EAAA8F,YAAAzF,GAAA0F,KAAA9F,EAAA6F,aAAA7F,EAAA6F,UAAA9F,EAAA8F,YAAA,UAAA1F,GAAA4F,GAAA7C,KAAAnD,EAAAM,OAAAL,EAAAgG,eAAAhG,EAAAiG,QAAAlG,EAAAkG,QAAAjG,EAAAkG,QAAAnG,EAAAmG,QAAAlG,EAAAkG,MAAAnG,EAAAmG,QAAA,WAAA/F,EAAAH,EAAAmG,gBAAAnG,EAAAoG,SAAArG,EAAAoG,iBAAA,UAAAhG,GAAA,aAAAA,KAAAH,EAAAqG,aAAAtG,EAAAsG,eAAA,QAAAC,GAAAvG,EAAAI,GAAA,GAAAW,GAAAG,EAAAC,EAAA,EAAAC,QAAApB,GAAAoE,uBAAApD,EAAAhB,EAAAoE,qBAAAhE,GAAA,WAAAJ,GAAAwG,mBAAAxF,EAAAhB,EAAAwG,iBAAApG,GAAA,KAAAH,CAAA,KAAAmB,EAAA,IAAAA,KAAAL,EAAAf,EAAAyG,YAAAzG,EAAA,OAAAkB,EAAAH,EAAAI,IAAAA,KAAAf,GAAAC,GAAAkF,SAAArE,EAAAd,GAAAgB,EAAAsF,KAAAxF,GAAAb,GAAAsG,MAAAvF,EAAAmF,EAAArF,EAAAd,GAAA,OAAAA,KAAAH,GAAAG,GAAAC,GAAAkF,SAAAvF,EAAAI,GAAAC,GAAAsG,OAAA3G,GAAAoB,GAAAA,EAAA,QAAAwF,GAAA5G,GAAAgG,GAAA7C,KAAAnD,EAAAM,QAAAN,EAAAiG,eAAAjG,EAAAkG,SACA,QAAAW,GAAA7G,EAAAC,GAAA,GAAAA,IAAAD,GAAA,MAAAC,EAAA,KAAA,GAAAG,GAAAH,EAAA6G,OAAA,GAAAC,cAAA9G,EAAA+G,MAAA,GAAAjG,EAAAd,EAAAe,EAAAiG,GAAA9G,OAAAa,KAAA,GAAAf,EAAAgH,GAAAjG,GAAAZ,EAAAH,IAAAD,GAAA,MAAAC,EAAA,OAAAc,GAAA,QAAAmG,GAAAlH,EAAAC,GAAA,MAAAD,GAAAC,GAAAD,EAAA,SAAAK,GAAA8G,IAAAnH,EAAA,aAAAK,GAAA+G,SAAApH,EAAAsE,cAAAtE,GAAA,QAAAqH,GAAArH,EAAAC,GAAA,IAAA,GAAAG,GAAAW,EAAAC,EAAAE,KAAAC,EAAA,EAAAC,EAAApB,EAAAG,OAAAiB,EAAAD,EAAAA,IAAAJ,EAAAf,EAAAmB,GAAAJ,EAAAuG,QAAApG,EAAAC,GAAAd,GAAA0E,MAAAhE,EAAA,cAAAX,EAAAW,EAAAuG,MAAAC,QAAAtH,GAAAiB,EAAAC,IAAA,SAAAf,IAAAW,EAAAuG,MAAAC,QAAA,IAAA,KAAAxG,EAAAuG,MAAAC,SAAAL,EAAAnG,KAAAG,EAAAC,GAAAd,GAAA0E,MAAAhE,EAAA,aAAAyG,EAAAzG,EAAAwE,aAAArE,EAAAC,KAAAH,EAAAkG,EAAAnG,IAAAX,GAAA,SAAAA,IAAAY,IAAAX,GAAA0E,MAAAhE,EAAA,aAAAC,EAAAZ,EAAAC,GAAA8G,IAAApG,EAAA,aAAA,KAAAI,EAAA,EAAAC,EAAAD,EAAAA,IAAAJ,EAAAf,EAAAmB,GAAAJ,EAAAuG,QAAArH,GAAA,SAAAc,EAAAuG,MAAAC,SAAA,KAAAxG,EAAAuG,MAAAC,UAAAxG,EAAAuG,MAAAC,QAAAtH,EAAAiB,EAAAC,IAAA,GAAA,QAAA,OAAAnB,GAAA,QAAAyH,GAAAzH,EAAAC,EAAAG,GAAA,GAAAW,GAAA2G,GAAA9C,KAAA3E,EAAA,OAAAc,GAAA4G,KAAAC,IAAA,EAAA7G,EAAA,IAAAX,GAAA,KAAAW,EAAA,IAAA,MAAAd,EAAA,QAAA4H,GAAA7H,EAAAC,EAAAG,EAAAW,EAAAC,GAAA,IAAA,GAAAE,GAAAd,KAAAW,EAAA,SAAA,WAAA,EAAA,UAAAd,EAAA,EAAA,EAAAkB,EAAA,EAAA,EAAAD,EAAAA,GAAA,EAAA,WAAAd,IAAAe,GAAAd,GAAA8G,IAAAnH,EAAAI,EAAA0H,GAAA5G,IAAA,EAAAF,IAAAD,GAAA,YAAAX,IAAAe,GAAAd,GAAA8G,IAAAnH,EAAA,UAAA8H,GAAA5G,IAAA,EAAAF,IAAA,WAAAZ,IAAAe,GAAAd,GAAA8G,IAAAnH,EAAA,SAAA8H,GAAA5G,GAAA,SAAA,EAAAF,MAAAG,GAAAd,GAAA8G,IAAAnH,EAAA,UAAA8H,GAAA5G,IAAA,EAAAF,GAAA,YAAAZ,IAAAe,GAAAd,GAAA8G,IAAAnH,EAAA,SAAA8H,GAAA5G,GAAA,SAAA,EAAAF,IAAA,OAAAG,GAAA,QAAA4G,GAAA/H,EAAAC,EAAAG,GAAA,GAAAW,IAAA,EAAAC,EAAA,UAAAf,EAAAD,EAAAgI,YAAAhI,EAAAiI,aAAA/G,EAAAgH,GAAAlI,GAAAmB,EAAAd,GAAAsC,QAAAwF,WAAA,eAAA9H,GAAA8G,IAAAnH,EAAA,aAAA,EAAAkB,EAAA,IAAA,GAAAF,GAAA,MAAAA,EAAA,CAAA,GAAAA,EAAAoH,GAAApI,EAAAC,EAAAiB,IAAA,EAAAF,GAAA,MAAAA,KAAAA,EAAAhB,EAAAsH,MAAArH,IAAAoI,GAAAlF,KAAAnC,GAAA,MAAAA,EAAAD,GAAAI,IAAAd,GAAAsC,QAAA2F,mBAAAtH,IAAAhB,EAAAsH,MAAArH,IAAAe,EAAAuH,WAAAvH,IAAA,EAAA,MAAAA,GAAA6G,EAAA7H,EAAAC,EAAAG,IAAAe,EAAA,SAAA,WAAAJ,EAAAG,GAAA,KAAA,QAAAsG,GAAAxH,GAAA,GAAAC,GAAAiB,EAAAd,EAAAoI,GAAAxI,EAAA,OAAAI,KAAAA,EAAAqI,EAAAzI,EAAAC,GAAA,SAAAG,GAAAA,IAAAsI,IAAAA,IAAArI,GAAA,kDAAA8G,IAAA,UAAA,6BAAAwB,SAAA1I,EAAAN,iBAAAM,GAAAyI,GAAA,GAAAE,eAAAF,GAAA,GAAAG,iBAAAnJ,SAAAO,EAAA6I,MAAA,+BAAA7I,EAAA8I,QAAA3I,EAAAqI,EAAAzI,EAAAC,GAAAyI,GAAAM,UAAAR,GAAAxI,GAAAI,GAAAA,EAAA,QAAAqI,GAAAzI,EAAAC,GAAA,GAAAG,GAAAC,GAAAJ,EAAAiE,cAAAlE,IAAA2I,SAAA1I,EAAAgJ,MAAAlI,EAAAV,GAAA8G,IAAA/G,EAAA,GAAA,UAAA,OAAAA,GAAA8I,SAAAnI,EAAA,QAAAoI,GAAAnJ,EAAAC,EAAAG,EAAAW,GAAA,GAAAC,EAAA,IAAAX,GAAA+B,QAAAnC,GAAAI,GAAAM,KAAAV,EAAA,SAAAA,EAAAe,GAAAZ,GAAAgJ,GAAAjG,KAAAnD,GAAAe,EAAAf,EAAAgB,GAAAmI,EAAAnJ,EAAA,KAAA,gBAAAgB,GAAAf,EAAA,IAAA,IAAAe,EAAAZ,EAAAW,SAAA,IAAAX,GAAA,WAAAC,GAAAC,KAAAL,GAAAc,EAAAf,EAAAC,OAAA,KAAAe,IAAAf,GAAAkJ,EAAAnJ,EAAA,IAAAgB,EAAA,IAAAf,EAAAe,GAAAZ,EAAAW,GAAA,QAAAsI,GAAArJ,GAAA,MAAA,UAAAC,EAAAG,GAAA,gBAAAH,KAAAG,EAAAH,EAAAA,EAAA,IAAA,IAAAc,GAAAC,EAAA,EAAAE,EAAAjB,EAAA+C,cAAApC,MAAAC,OAAA,IAAAR,GAAAoD,WAAArD,GAAA,KAAAW,EAAAG,EAAAF,MAAA,MAAAD,EAAA,IAAAA,EAAAA,EAAAiG,MAAA,IAAA,KAAAhH,EAAAe,GAAAf,EAAAe,QAAAuI,QAAAlJ,KAAAJ,EAAAe,GAAAf,EAAAe,QAAA2F,KAAAtG,IAAA,QAAAmJ,GAAAvJ,EAAAI,EAAAW,EAAAC,GAAA,QAAAI,GAAAE,GAAA,GAAAC,EAAA,OAAAL,GAAAI,IAAA,EAAAjB,GAAAM,KAAAX,EAAAsB,OAAA,SAAAtB,EAAAsB,GAAA,GAAAM,GAAAN,EAAAlB,EAAAW,EAAAC,EAAA,OAAA,gBAAAY,IAAAT,GAAAD,EAAAU,GAAAT,IAAAI,EAAAK,GAAA3B,GAAAG,EAAAoJ,UAAAF,QAAA1H,GAAAR,EAAAQ,IAAA,KAAAL,EAAA,GAAAL,MAAAC,EAAAnB,IAAAyJ,EAAA,OAAArI,GAAAhB,EAAAoJ,UAAA,MAAAtI,EAAA,MAAAE,EAAA,KAAA,QAAAsI,GAAA1J,EAAAI,GAAA,GAAAW,GAAAC,EAAAE,EAAAb,GAAAsJ,aAAAC,eAAA,KAAA5I,IAAAZ,GAAAA,EAAAY,KAAAf,KAAAiB,EAAAF,GAAAhB,EAAAe,IAAAA,OAAAC,GAAAZ,EAAAY,GAAA,OAAAD,IAAAV,GAAA4B,QAAA,EAAAjC,EAAAe,GAAAf,EAAA,QAAA6J,GAAA7J,EAAAI,EAAAW,GAAA,GAAAC,GAAAE,EAAAC,EAAAC,EAAAE,EAAAtB,EAAA8J,SAAAvI,EAAAvB,EAAAwJ,UAAA5H,EAAA5B,EAAA+J,cAAA,KAAA3I,IAAAQ,GAAAR,IAAAL,KAAAX,EAAAwB,EAAAR,IAAAL,EAAAK,GAAA,MAAA,MAAAG,EAAA,IAAAA,EAAAyI,QAAA9I,IAAAjB,IAAAiB,EAAAlB,EAAAiK,UAAA7J,EAAA8J,kBAAA,gBAAA,IAAAhJ,EAAA,IAAAE,IAAAE,GAAA,GAAAA,EAAAF,IAAAE,EAAAF,GAAA+B,KAAAjC,GAAA,CAAAK,EAAA+H,QAAAlI,EAAA,OAAA,GAAAG,EAAA,IAAAR,GAAAI,EAAAI,EAAA,OAAA,CAAA,IAAAH,IAAAL,GAAA,CAAA,IAAAQ,EAAA,IAAAvB,EAAAmK,WAAA/I,EAAA,IAAAG,EAAA,IAAA,CAAAJ,EAAAC,CAAA,OAAAJ,IAAAA,EAAAI,GAAAD,EAAAA,GAAAH,EAAA,MAAAG,IAAAA,IAAAI,EAAA,IAAAA,EAAA+H,QAAAnI,GAAAJ,EAAAI,IAAAlB,EAAA,QAAAmK,GAAApK,EAAAC,GAAA,GAAAG,GAAAW,EAAAC,EAAAE,EAAAC,KAAAC,EAAA,EAAAE,EAAAtB,EAAAwJ,UAAAxC,QAAAzF,EAAAD,EAAA,EAAA,IAAAtB,EAAAqK,aAAApK,EAAAD,EAAAqK,WAAApK,EAAAD,EAAAsK,WAAAhJ,EAAA,GAAA,IAAAN,IAAAhB,GAAAmK,WAAAhJ,EAAAH,EAAAgC,eAAAhD,EAAAmK,WAAAnJ,EAAA,MAAAD,EAAAO,IAAAF,IAAA,GAAA,MAAAL,EAAA,CAAA,GAAA,MAAAQ,GAAAA,IAAAR,EAAA,CAAA,GAAAC,EAAAG,EAAAI,EAAA,IAAAR,IAAAI,EAAA,KAAAJ,IAAAC,EAAA,IAAAZ,IAAAe,GAAA,GAAAD,EAAAd,EAAAmC,MAAA,KAAArB,EAAA,KAAAH,IAAAC,EAAAG,EAAAI,EAAA,IAAAL,EAAA,KAAAC,EAAA,KAAAD,EAAA,KAAA,CAAAF,KAAA,EAAAA,EAAAG,EAAAf,GAAAe,EAAAf,MAAA,IAAAW,EAAAG,EAAA,GAAAI,EAAAiJ,OAAAnJ,IAAA,EAAAL,GAAA,OAAA,GAAAC,KAAA,EAAA,GAAAA,GAAAhB,EAAA,UAAAC,EAAAe,EAAAf,OAAA,KAAAA,EAAAe,EAAAf,GAAA,MAAA2B,GAAA,OAAA4I,MAAA,cAAAC,MAAAzJ,EAAAY,EAAA,sBAAAL,EAAA,OAAAR,IAAAQ,EAAAR,EAAA,OAAAyJ,MAAA,UAAA7I,KAAA1B,GAAA,QAAAyK,KAAA,IAAA,MAAA,IAAA1K,GAAA2K,eAAA,MAAA1K,KAAA,QAAA2K,KAAA,IAAA,MAAA,IAAA5K,GAAA6K,cAAA,qBAAA,MAAA5K,KAAA,QAAA6K,KAAA,MAAAC,YAAA,WAAAC,GAAA/K,IAAA+K,GAAA3K,GAAA4K,MAAA,QAAAC,GAAAlL,EAAAC,GAAAI,GAAAM,KAAAV,EAAA,SAAAA,EAAAG,GAAA,IAAA,GAAAW,IAAAoK,GAAAlL,QAAAoC,OAAA8I,GAAA,MAAAnK,EAAA,EAAAE,EAAAH,EAAAZ,OAAAe,EAAAF,EAAAA,IAAA,GAAAD,EAAAC,GAAA2C,KAAA3D,EAAAC,EAAAG,GAAA,SAAA,QAAAgL,GAAApL,EAAAC,EAAAG,GAAA,GAAAW,GAAAC,EAAAE,EAAA,EAAAC,EAAAkK,GAAAlL,OAAAiB,EAAAf,GAAAiL,WAAAC,OAAA,iBAAAjK,GAAAkK,OAAAlK,EAAA,WAAA,GAAAN,EAAA,OAAA,CAAA,KAAA,GAAAf,GAAA+K,IAAAF,IAAA1K,EAAAuH,KAAAC,IAAA,EAAArG,EAAAkK,UAAAlK,EAAAmK,SAAAzL,GAAAc,EAAAX,EAAAmB,EAAAmK,UAAA,EAAAxK,EAAA,EAAAH,EAAAI,EAAA,EAAAG,EAAAC,EAAAoK,OAAAxL,OAAAmB,EAAAH,EAAAA,IAAAI,EAAAoK,OAAAxK,GAAAyK,IAAA1K,EAAA,OAAAE,GAAAyK,WAAA7L,GAAAuB,EAAAL,EAAAd,IAAA,EAAAc,GAAAI,EAAAlB,GAAAgB,EAAA0K,YAAA9L,GAAAuB,KAAA,IAAAA,EAAAH,EAAA2K,SAAAP,KAAAxL,EAAAgM,MAAA3L,GAAA4B,UAAAhC,GAAAgM,KAAA5L,GAAA4B,QAAA,GAAAiK,kBAAA9L,GAAA+L,mBAAAlM,EAAAmM,gBAAAhM,EAAAqL,UAAAT,IAAAF,IAAAY,SAAAtL,EAAAsL,SAAAC,UAAAU,YAAA,SAAApM,EAAAG,GAAA,GAAAW,GAAAV,GAAAiM,MAAAtM,EAAAuB,EAAA0K,KAAAhM,EAAAG,EAAAmB,EAAA0K,KAAAC,cAAAjM,IAAAsB,EAAA0K,KAAAM,OAAA,OAAAhL,GAAAoK,OAAAjF,KAAA3F,GAAAA,GAAAyL,KAAA,SAAAvM,GAAA,GAAAG,GAAA,EAAAW,EAAAd,EAAAsB,EAAAoK,OAAAxL,OAAA,CAAA,IAAAa,EAAA,MAAAyL,KAAA,KAAAzL,GAAA,EAAAD,EAAAX,EAAAA,IAAAmB,EAAAoK,OAAAvL,GAAAwL,IAAA,EAAA,OAAA3L,GAAAmB,EAAA0K,YAAA9L,GAAAuB,EAAAtB,IAAAmB,EAAAsL,WAAA1M,GAAAuB,EAAAtB,IAAAwM,QAAA7K,EAAAL,EAAAyK,KAAA,KAAAW,EAAA/K,EAAAL,EAAA0K,KAAAC,eAAA/K,EAAAD,EAAAA,IAAA,GAAAH,EAAAsK,GAAAnK,GAAAyC,KAAApC,EAAAvB,EAAA4B,EAAAL,EAAA0K,MAAA,MAAAlL,EAAA,OAAAmK,GAAA3J,EAAAK,GAAAvB,GAAAoD,WAAAlC,EAAA0K,KAAAW,QAAArL,EAAA0K,KAAAW,MAAAjJ,KAAA3D,EAAAuB,GAAAlB,GAAAwM,GAAAC,MAAAzM,GAAA4B,OAAAX,GAAAkK,KAAAxL,EAAA+M,KAAAxL,EAAAyL,MAAAzL,EAAA0K,KAAAe,SAAAzL,EAAA0L,SAAA1L,EAAA0K,KAAAgB,UAAAC,KAAA3L,EAAA0K,KAAAiB,KAAA3L,EAAA0K,KAAAkB,UAAAC,KAAA7L,EAAA0K,KAAAmB,MAAA7B,OAAAhK,EAAA0K,KAAAV,QAAA,QAAAoB,GAAA3M,EAAAC,GAAA,GAAAG,GAAAW,EAAAC,EAAAE,EAAAC,CAAA,KAAAH,IAAAhB,GAAA,GAAAe,EAAAV,GAAA6B,UAAAlB,GAAAE,EAAAjB,EAAAc,GAAAX,EAAAJ,EAAAgB,GAAAX,GAAA+B,QAAAhC,KAAAc,EAAAd,EAAA,GAAAA,EAAAJ,EAAAgB,GAAAZ,EAAA,IAAAY,IAAAD,IAAAf,EAAAe,GAAAX,QAAAJ,GAAAgB,IAAAG,EAAAd,GAAAgN,SAAAtM,GAAAI,GAAA,UAAAA,GAAA,CAAAf,EAAAe,EAAAmM,OAAAlN,SAAAJ,GAAAe,EAAA,KAAAC,IAAAZ,GAAAY,IAAAhB,KAAAA,EAAAgB,GAAAZ,EAAAY,GAAAf,EAAAe,GAAAE,OAAAjB,GAAAc,GAAAG,EAAA,QAAAqM,GAAAvN,EAAAC,EAAAG,GAAA,GAAAW,GAAAC,EAAAE,EAAAC,EAAAC,EAAAE,EAAAC,EAAAK,EAAAJ,EAAAE,EAAA+K,KAAAe,EAAAxN,EAAAsH,MAAAmG,KAAAC,KAAAC,EAAA3N,EAAAQ,UAAA0G,EAAAlH,EAAAI,GAAA4M,QAAApL,EAAAvB,GAAAuN,YAAA5N,EAAA,MAAA,MAAA4B,EAAAiM,WAAAjM,EAAAiM,SAAA,EAAArM,EAAAI,EAAAkM,MAAAC,KAAAnM,EAAAkM,MAAAC,KAAA,WAAAnM,EAAAiM,UAAArM,MAAAI,EAAAiM,WAAAnM,EAAA6J,OAAA,WAAA7J,EAAA6J,OAAA,WAAA3J,EAAAiM,WAAAxN,GAAA2M,MAAAhN,EAAA,MAAAG,QAAAyB,EAAAkM,MAAAC,YAAA,IAAA/N,EAAAQ,WAAA,UAAAP,IAAA,SAAAA,MAAAG,EAAA4N,UAAAR,EAAAQ,SAAAR,EAAAS,UAAAT,EAAAU,WAAA,WAAA7N,GAAA8G,IAAAnH,EAAA,YAAA,SAAAK,GAAA8G,IAAAnH,EAAA,WAAAK,GAAAsC,QAAAwL,wBAAA,WAAA3G,EAAAxH,EAAAuF,UAAAiI,EAAAY,KAAA,EAAAZ,EAAAjG,QAAA,iBAAAnH,EAAA4N,WAAAR,EAAAQ,SAAA,SAAA3N,GAAAsC,QAAA0L,kBAAA3M,EAAA6J,OAAA,WAAAiC,EAAAQ,SAAA5N,EAAA4N,SAAA,GAAAR,EAAAS,UAAA7N,EAAA4N,SAAA,GAAAR,EAAAU,UAAA9N,EAAA4N,SAAA,KAAA,KAAAhN,IAAAf,GAAA,GAAAkB,EAAAlB,EAAAe,GAAAsN,GAAA1J,KAAAzD,GAAA,CAAA,SAAAlB,GAAAe,GAAAM,EAAAA,GAAA,WAAAH,EAAAA,KAAAwM,EAAA,OAAA,QAAA,QAAAD,GAAAhH,KAAA1F,GAAA,GAAAE,EAAAwM,EAAAvN,OAAA,CAAAiB,EAAAf,GAAA0E,MAAA/E,EAAA,WAAAK,GAAA0E,MAAA/E,EAAA,aAAA,UAAAoB,KAAAuM,EAAAvM,EAAAmN,QAAAjN,IAAAF,EAAAmN,QAAAZ,GAAAA,EAAAtN,GAAAL,GAAAwO,OAAA9M,EAAAwL,KAAA,WAAA7M,GAAAL,GAAAyO,SAAA/M,EAAAwL,KAAA,WAAA,GAAAjN,EAAAI,IAAAqO,YAAA1O,EAAA,SAAA,KAAAC,IAAAwN,GAAApN,GAAAiH,MAAAtH,EAAAC,EAAAwN,EAAAxN,KAAA,KAAAe,EAAA,EAAAE,EAAAF,EAAAA,IAAAD,EAAA2M,EAAA1M,GAAAO,EAAAG,EAAA2K,YAAAtL,EAAA4M,EAAAvM,EAAAL,GAAA,GAAA0M,EAAA1M,GAAAK,EAAAL,IAAAV,GAAAiH,MAAAtH,EAAAe,GAAAA,IAAAK,KAAAA,EAAAL,GAAAQ,EAAAqL,MAAAe,IAAApM,EAAAoN,IAAApN,EAAAqL,MAAArL,EAAAqL,MAAA,UAAA7L,GAAA,WAAAA,EAAA,EAAA,KAAA,QAAA6N,GAAA5O,EAAAC,EAAAG,EAAAW,EAAAC,GAAA,MAAA,IAAA4N,GAAAC,UAAAC,KAAA9O,EAAAC,EAAAG,EAAAW,EAAAC,GAAA,QAAA+N,GAAA/O,EAAAC,GAAA,GAAAG,GAAAW,GAAAiO,OAAAhP,GAAAgB,EAAA,CAAA,KAAAf,EAAAA,EAAA,EAAA,EAAA,EAAAe,EAAAA,GAAA,EAAAf,EAAAG,EAAA0H,GAAA9G,GAAAD,EAAA,SAAAX,GAAAW,EAAA,UAAAX,GAAAJ,CAAA,OAAAC,KAAAc,EAAAkO,QAAAlO,EAAAmO,MAAAlP,GAAAe,EAAA,QAAAoO,GAAAnP,GAAA,MAAAK,IAAAE,SAAAP,GAAAA,EAAA,IAAAA,EAAAQ,SAAAR,EAAAoP,aAAApP,EAAAqP,cAAA,EAFA,GAAAjP,GAAAW,EAAAC,QAAAf,GAAAiB,EAAAlB,EAAAN,SAAAyB,EAAAnB,EAAAsP,SAAAlO,EAAApB,EAAAd,OAAAoC,EAAAtB,EAAAwC,EAAAjB,KAAAK,KAAAJ,GAAA,QAAAE,GAAAE,EAAAS,OAAAmL,GAAA5L,EAAA8E,KAAA+G,GAAA7L,EAAAoF,MAAA0G,GAAA9L,EAAA2N,QAAA5B,GAAApM,EAAAiO,SAAAC,GAAAlO,EAAAmO,eAAAC,GAAAnO,GAAAuE,KAAA1F,GAAA,SAAAL,EAAAC,GAAA,MAAA,IAAAI,IAAAuP,GAAAd,KAAA9O,EAAAC,EAAAc,IAAA8O,GAAA,sCAAAC,OAAAjP,GAAA,OAAAkP,GAAA,qCAAAC,GAAA,mCAAAC,GAAA,6BAAAC,GAAA,gBAAAC,GAAA,uBAAAC,GAAA,qCAAAC,GAAA,kEAAAC,GAAA,QAAAC,GAAA,eAAAC,GAAA,SAAAxQ,EAAAC,GAAA,MAAAA,GAAA8G,eAAA0J,GAAA,SAAAzQ,IAAAkB,EAAAwP,kBAAA,SAAA1Q,EAAAM,MAAA,aAAAY,EAAAyP,cAAAC,KAAAvQ,GAAAwQ,UAAAD,GAAA,WAAA1P,EAAAwP,kBAAAxP,EAAA4P,oBAAA,mBAAAL,IAAA,GAAAzQ,EAAA8Q,oBAAA,OAAAL,IAAA,KAAAvP,EAAA6P,YAAA,qBAAAN,IAAAzQ,EAAA+Q,YAAA,SAAAN,KAAApQ,IAAAuP,GAAAvP,GAAAwO,WAAAmC,OAAAxP,GAAAyP,YAAA5Q,GAAAyO,KAAA,SAAA9O,EAAAI,EAAAW,GAAA,GAAAC,GAAAG,CAAA,KAAAnB,EAAA,MAAAyM,KAAA,IAAA,gBAAAzM,GAAA,CAAA,GAAAgB,EAAA,MAAAhB,EAAA8G,OAAA,IAAA,MAAA9G,EAAA8G,OAAA9G,EAAAG,OAAA,IAAAH,EAAAG,QAAA,GAAA,KAAAH,EAAA,MAAAgQ,GAAApL,KAAA5E,IAAAgB,IAAAA,EAAA,IAAAZ,EAAA,OAAAA,GAAAA,EAAA4Q,QAAA5Q,GAAAW,GAAAmQ,KAAAlR,GAAAyM,KAAAwE,YAAA7Q,GAAA8Q,KAAAlR,EAAA,IAAAgB,EAAA,GAAA,CAAA,GAAAZ,EAAAA,YAAAC,IAAAD,EAAA,GAAAA,EAAAC,GAAAsG,MAAA8F,KAAApM,GAAA8Q,UAAAnQ,EAAA,GAAAZ,GAAAA,EAAAI,SAAAJ,EAAAkE,eAAAlE,EAAAc,GAAA,IAAA+O,GAAA9M,KAAAnC,EAAA,KAAAX,GAAA+Q,cAAAhR,GAAA,IAAAY,IAAAZ,GAAAC,GAAAoD,WAAAgJ,KAAAzL,IAAAyL,KAAAzL,GAAAZ,EAAAY,IAAAyL,KAAA4E,KAAArQ,EAAAZ,EAAAY,GAAA,OAAAyL,MAAA,GAAAtL,EAAAD,EAAAoQ,eAAAtQ,EAAA,IAAAG,GAAAA,EAAAwE,WAAA,CAAA,GAAAxE,EAAAoQ,KAAAvQ,EAAA,GAAA,MAAAD,GAAAmQ,KAAAlR,EAAAyM,MAAAtM,OAAA,EAAAsM,KAAA,GAAAtL,EAAA,MAAAsL,MAAA+E,QAAAtQ,EAAAuL,KAAAgF,SAAAzR,EAAAyM,KAAA,MAAAzM,GAAAQ,UAAAiM,KAAA+E,QAAA/E,KAAA,GAAAzM,EAAAyM,KAAAtM,OAAA,EAAAsM,MAAApM,GAAAoD,WAAAzD,GAAAe,EAAA8P,MAAA7Q,IAAAA,EAAAyR,WAAAxR,IAAAwM,KAAAgF,SAAAzR,EAAAyR,SAAAhF,KAAA+E,QAAAxR,EAAAwR,SAAAnR,GAAAqR,UAAA1R,EAAAyM,QAAAgF,SAAA,GAAAtR,OAAA,EAAAwR,KAAA,WAAA,MAAAlF,MAAAtM,QAAAyR,QAAA,WAAA,MAAAnE,IAAA9J,KAAA8I,OAAAoF,IAAA,SAAA7R,GAAA,MAAA,OAAAA,EAAAyM,KAAAmF,UAAA,EAAA5R,EAAAyM,KAAAA,KAAAtM,OAAAH,GAAAyM,KAAAzM,IAAA8R,UAAA,SAAA9R,GAAA,GAAAC,GAAAI,GAAAsG,MAAA8F,KAAAwE,cAAAjR,EAAA,OAAAC,GAAA8R,WAAAtF,KAAAxM,EAAAuR,QAAA/E,KAAA+E,QAAAvR,GAAAU,KAAA,SAAAX,EAAAC,GAAA,MAAAI,IAAAM,KAAA8L,KAAAzM,EAAAC,IAAA4Q,MAAA,SAAA7Q,GAAA,MAAAK,IAAAwQ,MAAA9E,UAAAmB,KAAAlN,GAAAyM,MAAAzF,MAAA,WAAA,MAAAyF,MAAAqF,UAAArE,GAAAuE,MAAAvF,KAAAwF,aAAAC,MAAA,WAAA,MAAAzF,MAAA0F,GAAA,IAAAC,KAAA,WAAA,MAAA3F,MAAA0F,GAAA,KAAAA,GAAA,SAAAnS,GAAA,GAAAC,GAAAwM,KAAAtM,OAAAC,GAAAJ,GAAA,EAAAA,EAAAC,EAAA,EAAA,OAAAwM,MAAAqF,UAAA1R,GAAA,GAAAH,EAAAG,GAAAqM,KAAArM,SAAAkC,IAAA,SAAAtC,GAAA,MAAAyM,MAAAqF,UAAAzR,GAAAiC,IAAAmK,KAAA,SAAAxM,EAAAG,GAAA,MAAAJ,GAAA2D,KAAA1D,EAAAG,EAAAH,OAAA0O,IAAA,WAAA,MAAAlC,MAAAsF,YAAAtF,KAAAwE,YAAA,OAAAvK,KAAA8G,GAAA6E,QAAAA,KAAA9H,UAAAA,QAAAlK,GAAAuP,GAAAd,KAAAD,UAAAxO,GAAAuP,GAAAvP,GAAA4B,OAAA5B,GAAAuP,GAAA3N,OAAA,WAAA,GAAAjC,GAAAI,EAAAW,EAAAC,EAAAE,EAAAC,EAAAC,EAAA6Q,UAAA,OAAA3Q,EAAA,EAAAC,EAAA0Q,UAAA9R,OAAAyB,GAAA,CAAA,KAAA,iBAAAR,KAAAQ,EAAAR,EAAAA,EAAA6Q,UAAA,OAAA3Q,EAAA,GAAA,gBAAAF,IAAAf,GAAAoD,WAAArC,KAAAA,MAAAG,IAAAD,IAAAF,EAAAqL,OAAAnL,GAAAC,EAAAD,EAAAA,IAAA,GAAA,OAAAJ,EAAA+Q,UAAA3Q,IAAA,IAAAN,IAAAE,GAAAlB,EAAAoB,EAAAJ,GAAAD,EAAAG,EAAAF,GAAAI,IAAAL,IAAAa,GAAAb,IAAAV,GAAA+Q,cAAArQ,KAAAX,EAAAC,GAAA+B,QAAArB,MAAAX,GAAAA,GAAA,EAAAe,EAAAnB,GAAAK,GAAA+B,QAAApC,GAAAA,MAAAmB,EAAAnB,GAAAK,GAAA+Q,cAAApR,GAAAA,KAAAoB,EAAAJ,GAAAX,GAAA4B,OAAAL,EAAAT,EAAAJ,IAAAA,IAAAd,IAAAmB,EAAAJ,GAAAD,GAAA,OAAAK,IAAAf,GAAA4B,QAAAqQ,WAAA,SAAArS,GAAA,MAAAD,GAAAwC,IAAAnC,KAAAL,EAAAwC,EAAAlB,GAAArB,GAAAD,EAAAd,SAAAmB,KAAAL,EAAAd,OAAAkC,GAAAf,IAAAkS,SAAA,EAAAC,UAAA,EAAAC,UAAA,SAAAzS,GAAAA,EAAAK,GAAAmS,YAAAnS,GAAAwQ,OAAA,IAAAA,MAAA,SAAA7Q,GAAA,GAAAA,KAAA,KAAAK,GAAAmS,WAAAnS,GAAAkS,QAAA,CAAA,IAAArR,EAAA+H,KAAA,MAAA8B,YAAA1K,GAAAwQ,MAAAxQ,IAAAkS,SAAA,EAAAvS,KAAA,KAAAK,GAAAmS,UAAA,IAAApS,EAAA0L,YAAA5K,GAAAb,KAAAA,GAAAuP,GAAA8C,SAAArS,GAAAa,GAAAwR,QAAA,SAAAC,IAAA,YAAAlP,WAAA,SAAAzD,GAAA,MAAA,aAAAK,GAAAC,KAAAN,IAAAoC,QAAAwQ,MAAAxQ,SAAA,SAAApC,GAAA,MAAA,UAAAK,GAAAC,KAAAN,IAAAO,SAAA,SAAAP,GAAA,MAAA,OAAAA,GAAAA,GAAAA,EAAAR,QAAAqT,UAAA,SAAA7S,GAAA,OAAA8S,MAAAvK,WAAAvI,KAAA+S,SAAA/S,IAAAM,KAAA,SAAAN,GAAA,MAAA,OAAAA,EAAAA,EAAA,GAAA,gBAAAA,IAAA,kBAAAA,GAAAuB,EAAAoM,GAAAhK,KAAA3D,KAAA,eAAAA,IAAAoR,cAAA,SAAApR,GAAA,IAAAA,GAAA,WAAAK,GAAAC,KAAAN,IAAAA,EAAAQ,UAAAH,GAAAE,SAAAP,GAAA,OAAA,CAAA,KAAA,GAAAA,EAAAiR,cAAAxB,GAAA9L,KAAA3D,EAAA,iBAAAyP,GAAA9L,KAAA3D,EAAAiR,YAAApC,UAAA,iBAAA,OAAA,EAAA,MAAAzO,GAAA,OAAA,EAAA,GAAAW,EAAA,KAAAA,IAAAf,IAAA,MAAAe,KAAAd,GAAAwP,GAAA9L,KAAA3D,EAAAe,IAAA0B,cAAA,SAAAzC,GAAA,GAAAC,EAAA,KAAAA,IAAAD,GAAA,OAAA,CAAA,QAAA,GAAAyK,MAAA,SAAAzK,GAAA,KAAAgT,OAAAhT,IAAAmR,UAAA,SAAAnR,EAAAC,EAAAG,GAAA,IAAAJ,GAAA,gBAAAA,GAAA,MAAA,KAAA,kBAAAC,KAAAG,EAAAH,EAAAA,GAAA,GAAAA,EAAAA,GAAAiB,CAAA,IAAAH,GAAAkP,GAAArL,KAAA5E,GAAAgB,GAAAZ,KAAA,OAAAW,IAAAd,EAAAiE,cAAAnD,EAAA,MAAAA,EAAAV,GAAA4S,eAAAjT,GAAAC,EAAAe,GAAAA,GAAAX,GAAAW,GAAAkI,SAAA7I,GAAAsG,SAAA5F,EAAA0F,cAAArD,UAAA,SAAAhD,GAAA,MAAAJ,GAAAkT,MAAAlT,EAAAkT,KAAAC,MAAAnT,EAAAkT,KAAAC,MAAA/S,GAAA,OAAAA,EAAAA,EAAA,gBAAAA,KAAAA,EAAAC,GAAA0F,KAAA3F,GAAAA,GAAA8P,GAAA/M,KAAA/C,EAAA0C,QAAAsN,GAAA,KAAAtN,QAAAuN,GAAA,KAAAvN,QAAAqN,GAAA,MAAAiD,SAAA,UAAAhT,MAAAC,GAAAoK,MAAA,iBAAArK,GAAAH,IAAAoT,SAAA,SAAAjT,GAAA,GAAAW,GAAAC,CAAA,KAAAZ,GAAA,gBAAAA,GAAA,MAAA,KAAA,KAAAJ,EAAAsT,WAAAtS,EAAA,GAAAsS,WAAAvS,EAAAC,EAAAuS,gBAAAnT,EAAA,cAAAW,EAAA,GAAA8J,eAAA,oBAAA9J,EAAAyS,MAAA,QAAAzS,EAAA0S,QAAArT,IAAA,MAAAc,GAAAH,EAAAd,EAAA,MAAAc,IAAAA,EAAApB,kBAAAoB,EAAAqD,qBAAA,eAAAjE,QAAAE,GAAAoK,MAAA,gBAAArK,GAAAW,GAAAiB,KAAA,aAAA0R,WAAA,SAAAzT,GAAAA,GAAAI,GAAA0F,KAAA9F,KAAAD,EAAA2T,YAAA,SAAA1T,GAAAD,EAAA4T,KAAAjQ,KAAA3D,EAAAC,KAAAA,IAAAiC,UAAA,SAAAlC,GAAA,MAAAA,GAAA8C,QAAAwN,GAAA,OAAAxN,QAAAyN,GAAAC,KAAAjL,SAAA,SAAAvF,EAAAC,GAAA,MAAAD,GAAAuF,UAAAvF,EAAAuF,SAAAvC,gBAAA/C,EAAA+C,eAAArC,KAAA,SAAAX,EAAAC,EAAAG,GAAA,GAAAW,GAAAC,EAAA,EAAAE,EAAAlB,EAAAG,OAAAgB,EAAAjB,EAAAF,EAAA,IAAAI,GAAA,GAAAe,EAAA,KAAAD,EAAAF,IAAAD,EAAAd,EAAA+R,MAAAhS,EAAAgB,GAAAZ,GAAAW,KAAA,GAAAC,SAAA,KAAAA,IAAAhB,GAAA,GAAAe,EAAAd,EAAA+R,MAAAhS,EAAAgB,GAAAZ,GAAAW,KAAA,EAAA,UAAA,IAAAI,EAAA,KAAAD,EAAAF,IAAAD,EAAAd,EAAA0D,KAAA3D,EAAAgB,GAAAA,EAAAhB,EAAAgB,IAAAD,KAAA,GAAAC,SAAA,KAAAA,IAAAhB,GAAA,GAAAe,EAAAd,EAAA0D,KAAA3D,EAAAgB,GAAAA,EAAAhB,EAAAgB,IAAAD,KAAA,EAAA,KAAA,OAAAf,IAAA+F,KAAA4J,KAAAA,GAAAhM,KAAA,WAAA,SAAA3D,GAAA,MAAA,OAAAA,EAAA,GAAA2P,GAAAhM,KAAA3D,IAAA,SAAAA,GAAA,MAAA,OAAAA,EAAA,IAAAA,EAAA,IAAA8C,QAAAiN,GAAA,KAAA2B,UAAA,SAAA1R,EAAAC,GAAA,GAAAG,GAAAH,KAAA,OAAA,OAAAD,IAAAE,EAAA2T,OAAA7T,IAAAK,GAAAsG,MAAAvG,EAAA,gBAAAJ,IAAAA,GAAAA,GAAAwN,GAAA7J,KAAAvD,EAAAJ,IAAAI,GAAA0D,QAAA,SAAA9D,EAAAC,EAAAG,GAAA,GAAAW,EAAA,IAAAd,EAAA,CAAA,GAAAyN,GAAA,MAAAA,IAAA/J,KAAA1D,EAAAD,EAAAI,EAAA,KAAAW,EAAAd,EAAAE,OAAAC,EAAAA,EAAA,EAAAA,EAAAuH,KAAAC,IAAA,EAAA7G,EAAAX,GAAAA,EAAA,EAAAW,EAAAX,EAAAA,IAAA,GAAAA,IAAAH,IAAAA,EAAAG,KAAAJ,EAAA,MAAAI,GAAA,MAAA,IAAAuG,MAAA,SAAA3G,EAAAI,GAAA,GAAAW,GAAAX,EAAAD,OAAAa,EAAAhB,EAAAG,OAAAe,EAAA,CAAA,IAAA,gBAAAH,GAAA,KAAAA,EAAAG,EAAAA,IAAAlB,EAAAgB,KAAAZ,EAAAc,OAAA,MAAAd,EAAAc,KAAAjB,GAAAD,EAAAgB,KAAAZ,EAAAc,IAAA,OAAAlB,GAAAG,OAAAa,EAAAhB,GAAA0D,KAAA,SAAA1D,EAAAC,EAAAG,GAAA,GAAAW,GAAAC,KAAAE,EAAA,EAAAC,EAAAnB,EAAAG,MAAA,KAAAC,IAAAA,EAAAe,EAAAD,EAAAA,IAAAH,IAAAd,EAAAD,EAAAkB,GAAAA,GAAAd,IAAAW,GAAAC,EAAA0F,KAAA1G,EAAAkB,GAAA,OAAAF,IAAAsB,IAAA,SAAAtC,EAAAC,EAAAG,GAAA,GAAAW,GAAAC,EAAA,EAAAE,EAAAlB,EAAAG,OAAAgB,EAAAjB,EAAAF,GAAAoB,IAAA,IAAAD,EAAA,KAAAD,EAAAF,EAAAA,IAAAD,EAAAd,EAAAD,EAAAgB,GAAAA,EAAAZ,GAAA,MAAAW,IAAAK,EAAAA,EAAAjB,QAAAY,OAAA,KAAAC,IAAAhB,GAAAe,EAAAd,EAAAD,EAAAgB,GAAAA,EAAAZ,GAAA,MAAAW,IAAAK,EAAAA,EAAAjB,QAAAY,EAAA,OAAAW,IAAAsQ,SAAA5Q,IAAAU,KAAA,EAAAgS,MAAA,SAAA9T,EAAAI,GAAA,GAAAW,GAAAC,EAAAE,CAAA,OAAA,gBAAAd,KAAAc,EAAAlB,EAAAI,GAAAA,EAAAJ,EAAAA,EAAAkB,GAAAb,GAAAoD,WAAAzD,IAAAe,EAAA0M,GAAA9J,KAAAsO,UAAA,GAAAjR,EAAA,WAAA,MAAAhB,GAAAgS,MAAA5R,GAAAqM,KAAA1L,EAAAsB,OAAAoL,GAAA9J,KAAAsO,cAAAjR,EAAAc,KAAA9B,EAAA8B,KAAA9B,EAAA8B,MAAAzB,GAAAyB,OAAAd,GAAAf,GAAA8T,OAAA,SAAA/T,EAAAI,EAAAW,EAAAC,EAAAE,EAAAC,EAAAC,GAAA,GAAAE,GAAA,EAAAC,EAAAvB,EAAAG,OAAAyB,EAAA,MAAAb,CAAA,IAAA,WAAAV,GAAAC,KAAAS,GAAA,CAAAG,GAAA,CAAA,KAAAI,IAAAP,GAAAV,GAAA0T,OAAA/T,EAAAI,EAAAkB,EAAAP,EAAAO,IAAA,EAAAH,EAAAC,OAAA,IAAAJ,IAAAf,IAAAiB,GAAA,EAAAb,GAAAoD,WAAAzC,KAAAI,GAAA,GAAAQ,IAAAR,GAAAhB,EAAAuD,KAAA3D,EAAAgB,GAAAZ,EAAA,OAAAwB,EAAAxB,EAAAA,EAAA,SAAAJ,EAAAC,EAAAG,GAAA,MAAAwB,GAAA+B,KAAAtD,GAAAL,GAAAI,MAAAA,GAAA,KAAAmB,EAAAD,EAAAA,IAAAlB,EAAAJ,EAAAsB,GAAAP,EAAAK,EAAAJ,EAAAA,EAAA2C,KAAA3D,EAAAsB,GAAAA,EAAAlB,EAAAJ,EAAAsB,GAAAP,IAAA,OAAAG,GAAAlB,EAAA4B,EAAAxB,EAAAuD,KAAA3D,GAAAuB,EAAAnB,EAAAJ,EAAA,GAAAe,GAAAI,GAAA8J,IAAA,WAAA,OAAA,GAAA+I,OAAAC,aAAA5T,GAAAwQ,MAAA9E,QAAA,SAAA9L,GAAA,IAAAG,EAAA,GAAAA,EAAAC,GAAAiL,WAAA,aAAApK,EAAAyP,WAAA5F,WAAA1K,GAAAwQ,WAAA,IAAA3P,EAAAwP,iBAAAxP,EAAAwP,iBAAA,mBAAAD,IAAA,GAAAzQ,EAAA0Q,iBAAA,OAAAD,IAAA,OAAA,CAAAvP,EAAAgT,YAAA,qBAAAzD,IAAAzQ,EAAAkU,YAAA,SAAAzD,GAAA,IAAA1P,IAAA,CAAA,KAAAA,EAAA,MAAAf,EAAAmU,cAAAjT,EAAAvB,gBAAA,MAAAqB,IAAAD,GAAAA,EAAAqT,UAAA,QAAAjT,KAAA,IAAAd,GAAAkS,QAAA,CAAA,IAAAxR,EAAAqT,SAAA,QAAA,MAAApU,GAAA,MAAA+K,YAAA5J,EAAA,IAAAyP,KAAAvQ,GAAAwQ,YAAA,MAAAzQ,GAAA2L,QAAA9L,IAAAI,GAAAM,KAAA,gEAAA4B,MAAA,KAAA,SAAAvC,EAAAC,GAAAsB,EAAA,WAAAtB,EAAA,KAAAA,EAAA+C,gBAAAjC,EAAAV,GAAAa,EAAA,IAAAR,MAAAL,IAAAgU,UAAA,SAAArU,GAAAA,EAAA,gBAAAA,GAAAU,GAAAV,IAAAS,EAAAT,GAAAK,GAAA4B,UAAAjC,EAAA,IAAAI,GAAAW,EAAAC,EAAAE,EAAAC,EAAAC,EAAAE,KAAAC,GAAAvB,EAAAsU,SAAA1S,EAAA,SAAA3B,GAAA,IAAAc,EAAAf,EAAAuU,QAAAtU,EAAAe,GAAA,EAAAG,EAAAC,GAAA,EAAAA,EAAA,EAAAF,EAAAI,EAAAnB,OAAAC,GAAA,EAAAkB,GAAAJ,EAAAC,EAAAA,IAAA,GAAAG,EAAAH,GAAA6Q,MAAA/R,EAAA,GAAAA,EAAA,OAAA,GAAAD,EAAAwU,YAAA,CAAAzT,GAAA,CAAA,OAAAX,GAAA,EAAAkB,IAAAC,EAAAA,EAAApB,QAAAyB,EAAAL,EAAAyI,SAAAjJ,EAAAO,KAAAE,EAAAiT,YAAAjT,GAAA6D,IAAA,WAAA,GAAA/D,EAAA,CAAA,GAAArB,GAAAqB,EAAAnB,QAAA,QAAAa,GAAAf,GAAAI,GAAAM,KAAAV,EAAA,SAAAA,EAAAG,GAAA,GAAAW,GAAAV,GAAAC,KAAAF,EAAA,cAAAW,EAAAf,EAAA0U,QAAAlT,EAAAmT,IAAAvU,IAAAkB,EAAAoF,KAAAtG,GAAAA,GAAAA,EAAAD,QAAA,WAAAY,GAAAC,EAAAZ,MAAA6R,WAAA7R,EAAAc,EAAAI,EAAAnB,OAAAY,IAAAK,EAAAnB,EAAA2B,EAAAb,IAAA,MAAA0L,OAAAvD,OAAA,WAAA,MAAA5H,IAAAjB,GAAAM,KAAAsR,UAAA,SAAAjS,EAAAC,GAAA,IAAA,GAAAc,IAAAA,EAAAV,GAAAyD,QAAA7D,EAAAqB,EAAAP,IAAA,IAAAO,EAAAiJ,OAAAxJ,EAAA,GAAAX,IAAAc,GAAAH,GAAAG,IAAAC,GAAAJ,GAAAI,OAAAsL,MAAAkI,IAAA,SAAA3U,GAAA,MAAAA,GAAAK,GAAAyD,QAAA9D,EAAAsB,GAAA,MAAAA,IAAAA,EAAAnB,SAAA2N,MAAA,WAAA,MAAAxM,MAAAmL,MAAAgI,QAAA,WAAA,MAAAnT,GAAAC,EAAAR,EAAAd,EAAAwM,MAAAmI,SAAA,WAAA,OAAAtT,GAAAuT,KAAA,WAAA,MAAAtT,GAAAtB,EAAAc,GAAAS,EAAAiT,UAAAhI,MAAAqI,OAAA,WAAA,OAAAvT,GAAAwT,SAAA,SAAA/U,EAAAC,GAAA,MAAAA,GAAAA,MAAAA,GAAAD,EAAAC,EAAA+G,MAAA/G,EAAA+G,QAAA/G,IAAAqB,GAAAN,IAAAO,IAAAnB,EAAAmB,EAAAmF,KAAAzG,GAAA2B,EAAA3B,IAAAwM,MAAAsB,KAAA,WAAA,MAAAvM,GAAAuT,SAAAtI,KAAAwF,WAAAxF,MAAAuI,MAAA,WAAA,QAAAhU,GAAA,OAAAQ,IAAAnB,GAAA4B,QAAAqJ,SAAA,SAAAtL,GAAA,GAAAC,KAAA,UAAA,OAAAI,GAAAgU,UAAA,eAAA,aAAA,SAAA,OAAAhU,GAAAgU,UAAA,eAAA,aAAA,SAAA,WAAAhU,GAAAgU,UAAA,YAAAjU,EAAA,UAAAW,GAAAyJ,MAAA,WAAA,MAAApK,IAAAmL,OAAA,WAAA,MAAAvK,GAAAkM,KAAA+E,WAAA7E,KAAA6E,WAAAxF,MAAAwI,KAAA,WAAA,GAAAjV,GAAAiS,SAAA,OAAA5R,IAAAiL,SAAA,SAAAlL,GAAAC,GAAAM,KAAAV,EAAA,SAAAA,EAAAiB,GAAA,GAAAC,GAAAD,EAAA,GAAAE,EAAAf,GAAAoD,WAAAzD,EAAAC,KAAAD,EAAAC,EAAAe,GAAAE,EAAA,IAAA,WAAA,GAAAlB,GAAAoB,GAAAA,EAAA4Q,MAAAvF,KAAAwF,UAAAjS,IAAAK,GAAAoD,WAAAzD,EAAA+L,SAAA/L,EAAA+L,UAAAmB,KAAA9M,EAAA8U,SAAA9H,KAAAhN,EAAA+U,QAAAlI,SAAA7M,EAAAgV,QAAAhV,EAAAe,EAAA,QAAAsL,OAAA1L,EAAAX,EAAA2L,UAAAU,KAAArL,GAAApB,GAAAiS,eAAAjS,EAAA,OAAA+L,WAAAA,QAAA,SAAA/L,GAAA,MAAA,OAAAA,EAAAK,GAAA4B,OAAAjC,EAAAe,GAAAA,IAAAC,IAAA,OAAAD,GAAAsU,KAAAtU,EAAAkU,KAAA5U,GAAAM,KAAAV,EAAA,SAAAD,EAAAkB,GAAA,GAAAC,GAAAD,EAAA,GAAAE,EAAAF,EAAA,EAAAH,GAAAG,EAAA,IAAAC,EAAAkE,IAAAjE,GAAAD,EAAAkE,IAAA,WAAAjF,EAAAgB,GAAAnB,EAAA,EAAAD,GAAA,GAAAyU,QAAAxU,EAAA,GAAA,GAAA4U,MAAA7T,EAAAE,EAAA,IAAA,WAAA,MAAAF,GAAAE,EAAA,GAAA,QAAAuL,OAAAzL,EAAAD,EAAA0L,KAAAwF,WAAAxF,MAAAzL,EAAAE,EAAA,GAAA,QAAAC,EAAA4T,WAAAhU,EAAAgL,QAAA/K,GAAAhB,GAAAA,EAAA2D,KAAA3C,EAAAA,GAAAA,GAAAsU,KAAA,SAAAtV,GAAA,GAAAoB,GAAAE,EAAAC,EAAAtB,EAAA,EAAAG,EAAAqN,GAAA9J,KAAAsO,WAAAlR,EAAAX,EAAAD,OAAAa,EAAA,IAAAD,GAAAf,GAAAK,GAAAoD,WAAAzD,EAAA+L,SAAAhL,EAAA,EAAAG,EAAA,IAAAF,EAAAhB,EAAAK,GAAAiL,WAAAnK,EAAA,SAAAnB,EAAAC,EAAAG,GAAA,MAAA,UAAAW,GAAAd,EAAAD,GAAAyM,KAAArM,EAAAJ,GAAAiS,UAAA9R,OAAA,EAAAsN,GAAA9J,KAAAsO,WAAAlR,EAAAX,IAAAgB,EAAAF,EAAA2K,WAAA5L,EAAAG,KAAAY,GAAAE,EAAA4K,YAAA7L,EAAAG,IAAA,IAAAW,EAAA,EAAA,IAAAK,EAAAwR,MAAA7R,GAAAO,EAAAsR,MAAA7R,GAAAQ,EAAAqR,MAAA7R,GAAAA,EAAAd,EAAAA,IAAAG,EAAAH,IAAAI,GAAAoD,WAAArD,EAAAH,GAAA8L,SAAA3L,EAAAH,GAAA8L,UAAAmB,KAAA/L,EAAAlB,EAAAsB,EAAAnB,IAAAgN,KAAAlM,EAAAiU,QAAAlI,SAAA9L,EAAAlB,EAAAqB,EAAAF,MAAAJ,CAAA,OAAAA,IAAAE,EAAA4K,YAAAvK,EAAAnB,GAAAc,EAAA6K,aAAA1L,GAAAsC,QAAA,WAAA,GAAA1C,GAAAG,EAAAW,EAAAI,EAAAC,EAAAE,EAAAC,EAAAK,EAAAJ,EAAAE,EAAA8L,EAAAtM,EAAAgD,cAAA,MAAA,IAAAsJ,EAAA+H,aAAA,YAAA,KAAA/H,EAAA1H,UAAA,qEAAA1F,EAAAoN,EAAApJ,qBAAA,KAAArD,EAAAyM,EAAApJ,qBAAA,KAAA,IAAAhE,IAAAW,IAAAX,EAAAD,OAAA,QAAAiB,GAAAF,EAAAgD,cAAA,UAAA3C,EAAAH,EAAAiD,YAAAnD,EAAAgD,cAAA,WAAA/C,EAAAqM,EAAApJ,qBAAA,SAAA,GAAArD,EAAAuG,MAAAkO,QAAA,gCAAAvV,GAAAwV,gBAAA,MAAAjI,EAAAkI,UAAAC,kBAAA,IAAAnI,EAAAoI,WAAApV,SAAAqV,OAAArI,EAAApJ,qBAAA,SAAAjE,OAAA2V,gBAAAtI,EAAApJ,qBAAA,QAAAjE,OAAAmH,MAAA,MAAAnE,KAAApC,EAAAkC,aAAA,UAAA8S,eAAA,OAAAhV,EAAAkC,aAAA,QAAAgM,QAAA,OAAA9L,KAAApC,EAAAuG,MAAA2H,SAAA+G,WAAAjV,EAAAuG,MAAA0O,SAAAC,UAAA9U,EAAAgF,MAAA+P,YAAA3U,EAAA8E,SAAA8P,UAAAjV,EAAAgD,cAAA,QAAAiS,QAAAtQ,WAAA,kBAAA3E,EAAAgD,cAAA,OAAAkS,WAAA,GAAAxQ,UAAAyQ,SAAA,eAAAnV,EAAAoV,WAAA1T,eAAA,EAAA4C,cAAA,EAAA2I,wBAAA,EAAAE,kBAAA,EAAAkI,qBAAA,EAAAjO,mBAAA,EAAAkO,eAAA,GAAArV,EAAA+E,SAAA,EAAAjG,EAAAwW,eAAAtV,EAAAiV,WAAA,GAAAlQ,QAAA9E,EAAAwT,UAAA,EAAA3U,EAAAyW,aAAAnV,EAAAqT,QAAA,WAAApH,GAAArK,KAAA,MAAAsK,GAAAxN,EAAA2C,eAAA,EAAAzB,EAAAD,EAAAgD,cAAA,SAAA/C,EAAAoU,aAAA,QAAA,IAAAtV,EAAA0W,MAAA,KAAAxV,EAAA8B,aAAA,SAAA9B,EAAAgF,MAAA,IAAAhF,EAAAoU,aAAA,OAAA,SAAAtV,EAAA2W,WAAA,MAAAzV,EAAAgF,MAAAhF,EAAAoU,aAAA,UAAA,KAAApU,EAAAoU,aAAA,OAAA,KAAAjU,EAAAJ,EAAA+C,yBAAA3C,EAAA+C,YAAAlD,GAAAlB,EAAA4W,cAAA1V,EAAA+E,QAAAjG,EAAA6W,WAAAxV,EAAA8U,WAAA,GAAAA,WAAA,GAAAW,UAAA7Q,QAAAsH,EAAA0G,cAAA1G,EAAA0G,YAAA,UAAA,WAAAjU,EAAAuF,cAAA,IAAAgI,EAAA4I,WAAA,GAAAY,QAAA,KAAAtV,KAAAuV,QAAA,EAAAC,QAAA,EAAAC,SAAA,GAAA3J,EAAA+H,aAAA3T,EAAA,KAAAF,EAAA,KAAAzB,EAAAyB,EAAA,WAAAE,IAAA5B,IAAAwN,EAAA4J,WAAAxV,GAAAP,WAAA,CAAA,OAAAmM,GAAAlG,MAAA+P,eAAA,cAAA7J,EAAA4I,WAAA,GAAA9O,MAAA+P,eAAA,GAAApX,EAAAqX,gBAAA,gBAAA9J,EAAAlG,MAAA+P,eAAAhX,GAAA,WAAA,GAAAD,GAAAW,EAAAI,EAAAC,EAAA,+HAAAE,EAAAJ,EAAAkD,qBAAA,QAAA,EAAA9C,KAAAlB,EAAAc,EAAAgD,cAAA,OAAA9D,EAAAkH,MAAAkO,QAAA,gFAAAlU,EAAA+C,YAAAjE,GAAAiE,YAAAmJ,GAAAA,EAAA1H,UAAA,8CAAA3E,EAAAqM,EAAApJ,qBAAA,MAAAjD,EAAA,GAAAmG,MAAAkO,QAAA,2CAAAhU,EAAA,IAAAL,EAAA,GAAA8G,aAAA9G,EAAA,GAAAmG,MAAAC,QAAA,GAAApG,EAAA,GAAAmG,MAAAC,QAAA,OAAAtH,EAAAsX,sBAAA/V,GAAA,IAAAL,EAAA,GAAA8G,aAAAuF,EAAA1H,UAAA,GAAA0H,EAAAlG,MAAAkO,QAAA,wKAAAvV,EAAAkI,UAAA,IAAAqF,EAAAxF,YAAA/H,EAAAuX,iCAAA,IAAAlW,EAAAmW,UAAAzX,EAAA0X,mBAAAzX,EAAAuW,cAAA,QAAAxW,EAAA0X,iBAAAlK,EAAA,WAAAnO,IAAAY,EAAAqI,kBAAA,SAAAtI,EAAA0X,iBAAAlK,EAAA,QAAA0B,MAAA,QAAAA,MAAAnO,EAAAyM,EAAAnJ,YAAAnD,EAAAgD,cAAA,QAAAnD,EAAAuG,MAAAkO,QAAAhI,EAAAlG,MAAAkO,QAAApU,EAAAL,EAAAuG,MAAAqQ,YAAA5W,EAAAuG,MAAA4H,MAAA,IAAA1B,EAAAlG,MAAA4H,MAAA,MAAAjP,EAAAsW,qBAAAhO,YAAAvI,EAAA0X,iBAAA3W,EAAA,WAAA4W,oBAAAnK,GAAAlG,MAAA8G,OAAApN,IAAAwM,EAAA1H,UAAA,GAAA0H,EAAAlG,MAAAkO,QAAApU,EAAA,8CAAAnB,EAAAkO,uBAAA,IAAAX,EAAAxF,YAAAwF,EAAAlG,MAAAC,QAAA,QAAAiG,EAAA1H,UAAA,cAAA0H,EAAAoI,WAAAtO,MAAA4H,MAAA,MAAAjP,EAAAoO,iBAAA,IAAAb,EAAAxF,YAAA/H,EAAAkO,yBAAA7M,EAAAgG,MAAA8G,KAAA,IAAA9M,EAAAsW,YAAAxX,GAAAA,EAAAoN,EAAArM,EAAAJ,EAAA,QAAAX,EAAAgB,EAAAE,EAAAC,EAAAR,EAAAI,EAAA,KAAAlB,IAAA,IAAAiD,IAAA,+BAAAH,GAAA,UAAA1C,IAAA4B,QAAAR,SAAAJ,QAAA,UAAAG,GAAAmG,KAAAkQ,UAAA/U,QAAA,MAAA,IAAAgV,QAAAC,OAAA,EAAAC,OAAA,6CAAAC,QAAA,GAAAhT,QAAA,SAAAjF,GAAA,MAAAA,GAAAA,EAAAQ,SAAAH,GAAAoB,MAAAzB,EAAAK,GAAAgB,UAAArB,EAAAK,GAAAgB,WAAArB,IAAAwC,EAAAxC,IAAA2B,KAAA,SAAA3B,EAAAC,EAAAG,GAAA,MAAAU,GAAAd,EAAAC,EAAAG,IAAA8X,WAAA,SAAAlY,EAAAC,GAAA,MAAAkC,GAAAnC,EAAAC,IAAA8E,MAAA,SAAA/E,EAAAC,EAAAG,GAAA,MAAAU,GAAAd,EAAAC,EAAAG,GAAA,IAAAsO,YAAA,SAAA1O,EAAAC,GAAA,MAAAkC,GAAAnC,EAAAC,GAAA,IAAAgB,WAAA,SAAAjB,GAAA,GAAAA,EAAAQ,UAAA,IAAAR,EAAAQ,UAAA,IAAAR,EAAAQ,SAAA,OAAA,CAAA,IAAAP,GAAAD,EAAAuF,UAAAlF,GAAAyX,OAAA9X,EAAAuF,SAAAvC,cAAA,QAAA/C,GAAAA,KAAA,GAAAD,EAAAiD,aAAA,aAAAhD,KAAAI,GAAAuP,GAAA3N,QAAAN,KAAA,SAAA3B,EAAAI,GAAA,GAAAW,GAAAC,EAAAE,EAAAuL,KAAA,GAAAtL,EAAA,EAAAC,EAAA,IAAA,IAAApB,IAAAC,EAAA,CAAA,GAAAwM,KAAAtM,SAAAiB,EAAAf,GAAAsB,KAAAT,GAAA,IAAAA,EAAAV,WAAAH,GAAA0E,MAAA7D,EAAA,gBAAA,CAAA,IAAAH,EAAAG,EAAAkW,WAAArW,EAAAZ,OAAAgB,EAAAA,IAAAH,EAAAD,EAAAI,GAAAgX,KAAAnX,EAAAuO,QAAA,WAAAvO,EAAAX,GAAA6B,UAAAlB,EAAAgG,MAAA,IAAAnE,EAAA3B,EAAAF,EAAAI,EAAAJ,IAAAX,IAAA0E,MAAA7D,EAAA,eAAA,GAAA,MAAAE,GAAA,MAAA,gBAAApB,GAAAyM,KAAA9L,KAAA,WAAAN,GAAAsB,KAAA8K,KAAAzM,KAAAK,GAAA0T,OAAAtH,KAAA,SAAArM,GAAA,MAAAA,KAAAH,EAAAiB,EAAA2B,EAAA3B,EAAAlB,EAAAK,GAAAsB,KAAAT,EAAAlB,IAAA,MAAAyM,KAAA9L,KAAA,WAAAN,GAAAsB,KAAA8K,KAAAzM,EAAAI,KAAAH,IAAA,KAAAG,EAAA6R,UAAA9R,OAAA,EAAA,MAAA,IAAA+X,WAAA,SAAAlY,GAAA,MAAAyM,MAAA9L,KAAA,WAAAN,GAAA6X,WAAAzL,KAAAzM,QAAAK,GAAA4B,QAAA+K,MAAA,SAAAhN,EAAAI,EAAAW,GAAA,GAAAC,EAAA,OAAAhB,IAAAI,GAAAA,GAAA,MAAA,QAAAY,EAAAX,GAAA0E,MAAA/E,EAAAI,GAAAW,KAAAC,GAAAX,GAAA+B,QAAArB,GAAAC,EAAAX,GAAA0E,MAAA/E,EAAAI,EAAAC,GAAAqR,UAAA3Q,IAAAC,EAAA0F,KAAA3F,IAAAC,OAAAf,GAAAmY,QAAA,SAAApY,EAAAC,GAAAA,EAAAA,GAAA,IAAA,IAAAG,GAAAC,GAAA2M,MAAAhN,EAAAC,GAAAc,EAAAX,EAAAD,OAAAa,EAAAZ,EAAA4J,QAAA9I,EAAAb,GAAAuN,YAAA5N,EAAAC,GAAAkB,EAAA,WAAAd,GAAA+X,QAAApY,EAAAC,GAAA,gBAAAe,IAAAA,EAAAZ,EAAA4J,QAAAjJ,KAAAG,EAAAmX,IAAArX,EAAAA,IAAA,OAAAf,GAAAG,EAAAkJ,QAAA,oBAAApI,GAAAsL,KAAAxL,EAAA2C,KAAA3D,EAAAmB,EAAAD,KAAAH,GAAAG,GAAAA,EAAA4M,MAAAC,QAAAH,YAAA,SAAA5N,EAAAC,GAAA,GAAAG,GAAAH,EAAA,YAAA,OAAAI,IAAA0E,MAAA/E,EAAAI,IAAAC,GAAA0E,MAAA/E,EAAAI,GAAA0N,MAAAzN,GAAAgU,UAAA,eAAAhP,IAAA,WAAAhF,GAAAqO,YAAA1O,EAAAC,EAAA,SAAAI,GAAAqO,YAAA1O,EAAAI,UAAAC,GAAAuP,GAAA3N,QAAA+K,MAAA,SAAAhN,EAAAI,GAAA,GAAAW,GAAA,CAAA,OAAA,gBAAAf,KAAAI,EAAAJ,EAAAA,EAAA,KAAAe,KAAAA,EAAAkR,UAAA9R,OAAAE,GAAA2M,MAAAP,KAAA,GAAAzM,GAAAI,IAAAH,EAAAwM,KAAAA,KAAA9L,KAAA,WAAA,GAAAV,GAAAI,GAAA2M,MAAAP,KAAAzM,EAAAI,EAAAC,IAAAuN,YAAAnB,KAAAzM,GAAA,OAAAA,GAAA,eAAAC,EAAA,IAAAI,GAAA+X,QAAA3L,KAAAzM,MAAAoY,QAAA,SAAApY,GAAA,MAAAyM,MAAA9L,KAAA,WAAAN,GAAA+X,QAAA3L,KAAAzM,MAAAsY,MAAA,SAAAtY,EAAAC,GAAA,MAAAD,GAAAK,GAAAwM,GAAAxM,GAAAwM,GAAA0L,OAAAvY,IAAAA,EAAAA,EAAAC,EAAAA,GAAA,KAAAwM,KAAAO,MAAA/M,EAAA,SAAAA,EAAAG,GAAA,GAAAW,GAAAgK,WAAA9K,EAAAD,EAAAI,GAAAoM,KAAA,WAAAgM,aAAAzX,OAAA0X,WAAA,SAAAzY,GAAA,MAAAyM,MAAAO,MAAAhN,GAAA,UAAA+L,QAAA,SAAA/L,EAAAI,GAAA,GAAAW,GAAAC,EAAA,EAAAE,EAAAb,GAAAiL,WAAAnK,EAAAsL,KAAArL,EAAAqL,KAAAtM,OAAAmB,EAAA,aAAAN,GAAAE,EAAA4K,YAAA3K,GAAAA,IAAA,KAAA,gBAAAnB,KAAAI,EAAAJ,EAAAA,EAAAC,GAAAD,EAAAA,GAAA,KAAAoB,KAAAL,EAAAV,GAAA0E,MAAA5D,EAAAC,GAAApB,EAAA,cAAAe,GAAAA,EAAA+M,QAAA9M,IAAAD,EAAA+M,MAAAzI,IAAA/D,GAAA,OAAAA,KAAAJ,EAAA6K,QAAA3L,KAAA,IAAAsY,IAAAC,GAAAC,GAAA,YAAAC,GAAA,MAAAC,GAAA,6CAAAC,GAAA,gBAAAC,GAAA,8HAAAC,GAAA,0BAAAC,GAAA7Y,GAAAsC,QAAA8S,gBAAA0D,GAAA9Y,GAAAsC,QAAAgU,KAAAtW,IAAAuP,GAAA3N,QAAAoP,KAAA,SAAArR,EAAAC,GAAA,MAAAI,IAAA0T,OAAAtH,KAAApM,GAAAgR,KAAArR,EAAAC,EAAAgS,UAAA9R,OAAA,IAAAiZ,WAAA,SAAApZ,GAAA,MAAAyM,MAAA9L,KAAA,WAAAN,GAAA+Y,WAAA3M,KAAAzM,MAAAqZ,KAAA,SAAArZ,EAAAC,GAAA,MAAAI,IAAA0T,OAAAtH,KAAApM,GAAAgZ,KAAArZ,EAAAC,EAAAgS,UAAA9R,OAAA,IAAAmZ,WAAA,SAAAtZ,GAAA,MAAAA,GAAAK,GAAAkZ,QAAAvZ,IAAAA,EAAAyM,KAAA9L,KAAA,WAAA,IAAA8L,KAAAzM,GAAAC,QAAAwM,MAAAzM,GAAA,MAAAI,QAAAoZ,SAAA,SAAAxZ,GAAA,GAAAC,GAAAG,EAAAW,EAAAC,EAAAE,EAAAC,EAAA,EAAAC,EAAAqL,KAAAtM,OAAAmB,EAAA,gBAAAtB,IAAAA,CAAA,IAAAK,GAAAoD,WAAAzD,GAAA,MAAAyM,MAAA9L,KAAA,SAAAV,GAAAI,GAAAoM,MAAA+M,SAAAxZ,EAAA2D,KAAA8I,KAAAxM,EAAAwM,KAAAiJ,aAAA,IAAApU,EAAA,IAAArB,GAAAD,GAAA,IAAAY,MAAAC,QAAAO,EAAAD,EAAAA,IAAA,GAAAf,EAAAqM,KAAAtL,GAAAJ,EAAA,IAAAX,EAAAI,WAAAJ,EAAAsV,WAAA,IAAAtV,EAAAsV,UAAA,KAAA5S,QAAA8V,GAAA,KAAA,KAAA,CAAA,IAAA1X,EAAA,EAAAF,EAAAf,EAAAiB,MAAA,EAAAH,EAAAwO,QAAA,IAAAvO,EAAA,OAAAD,GAAAC,EAAA,IAAAZ,GAAAsV,UAAArV,GAAA0F,KAAAhF,GAAA,MAAA0L,OAAAgN,YAAA,SAAAzZ,GAAA,GAAAC,GAAAG,EAAAW,EAAAC,EAAAE,EAAAC,EAAA,EAAAC,EAAAqL,KAAAtM,OAAAmB,EAAA,IAAA2Q,UAAA9R,QAAA,gBAAAH,IAAAA,CAAA,IAAAK,GAAAoD,WAAAzD,GAAA,MAAAyM,MAAA9L,KAAA,SAAAV,GAAAI,GAAAoM,MAAAgN,YAAAzZ,EAAA2D,KAAA8I,KAAAxM,EAAAwM,KAAAiJ,aAAA,IAAApU,EAAA,IAAArB,GAAAD,GAAA,IAAAY,MAAAC,QAAAO,EAAAD,EAAAA,IAAA,GAAAf,EAAAqM,KAAAtL,GAAAJ,EAAA,IAAAX,EAAAI,WAAAJ,EAAAsV,WAAA,IAAAtV,EAAAsV,UAAA,KAAA5S,QAAA8V,GAAA,KAAA,IAAA,CAAA,IAAA1X,EAAA,EAAAF,EAAAf,EAAAiB,MAAA,KAAAH,EAAAwO,QAAA,IAAAvO,EAAA,MAAA,GAAAD,EAAAA,EAAA+B,QAAA,IAAA9B,EAAA,IAAA,IAAAZ,GAAAsV,UAAA1V,EAAAK,GAAA0F,KAAAhF,GAAA,GAAA,MAAA0L,OAAAiN,YAAA,SAAA1Z,EAAAC,GAAA,GAAAG,SAAAJ,GAAAe,EAAA,iBAAAd,EAAA,OAAAI,IAAAoD,WAAAzD,GAAAyM,KAAA9L,KAAA,SAAAP,GAAAC,GAAAoM,MAAAiN,YAAA1Z,EAAA2D,KAAA8I,KAAArM,EAAAqM,KAAAiJ,UAAAzV,GAAAA,KAAAwM,KAAA9L,KAAA,WAAA,GAAA,WAAAP,EAAA,IAAA,GAAAc,GAAAC,EAAA,EAAAC,EAAAf,GAAAoM,MAAAnL,EAAArB,EAAAsB,EAAAvB,EAAAY,MAAAC,QAAAK,EAAAK,EAAAJ,MAAAG,EAAAP,EAAAO,GAAAF,EAAAuY,SAAAzY,GAAAE,EAAAE,EAAA,WAAA,eAAAJ,QAAAd,IAAAY,GAAA,YAAAZ,KAAAqM,KAAAiJ,WAAArV,GAAA0E,MAAA0H,KAAA,gBAAAA,KAAAiJ,WAAAjJ,KAAAiJ,UAAAjJ,KAAAiJ,WAAA1V,KAAA,EAAA,GAAAK,GAAA0E,MAAA0H,KAAA,kBAAA,OAAAkN,SAAA,SAAA3Z,GAAA,IAAA,GAAAC,GAAA,IAAAD,EAAA,IAAAI,EAAA,EAAAW,EAAA0L,KAAAtM,OAAAY,EAAAX,EAAAA,IAAA,GAAA,IAAAqM,KAAArM,GAAAI,WAAA,IAAAiM,KAAArM,GAAAsV,UAAA,KAAA5S,QAAA8V,GAAA,KAAArJ,QAAAtP,IAAA,EAAA,OAAA,CAAA,QAAA,GAAA2Z,IAAA,SAAA5Z,GAAA,GAAAI,GAAAW,EAAAC,EAAAE,EAAAuL,KAAA,EAAA,OAAAwF,WAAA9R,QAAAa,EAAAX,GAAAoD,WAAAzD,GAAAyM,KAAA9L,KAAA,SAAAP,GAAA,GAAAc,GAAAC,EAAAd,GAAAoM,KAAA,KAAAA,KAAAjM,WAAAU,EAAAF,EAAAhB,EAAA2D,KAAA8I,KAAArM,EAAAe,EAAAyY,OAAA5Z,EAAA,MAAAkB,EAAAA,EAAA,GAAA,gBAAAA,GAAAA,GAAA,GAAAb,GAAA+B,QAAAlB,KAAAA,EAAAb,GAAAiC,IAAApB,EAAA,SAAAlB,GAAA,MAAA,OAAAA,EAAA,GAAAA,EAAA,MAAAe,EAAAV,GAAAwZ,SAAApN,KAAAnM,OAAAD,GAAAwZ,SAAApN,KAAAlH,SAAAvC,eAAAjC,GAAA,OAAAA,IAAAA,EAAA+Y,IAAArN,KAAAvL,EAAA,WAAAjB,IAAAwM,KAAAtG,MAAAjF,OAAAA,GAAAH,EAAAV,GAAAwZ,SAAA3Y,EAAAZ,OAAAD,GAAAwZ,SAAA3Y,EAAAqE,SAAAvC,eAAAjC,GAAA,OAAAA,KAAAX,EAAAW,EAAA8Q,IAAA3Q,EAAA,YAAAjB,EAAAG,GAAAA,EAAAc,EAAAiF,MAAA,gBAAA/F,GAAAA,EAAA0C,QAAA+V,GAAA,IAAA,MAAAzY,EAAA,GAAAA,IAAA,UAAAC,GAAA4B,QAAA4X,UAAAE,QAAAlI,IAAA,SAAA7R,GAAA,GAAAC,GAAAD,EAAAoX,WAAAjR,KAAA,QAAAlG,GAAAA,EAAAwE,UAAAzE,EAAAmG,MAAAnG,EAAA0F,OAAAsU,QAAAnI,IAAA,SAAA7R,GAAA,IAAA,GAAAC,GAAAG,EAAAW,EAAAf,EAAAia,QAAAjZ,EAAAhB,EAAAka,cAAAhZ,EAAA,eAAAlB,EAAAM,MAAA,EAAAU,EAAAG,EAAAD,EAAA,QAAAE,EAAAF,EAAAF,EAAA,EAAAD,EAAAZ,OAAAmB,EAAA,EAAAN,EAAAI,EAAAF,EAAAF,EAAA,EAAAI,EAAAE,EAAAA,IAAA,GAAAlB,EAAAW,EAAAO,MAAAlB,EAAAiG,UAAA/E,IAAAN,IAAAX,GAAAsC,QAAA+T,YAAAtW,EAAAwU,SAAA,OAAAxU,EAAA6C,aAAA,cAAA7C,EAAAuF,WAAAiP,UAAAvU,GAAAkF,SAAAnF,EAAAuF,WAAA,aAAA,CAAA,GAAA1F,EAAAI,GAAAD,GAAAwZ,MAAA1Y,EAAA,MAAAjB,EAAAkB,GAAAuF,KAAAzG,GAAA,MAAAkB,IAAA2Y,IAAA,SAAA9Z,EAAAC,GAAA,GAAAG,GAAAC,GAAAqR,UAAAzR,EAAA,OAAAI,IAAAL,GAAAkR,KAAA,UAAAvQ,KAAA,WAAA8L,KAAApG,SAAAhG,GAAAyD,QAAAzD,GAAAoM,MAAAmN,MAAAxZ,IAAA,IAAAA,EAAAD,SAAAH,EAAAka,cAAA,IAAA9Z,KAAAiR,KAAA,SAAArR,EAAAI,EAAAW,GAAA,GAAAG,GAAAC,EAAAC,EAAAE,EAAAtB,EAAAQ,QAAA,OAAAR,IAAA,IAAAsB,GAAA,IAAAA,GAAA,IAAAA,QAAAtB,GAAAiD,eAAAjC,EAAAX,GAAAgZ,KAAArZ,EAAAI,EAAAW,IAAAI,EAAA,IAAAG,IAAAjB,GAAA8Z,SAAAna,GAAAmB,IAAAf,EAAAA,EAAA4C,cAAA9B,EAAAb,GAAA+Z,UAAAha,KAAA4Y,GAAA7V,KAAA/C,GAAAuY,GAAAD,KAAA3X,IAAAd,EAAAiB,GAAAC,GAAA,OAAAD,IAAA,QAAAE,EAAAF,EAAA2Q,IAAA7R,EAAAI,IAAAgB,SAAApB,GAAAiD,eAAAjC,IAAAI,EAAApB,EAAAiD,aAAA7C,IAAA,MAAAgB,EAAAnB,EAAAmB,GAAA,OAAAL,EAAAG,GAAAC,GAAA,OAAAD,KAAAE,EAAAF,EAAA4Y,IAAA9Z,EAAAe,EAAAX,MAAAH,EAAAmB,GAAApB,EAAAuV,aAAAnV,EAAAW,EAAA,IAAAA,IAAAV,GAAA+Y,WAAApZ,EAAAI,GAAAH,IAAA,QAAAmZ,WAAA,SAAApZ,EAAAC,GAAA,GAAAG,GAAAW,EAAAC,EAAA,EAAAE,EAAAjB,GAAAA,EAAAW,MAAAC,GAAA,IAAAK,GAAA,IAAAlB,EAAAQ,SAAA,KAAAJ,EAAAc,EAAAF,MAAAD,EAAAV,GAAAkZ,QAAAnZ,IAAAA,EAAA4Y,GAAA7V,KAAA/C,IAAA8Y,IAAAD,GAAA9V,KAAA/C,GAAAJ,EAAAK,GAAA6B,UAAA,WAAA9B,IAAAJ,EAAAe,IAAA,EAAAf,EAAAe,IAAA,EAAAV,GAAAgR,KAAArR,EAAAI,EAAA,IAAAJ,EAAA6E,gBAAAqU,GAAA9Y,EAAAW,IAAAqZ,WAAA9Z,MAAAwZ,IAAA,SAAA9Z,EAAAC,GAAA,IAAAI,GAAAsC,QAAAiU,YAAA,UAAA3W,GAAAI,GAAAkF,SAAAvF,EAAA,SAAA,CAAA,GAAAI,GAAAJ,EAAAmG,KAAA,OAAAnG,GAAAuV,aAAA,OAAAtV,GAAAG,IAAAJ,EAAAmG,MAAA/F,GAAAH,MAAAsZ,SAAAc,SAAA,WAAAC,SAAA,WAAAC,MAAA,UAAAC,QAAA,YAAAC,UAAA,YAAAC,YAAA,cAAAC,YAAA,cAAAC,QAAA,UAAAC,QAAA,UAAAC,OAAA,SAAAC,YAAA,cAAAC,gBAAA,mBAAA3B,KAAA,SAAArZ,EAAAI,EAAAW,GAAA,GAAAC,GAAAE,EAAAC,EAAAC,EAAApB,EAAAQ,QAAA,OAAAR,IAAA,IAAAoB,GAAA,IAAAA,GAAA,IAAAA,GAAAD,EAAA,IAAAC,IAAAf,GAAA8Z,SAAAna,GAAAmB,IAAAf,EAAAC,GAAAkZ,QAAAnZ,IAAAA,EAAAc,EAAAb,GAAA4a,UAAA7a,IAAAW,IAAAd,EAAAiB,GAAA,OAAAA,KAAAF,EAAAE,EAAA4Y,IAAA9Z,EAAAe,EAAAX,MAAAH,EAAAe,EAAAhB,EAAAI,GAAAW,EAAAG,GAAA,OAAAA,IAAA,QAAAF,EAAAE,EAAA2Q,IAAA7R,EAAAI,IAAAY,EAAAhB,EAAAI,IAAA,QAAA6a,WAAAC,UAAArJ,IAAA,SAAA7R,GAAA,GAAAI,GAAAJ,EAAAwE,iBAAA,WAAA,OAAApE,IAAAA,EAAAqE,UAAA0W,SAAA/a,EAAA+F,MAAA,IAAA2S,GAAA3V,KAAAnD,EAAAuF,WAAAwT,GAAA5V,KAAAnD,EAAAuF,WAAAvF,EAAAob,KAAA,EAAAnb;MAAA0Y,IAAA9G,IAAA,SAAA7R,EAAAI,GAAA,GAAAW,GAAAV,GAAAgZ,KAAArZ,EAAAI,GAAAY,EAAA,iBAAAD,IAAAf,EAAAiD,aAAA7C,GAAAc,EAAA,iBAAAH,GAAAoY,IAAAD,GAAA,MAAAlY,EAAAiY,GAAA9V,KAAA/C,GAAAJ,EAAAK,GAAA6B,UAAA,WAAA9B,MAAAY,EAAAhB,EAAAwE,iBAAApE,EAAA,OAAAc,IAAAA,EAAAiF,SAAA,EAAA/F,EAAA4C,cAAA/C,GAAA6Z,IAAA,SAAA9Z,EAAAC,EAAAG,GAAA,MAAAH,MAAA,EAAAI,GAAA+Y,WAAApZ,EAAAI,GAAA+Y,IAAAD,KAAAD,GAAA9V,KAAA/C,GAAAJ,EAAAuV,cAAA2D,IAAA7Y,GAAAkZ,QAAAnZ,IAAAA,EAAAA,GAAAJ,EAAAK,GAAA6B,UAAA,WAAA9B,IAAAJ,EAAAI,IAAA,EAAAA,IAAA+Y,IAAAD,KAAA7Y,GAAA+Z,UAAAjU,OAAA0L,IAAA,SAAA7R,EAAAI,GAAA,GAAAW,GAAAf,EAAAwE,iBAAApE,EAAA,OAAAC,IAAAkF,SAAAvF,EAAA,SAAAA,EAAAsG,aAAAvF,GAAAA,EAAA0D,UAAA1D,EAAAoF,MAAAlG,GAAA6Z,IAAA,SAAA9Z,EAAAI,EAAAW,GAAA,MAAAV,IAAAkF,SAAAvF,EAAA,UAAAA,EAAAsG,aAAAlG,EAAAH,GAAAyY,IAAAA,GAAAoB,IAAA9Z,EAAAI,EAAAW,MAAAmY,KAAAR,GAAArY,GAAAwZ,SAAAwB,QAAAxJ,IAAA,SAAA7R,EAAAI,GAAA,GAAAW,GAAAf,EAAAwE,iBAAApE,EAAA,OAAAW,KAAA,OAAAX,GAAA,SAAAA,GAAA,WAAAA,EAAA,KAAAW,EAAAoF,MAAApF,EAAA0D,WAAA1D,EAAAoF,MAAAlG,GAAA6Z,IAAA,SAAA9Z,EAAAI,EAAAW,GAAA,GAAAC,GAAAhB,EAAAwE,iBAAAzD,EAAA,OAAAC,IAAAhB,EAAAsb,iBAAAta,EAAAhB,EAAAsE,cAAAiX,gBAAAxa,IAAAC,EAAAmF,MAAA/F,GAAA,GAAA,UAAAW,GAAAX,IAAAJ,EAAAiD,aAAAlC,GAAAX,EAAAH,IAAAI,GAAA+Z,UAAAY,iBAAAnJ,IAAA6G,GAAA7G,IAAAiI,IAAA,SAAA9Z,EAAAC,EAAAG,GAAAsY,GAAAoB,IAAA9Z,EAAA,KAAAC,GAAA,EAAAA,EAAAG,KAAAC,GAAAM,MAAA,QAAA,UAAA,SAAAX,EAAAI,GAAAC,GAAA+Z,UAAAha,GAAAC,GAAA4B,OAAA5B,GAAA+Z,UAAAha,IAAA0Z,IAAA,SAAA9Z,EAAAe,GAAA,MAAA,KAAAA,GAAAf,EAAAuV,aAAAnV,EAAA,QAAAW,GAAAd,QAAAI,GAAAsC,QAAAoT,iBAAA1V,GAAAM,MAAA,OAAA,MAAA,QAAA,UAAA,SAAAX,EAAAI,GAAAC,GAAA+Z,UAAAha,GAAAC,GAAA4B,OAAA5B,GAAA+Z,UAAAha,IAAAyR,IAAA,SAAA7R,GAAA,GAAAe,GAAAf,EAAAiD,aAAA7C,EAAA,EAAA,OAAA,OAAAW,EAAAd,EAAAc,OAAAV,GAAAM,MAAA,OAAA,OAAA,SAAAX,EAAAC,GAAAI,GAAA4a,UAAAhb,IAAA4R,IAAA,SAAA7R,GAAA,MAAAA,GAAAiD,aAAAhD,EAAA,QAAAI,GAAAsC,QAAA2E,QAAAjH,GAAA+Z,UAAA9S,OAAAuK,IAAA,SAAA7R,GAAA,MAAAA,GAAAsH,MAAAkO,SAAAvV,GAAA6Z,IAAA,SAAA9Z,EAAAC,GAAA,MAAAD,GAAAsH,MAAAkO,QAAAvV,EAAA,MAAAI,GAAAsC,QAAAuT,cAAA7V,GAAA4a,UAAA5U,SAAAhG,GAAA4B,OAAA5B,GAAA4a,UAAA5U,UAAAwL,IAAA,SAAA7R,GAAA,GAAAC,GAAAD,EAAA2F,UAAA,OAAA1F,KAAAA,EAAAia,cAAAja,EAAA0F,YAAA1F,EAAA0F,WAAAuU,eAAA,SAAA7Z,GAAAsC,QAAAwT,UAAA9V,GAAAkZ,QAAApD,QAAA,YAAA9V,GAAAsC,QAAAsT,SAAA5V,GAAAM,MAAA,QAAA,YAAA,WAAAN,GAAAwZ,SAAApN,OAAAoF,IAAA,SAAA7R,GAAA,MAAA,QAAAA,EAAAiD,aAAA,SAAA,KAAAjD,EAAAmG,UAAA9F,GAAAM,MAAA,QAAA,YAAA,WAAAN,GAAAwZ,SAAApN,MAAApM,GAAA4B,OAAA5B,GAAAwZ,SAAApN,OAAAqN,IAAA,SAAA9Z,EAAAI,GAAA,MAAAC,IAAA+B,QAAAhC,GAAAJ,EAAAkG,QAAA7F,GAAAyD,QAAAzD,GAAAL,GAAA4Z,MAAAxZ,IAAA,EAAAH,MAAA,IAAAub,IAAA,+BAAAC,GAAA,OAAAC,GAAA,+BAAAC,GAAA,kCAAAC,GAAA,sBAAAvb,IAAA+E,OAAAyW,UAAAxW,IAAA,SAAArF,EAAAI,EAAAW,EAAAG,EAAAC,GAAA,GAAAC,GAAAE,EAAAC,EAAAK,EAAAJ,EAAAE,EAAA8L,EAAAC,EAAAC,EAAAC,EAAA8B,EAAAE,EAAAtP,GAAA0E,MAAA/E,EAAA,IAAA2P,EAAA,CAAA,IAAA5O,EAAA+a,UAAAla,EAAAb,EAAAA,EAAAa,EAAAka,QAAA3a,EAAAS,EAAA6P,UAAA1Q,EAAAe,OAAAf,EAAAe,KAAAzB,GAAAyB,SAAAR,EAAAqO,EAAAzK,UAAA5D,EAAAqO,EAAAzK,YAAAxD,EAAAiO,EAAAxK,UAAAzD,EAAAiO,EAAAxK,OAAA,SAAAnF,GAAA,aAAAK,MAAAW,GAAAhB,GAAAK,GAAA+E,MAAA2W,YAAA/b,EAAAM,KAAAL,EAAAI,GAAA+E,MAAA4W,SAAAhK,MAAAtQ,EAAA8J,KAAAyG,YAAAvQ,EAAA8J,KAAAxL,GAAAI,GAAAA,GAAA,IAAAQ,MAAAC,MAAA,IAAAU,EAAAnB,EAAAD,OAAAoB,KAAAH,EAAAwa,GAAAhX,KAAAxE,EAAAmB,QAAAmM,EAAA+B,EAAArO,EAAA,GAAAuM,GAAAvM,EAAA,IAAA,IAAAmB,MAAA,KAAA8P,OAAA7Q,EAAAnB,GAAA+E,MAAA6W,QAAAvO,OAAAA,GAAAvM,EAAAK,EAAA0a,aAAA1a,EAAA2a,WAAAzO,EAAAlM,EAAAnB,GAAA+E,MAAA6W,QAAAvO,OAAAF,EAAAnN,GAAA4B,QAAA3B,KAAAoN,EAAA0O,SAAA3M,EAAA9N,KAAAT,EAAA4a,QAAA/a,EAAAe,KAAAf,EAAAe,KAAA2P,SAAAtQ,EAAAkb,aAAAlb,GAAAd,GAAAic,KAAA1b,MAAAyb,aAAAlZ,KAAAhC,GAAAob,UAAA5O,EAAA6O,KAAA,MAAA5a,IAAA6L,EAAAnM,EAAAoM,MAAAD,EAAAnM,EAAAoM,MAAAD,EAAAgP,cAAA,EAAAjb,EAAAkb,OAAAlb,EAAAkb,MAAA/Y,KAAA3D,EAAAkB,EAAAyM,EAAAjM,MAAA,IAAA1B,EAAA0Q,iBAAA1Q,EAAA0Q,iBAAAhD,EAAAhM,GAAA,GAAA1B,EAAAkU,aAAAlU,EAAAkU,YAAA,KAAAxG,EAAAhM,KAAAF,EAAA6D,MAAA7D,EAAA6D,IAAA1B,KAAA3D,EAAAwN,GAAAA,EAAAsO,QAAAha,OAAA0L,EAAAsO,QAAAha,KAAAf,EAAAe,OAAAX,EAAAsM,EAAAlD,OAAAkD,EAAAgP,gBAAA,EAAAjP,GAAAC,EAAA/G,KAAA8G,GAAAnN,GAAA+E,MAAAyW,OAAAnO,IAAA,CAAA1N,GAAA,OAAAkJ,OAAA,SAAAlJ,EAAAC,EAAAG,EAAAW,EAAAC,GAAA,GAAAE,GAAAC,EAAAC,EAAAE,EAAAC,EAAAK,EAAAJ,EAAAE,EAAA8L,EAAAC,EAAAC,EAAAC,EAAAtN,GAAA4E,QAAAjF,IAAAK,GAAA0E,MAAA/E,EAAA,IAAA2N,IAAA/L,EAAA+L,EAAAzI,QAAA,CAAA,IAAAjF,GAAAA,GAAA,IAAAW,MAAAC,MAAA,IAAAU,EAAAtB,EAAAE,OAAAoB,KAAA,GAAAH,EAAAwa,GAAAhX,KAAA3E,EAAAsB,QAAAiM,EAAAE,EAAAtM,EAAA,GAAAqM,GAAArM,EAAA,IAAA,IAAAmB,MAAA,KAAA8P,OAAA7E,EAAA,CAAA,IAAAhM,EAAAnB,GAAA+E,MAAA6W,QAAAzO,OAAAA,GAAAzM,EAAAS,EAAA0a,aAAA1a,EAAA2a,WAAA3O,EAAA9L,EAAAE,EAAA4L,OAAApM,EAAAA,EAAA,IAAAub,OAAA,UAAAlP,EAAA+O,KAAA,iBAAA,WAAAlb,EAAAJ,EAAAQ,EAAAvB,OAAAe,KAAAC,EAAAO,EAAAR,IAAAF,GAAA0M,IAAAvM,EAAAib,UAAAhc,GAAAA,EAAA0B,OAAAX,EAAAW,MAAAV,IAAAA,EAAA+B,KAAAhC,EAAAob,YAAAxb,GAAAA,IAAAI,EAAAsQ,WAAA,OAAA1Q,IAAAI,EAAAsQ,YAAA/P,EAAA6I,OAAArJ,EAAA,GAAAC,EAAAsQ,UAAA/P,EAAA+a,gBAAAjb,EAAA0H,QAAA1H,EAAA0H,OAAAvF,KAAA3D,EAAAmB,GAAAG,KAAAI,EAAAvB,SAAAqB,EAAAob,UAAApb,EAAAob,SAAAjZ,KAAA3D,EAAAyN,EAAAE,EAAAxI,WAAA,GAAA9E,GAAAoF,YAAAzF,EAAAwN,EAAAG,EAAAxI,cAAAvD,GAAA4L,QAAA,KAAAA,IAAA5L,GAAAvB,GAAA+E,MAAA8D,OAAAlJ,EAAAwN,EAAAvN,EAAAsB,GAAAnB,EAAAW,GAAA,EAAAV,IAAAoC,cAAAb,WAAA+L,GAAAxI,OAAA9E,GAAAqO,YAAA1O,EAAA,aAAA0S,QAAA,SAAAtS,EAAAW,EAAAC,EAAAG,GAAA,GAAAC,GAAAE,EAAAC,EAAAK,EAAAJ,EAAAE,EAAA8L,EAAAC,GAAAzM,GAAAE,GAAAwM,EAAA+B,GAAA9L,KAAAvD,EAAA,QAAAA,EAAAE,KAAAF,EAAAuN,EAAA8B,GAAA9L,KAAAvD,EAAA,aAAAA,EAAAmc,UAAAha,MAAA,OAAA,IAAAhB,EAAAG,EAAAV,EAAAA,GAAAE,EAAA,IAAAF,EAAAR,UAAA,IAAAQ,EAAAR,WAAAmb,GAAAxY,KAAAuK,EAAArN,GAAA+E,MAAA2W,aAAArO,EAAA6B,QAAA,MAAA,IAAA5B,EAAAD,EAAAnL,MAAA,KAAAmL,EAAAC,EAAA3D,QAAA2D,EAAA0E,QAAA/Q,EAAA,EAAAoM,EAAA6B,QAAA,MAAA,KAAA7B,EAAAtN,EAAAA,EAAAC,GAAAgB,SAAAjB,EAAA,GAAAC,IAAAwc,MAAAnP,EAAA,gBAAAtN,IAAAA,GAAAA,EAAA0c,WAAA,EAAA1c,EAAAmc,UAAA5O,EAAA6O,KAAA,KAAApc,EAAA2c,aAAA3c,EAAAmc,UAAAI,OAAA,UAAAhP,EAAA6O,KAAA,iBAAA,WAAA,KAAApc,EAAA4c,OAAA/c,EAAAG,EAAA6c,SAAA7c,EAAA6c,OAAAjc,GAAAD,EAAA,MAAAA,GAAAX,GAAAC,GAAAqR,UAAA3Q,GAAAX,IAAAoB,EAAAnB,GAAA+E,MAAA6W,QAAAvO,OAAAvM,IAAAK,EAAAkR,SAAAlR,EAAAkR,QAAAV,MAAAhR,EAAAD,MAAA,GAAA,CAAA,IAAAI,IAAAK,EAAA0b,WAAA7c,GAAAE,SAAAS,GAAA,CAAA,IAAAY,EAAAJ,EAAA0a,cAAAxO,EAAAiO,GAAAxY,KAAAvB,EAAA8L,KAAAnM,EAAAA,EAAAoE,YAAApE,EAAAA,EAAAA,EAAAoE,WAAA8H,EAAA/G,KAAAnF,GAAAG,EAAAH,CAAAG,MAAAV,EAAAsD,eAAApD,IAAAuM,EAAA/G,KAAAhF,EAAA0N,aAAA1N,EAAA2N,cAAArP,GAAA,IAAAwN,EAAA,GAAAjM,EAAAkM,EAAAD,QAAApN,EAAA+c,wBAAA/c,EAAAE,KAAAkN,EAAA,EAAA5L,EAAAJ,EAAA2a,UAAAzO,EAAAtM,GAAAf,GAAA0E,MAAAxD,EAAA,eAAAnB,EAAAE,OAAAD,GAAA0E,MAAAxD,EAAA,UAAAH,GAAAA,EAAA4Q,MAAAzQ,EAAAR,GAAAK,EAAAE,GAAAC,EAAAD,GAAAF,GAAAf,GAAAY,WAAAM,IAAAH,EAAA4Q,OAAA5Q,EAAA4Q,MAAAzQ,EAAAR,MAAA,GAAAX,EAAAgd,gBAAA,IAAAhd,EAAAE,KAAAoN,IAAAvM,GAAAf,EAAAid,sBAAA7b,EAAA8b,UAAA9b,EAAA8b,SAAAtL,MAAAhR,EAAAsD,cAAAvD,MAAA,GAAA,UAAA2M,GAAArN,GAAAkF,SAAAvE,EAAA,OAAAX,GAAAY,WAAAD,KAAAM,IAAAN,EAAA0M,IAAArN,GAAAE,SAAAS,IAAA,CAAAU,EAAAV,EAAAM,GAAAI,IAAAV,EAAAM,GAAA,MAAAjB,GAAA+E,MAAA2W,UAAArO,CAAA,KAAA1M,EAAA0M,KAAA,MAAAiC,IAAAtP,GAAA+E,MAAA2W,UAAA9b,EAAAyB,IAAAV,EAAAM,GAAAI,GAAA,MAAAtB,GAAA4c,SAAAhB,SAAA,SAAAhc,GAAAA,EAAAK,GAAA+E,MAAAmY,IAAAvd,EAAA,IAAAI,GAAAW,EAAAC,EAAAE,EAAAC,EAAAC,KAAAE,EAAAmM,GAAA9J,KAAAsO,WAAA1Q,GAAAlB,GAAA0E,MAAA0H,KAAA,eAAAzM,EAAAM,UAAAsB,EAAAvB,GAAA+E,MAAA6W,QAAAjc,EAAAM,SAAA,IAAAgB,EAAA,GAAAtB,EAAAA,EAAAwd,eAAA/Q,MAAA7K,EAAA6b,aAAA7b,EAAA6b,YAAA9Z,KAAA8I,KAAAzM,MAAA,EAAA,CAAA,IAAAoB,EAAAf,GAAA+E,MAAAsY,SAAA/Z,KAAA8I,KAAAzM,EAAAuB,GAAAnB,EAAA,GAAAc,EAAAE,EAAAhB,QAAAJ,EAAAmd,wBAAA,IAAAnd,EAAA2d,cAAAzc,EAAAsK,KAAArK,EAAA,GAAAH,EAAAE,EAAAwc,SAAAvc,QAAAnB,EAAA4d,mCAAA5d,EAAA+c,cAAA/c,EAAA+c,aAAA5Z,KAAAnC,EAAAub,cAAAvc,EAAA6d,UAAA7c,EAAAhB,EAAA2B,KAAAX,EAAAW,KAAAZ,IAAAV,GAAA+E,MAAA6W,QAAAjb,EAAAob,eAAAjX,QAAAnE,EAAA8a,SAAA9J,MAAA9Q,EAAAsK,KAAAlK,GAAAP,IAAAd,IAAAD,EAAAgd,OAAAjc,MAAA,IAAAf,EAAAod,iBAAApd,EAAA8d,mBAAA,OAAAlc,GAAAmc,cAAAnc,EAAAmc,aAAApa,KAAA8I,KAAAzM,GAAAA,EAAAgd,SAAAU,SAAA,SAAA1d,EAAAI,GAAA,GAAAW,GAAAC,EAAAE,EAAAC,EAAAC,KAAAE,EAAAlB,EAAAqc,cAAAlb,EAAAvB,EAAAid,MAAA,IAAA3b,GAAAC,EAAAf,YAAAR,EAAAqb,QAAA,UAAArb,EAAAM,MAAA,KAAAiB,GAAAkL,KAAAlL,EAAAA,EAAAoE,YAAA8G,KAAA,GAAA,IAAAlL,EAAAf,WAAAe,EAAAqT,YAAA,GAAA,UAAA5U,EAAAM,MAAA,CAAA,IAAAY,KAAAC,EAAA,EAAAG,EAAAH,EAAAA,IAAAH,EAAAZ,EAAAe,GAAAJ,EAAAC,EAAAyQ,SAAA,IAAAvQ,EAAAH,KAAAd,IAAAiB,EAAAH,GAAAC,EAAAqb,aAAAhc,GAAAU,EAAA0L,MAAAuR,MAAAzc,IAAA,EAAAlB,GAAA6Q,KAAAnQ,EAAA0L,KAAA,MAAAlL,IAAApB,QAAAe,EAAAH,IAAAG,EAAAwF,KAAA1F,EAAAE,GAAAf,QAAAiB,EAAAsF,MAAA8E,KAAAjK,EAAAmc,SAAAxc,IAAA,MAAAd,GAAAD,OAAAmB,GAAAF,EAAAsF,MAAA8E,KAAAiB,KAAAiR,SAAAtd,EAAA4G,MAAA1F,KAAAF,GAAAmc,IAAA,SAAAvd,GAAA,GAAAA,EAAAK,GAAAgB,SAAA,MAAArB,EAAA,IAAAC,GAAAG,EAAAW,EAAAC,EAAAhB,EAAAM,KAAAa,EAAAnB,EAAAoB,EAAAqL,KAAAwR,SAAAjd,EAAA,KAAAI,IAAAqL,KAAAwR,SAAAjd,GAAAI,EAAAsa,GAAAvY,KAAAnC,GAAAyL,KAAAyR,WAAAzC,GAAAtY,KAAAnC,GAAAyL,KAAA0R,aAAApd,EAAAK,EAAA4K,MAAAS,KAAAT,MAAA3J,OAAAjB,EAAA4K,OAAAS,KAAAT,MAAAhM,EAAA,GAAAK,IAAAwc,MAAA1b,GAAAlB,EAAAc,EAAAZ,OAAAF,KAAAG,EAAAW,EAAAd,GAAAD,EAAAI,GAAAe,EAAAf,EAAA,OAAAJ,GAAAid,SAAAjd,EAAAid,OAAA9b,EAAAid,YAAAld,GAAA,IAAAlB,EAAAid,OAAAzc,WAAAR,EAAAid,OAAAjd,EAAAid,OAAAtX,YAAA3F,EAAAqe,UAAAre,EAAAqe,QAAAjd,EAAAyC,OAAAzC,EAAAyC,OAAA7D,EAAAmB,GAAAnB,GAAAgM,MAAA,wHAAAzJ,MAAA,KAAA0b,YAAAE,UAAAnS,MAAA,4BAAAzJ,MAAA,KAAAsB,OAAA,SAAA7D,EAAAC,GAAA,MAAA,OAAAD,EAAAse,QAAAte,EAAAse,MAAA,MAAAre,EAAAse,SAAAte,EAAAse,SAAAte,EAAAue,SAAAxe,IAAAke,YAAAlS,MAAA,mGAAAzJ,MAAA,KAAAsB,OAAA,SAAA7D,EAAAI,GAAA,GAAAW,GAAAC,EAAAG,EAAAC,EAAAhB,EAAAib,OAAA/Z,EAAAlB,EAAAqe,WAAA,OAAA,OAAAze,EAAA0e,OAAA,MAAAte,EAAAue,UAAA3d,EAAAhB,EAAAid,OAAA3Y,eAAApD,EAAAC,EAAAH,EAAArB,gBAAAoB,EAAAC,EAAAiI,KAAAjJ,EAAA0e,MAAAte,EAAAue,SAAAxd,GAAAA,EAAAyd,YAAA7d,GAAAA,EAAA6d,YAAA,IAAAzd,GAAAA,EAAA0d,YAAA9d,GAAAA,EAAA8d,YAAA,GAAA7e,EAAA8e,MAAA1e,EAAA2e,SAAA5d,GAAAA,EAAA6d,WAAAje,GAAAA,EAAAie,WAAA,IAAA7d,GAAAA,EAAA8d,WAAAle,GAAAA,EAAAke,WAAA,KAAAjf,EAAAkf,eAAA5d,IAAAtB,EAAAkf,cAAA5d,IAAAtB,EAAAid,OAAA7c,EAAA+e,UAAA7d,GAAAtB,EAAAse,OAAAld,IAAAnB,IAAAD,EAAAse,MAAA,EAAAld,EAAA,EAAA,EAAAA,EAAA,EAAA,EAAAA,EAAA,EAAA,GAAApB,IAAAic,SAAAmD,MAAAlC,UAAA,GAAAlG,OAAAtE,QAAA,WAAA,MAAArS,IAAAkF,SAAAkH,KAAA,UAAA,aAAAA,KAAAnM,MAAAmM,KAAAuK,OAAAvK,KAAAuK,SAAA,GAAA/W,IAAAof,OAAA3M,QAAA,WAAA,GAAAjG,OAAAvL,EAAAoe,eAAA7S,KAAA4S,MAAA,IAAA,MAAA5S,MAAA4S,SAAA,EAAA,MAAArf,MAAAkc,aAAA,WAAAqD,MAAA7M,QAAA,WAAA,MAAAjG,QAAAvL,EAAAoe,eAAA7S,KAAA8S,MAAA9S,KAAA8S,QAAA,GAAAtf,GAAAic,aAAA,YAAAsD,cAAAzB,aAAA,SAAA/d,GAAAA,EAAAgd,SAAA/c,IAAAD,EAAAyf,cAAAC,YAAA1f,EAAAgd,WAAA2C,SAAA,SAAA3f,EAAAC,EAAAG,EAAAW,GAAA,GAAAC,GAAAX,GAAA4B,OAAA,GAAA5B,IAAAwc,MAAAzc,GAAAE,KAAAN,EAAA4f,aAAA,EAAAH,kBAAA1e,GAAAV,GAAA+E,MAAAsN,QAAA1R,EAAA,KAAAf,GAAAI,GAAA+E,MAAA4W,SAAArY,KAAA1D,EAAAe,GAAAA,EAAAqc,sBAAAjd,EAAAgd,mBAAA/c,GAAAoF,YAAAvE,EAAA4P,oBAAA,SAAA9Q,EAAAC,EAAAG,GAAAJ,EAAA8Q,qBAAA9Q,EAAA8Q,oBAAA7Q,EAAAG,GAAA,IAAA,SAAAJ,EAAAC,EAAAG,GAAA,GAAAW,GAAA,KAAAd,CAAAD,GAAA+Q,oBAAA/Q,GAAAe,KAAAC,IAAAhB,EAAAe,GAAA,MAAAf,EAAA+Q,YAAAhQ,EAAAX,KAAAC,GAAAwc,MAAA,SAAA7c,EAAAI,GAAA,MAAAqM,gBAAApM,IAAAwc,OAAA7c,GAAAA,EAAAM,MAAAmM,KAAAgT,cAAAzf,EAAAyM,KAAAnM,KAAAN,EAAAM,KAAAmM,KAAA4Q,mBAAArd,EAAA6f,kBAAA7f,EAAA0f,eAAA,GAAA1f,EAAA8f,mBAAA9f,EAAA8f,oBAAAzc,EAAAC,GAAAmJ,KAAAnM,KAAAN,EAAAI,GAAAC,GAAA4B,OAAAwK,KAAArM,GAAAqM,KAAAsT,UAAA/f,GAAAA,EAAA+f,WAAA1f,GAAA4K,MAAAwB,KAAApM,GAAAgB,UAAA,EAAApB,GAAA,GAAAI,IAAAwc,MAAA7c,EAAAI,IAAAC,GAAAwc,MAAAhO,WAAAwO,mBAAA/Z,EAAA6Z,qBAAA7Z,EAAAsa,8BAAAta,EAAA8Z,eAAA,WAAA,GAAApd,GAAAyM,KAAAgT,aAAAhT,MAAA4Q,mBAAAha,EAAArD,IAAAA,EAAAod,eAAApd,EAAAod,iBAAApd,EAAA0f,aAAA,IAAA5B,gBAAA,WAAA,GAAA9d,GAAAyM,KAAAgT,aAAAhT,MAAA0Q,qBAAA9Z,EAAArD,IAAAA,EAAA8d,iBAAA9d,EAAA8d,kBAAA9d,EAAAggB,cAAA,IAAAC,yBAAA,WAAAxT,KAAAmR,8BAAAva,EAAAoJ,KAAAqR,oBAAAzd,GAAAM,MAAAuf,WAAA,YAAAC,WAAA,YAAA,SAAAngB,EAAAC,GAAAI,GAAA+E,MAAA6W,QAAAjc,IAAAkc,aAAAjc,EAAAkc,SAAAlc,EAAAkF,OAAA,SAAAnF,GAAA,GAAAI,GAAAW,EAAA0L,KAAAzL,EAAAhB,EAAAkf,cAAAhe,EAAAlB,EAAA6d,SACA,SAAA7c,GAAAA,IAAAD,IAAAV,GAAA+G,SAAArG,EAAAC,MAAAhB,EAAAM,KAAAY,EAAAkb,SAAAhc,EAAAc,EAAA4a,QAAA9J,MAAAvF,KAAAwF,WAAAjS,EAAAM,KAAAL,GAAAG,MAAAC,GAAAsC,QAAAyd,gBAAA/f,GAAA+E,MAAA6W,QAAAhF,QAAAyF,MAAA,WAAA,MAAArc,IAAAkF,SAAAkH,KAAA,SAAA,GAAApM,GAAA+E,MAAAC,IAAAoH,KAAA,iCAAA,SAAAzM,GAAA,GAAAI,GAAAJ,EAAAid,OAAAlc,EAAAV,GAAAkF,SAAAnF,EAAA,UAAAC,GAAAkF,SAAAnF,EAAA,UAAAA,EAAAigB,KAAApgB,CAAAc,KAAAV,GAAA0E,MAAAhE,EAAA,mBAAAV,GAAA+E,MAAAC,IAAAtE,EAAA,iBAAA,SAAAf,GAAAA,EAAAsgB,gBAAA,IAAAjgB,GAAA0E,MAAAhE,EAAA,iBAAA,MAAAd,IAAA8d,aAAA,SAAA/d,GAAAA,EAAAsgB,uBAAAtgB,GAAAsgB,eAAA7T,KAAA9G,aAAA3F,EAAA8c,WAAAzc,GAAA+E,MAAAua,SAAA,SAAAlT,KAAA9G,WAAA3F,GAAA,KAAA4c,SAAA,WAAA,MAAAvc,IAAAkF,SAAAkH,KAAA,SAAA,GAAApM,GAAA+E,MAAA8D,OAAAuD,KAAA,YAAAxM,MAAAI,GAAAsC,QAAA4d,gBAAAlgB,GAAA+E,MAAA6W,QAAA/E,QAAAwF,MAAA,WAAA,MAAAlB,IAAArY,KAAAsJ,KAAAlH,YAAA,aAAAkH,KAAAnM,MAAA,UAAAmM,KAAAnM,QAAAD,GAAA+E,MAAAC,IAAAoH,KAAA,yBAAA,SAAAzM,GAAA,YAAAA,EAAAyf,cAAAe,eAAA/T,KAAAgU,eAAA,KAAApgB,GAAA+E,MAAAC,IAAAoH,KAAA,gBAAA,SAAAzM,GAAAyM,KAAAgU,gBAAAzgB,EAAA8c,YAAArQ,KAAAgU,eAAA,GAAApgB,GAAA+E,MAAAua,SAAA,SAAAlT,KAAAzM,GAAA,OAAA,IAAAK,GAAA+E,MAAAC,IAAAoH,KAAA,yBAAA,SAAAzM,GAAA,GAAAC,GAAAD,EAAAid,MAAAzB,IAAArY,KAAAlD,EAAAsF,YAAAlF,GAAA0E,MAAA9E,EAAA,mBAAAI,GAAA+E,MAAAC,IAAApF,EAAA,iBAAA,SAAAD,IAAAyM,KAAA9G,YAAA3F,EAAA4f,aAAA5f,EAAA8c,WAAAzc,GAAA+E,MAAAua,SAAA,SAAAlT,KAAA9G,WAAA3F,GAAA,KAAAK,GAAA0E,MAAA9E,EAAA,iBAAA,MAAAA,IAAAkF,OAAA,SAAAnF,GAAA,GAAAI,GAAAJ,EAAAid,MAAA,OAAAxQ,QAAArM,GAAAJ,EAAA4f,aAAA5f,EAAA8c,WAAA,UAAA1c,EAAAE,MAAA,aAAAF,EAAAE,KAAAN,EAAA6d,UAAA/B,QAAA9J,MAAAvF,KAAAwF,WAAAhS,GAAA2c,SAAA,WAAA,MAAAvc,IAAA+E,MAAA8D,OAAAuD,KAAA,aAAA+O,GAAArY,KAAAsJ,KAAAlH,aAAAlF,GAAAsC,QAAA+d,gBAAArgB,GAAAM,MAAA0e,MAAA,UAAAE,KAAA,YAAA,SAAAvf,EAAAC,GAAA,GAAAG,GAAA,EAAAW,EAAA,SAAAf,GAAAK,GAAA+E,MAAAua,SAAA1f,EAAAD,EAAAid,OAAA5c,GAAA+E,MAAAmY,IAAAvd,IAAA,GAAAK,IAAA+E,MAAA6W,QAAAhc,IAAAyc,MAAA,WAAA,IAAAtc,KAAAc,EAAAwP,iBAAA1Q,EAAAe,GAAA,IAAA6b,SAAA,WAAA,MAAAxc,GAAAc,EAAA4P,oBAAA9Q,EAAAe,GAAA,OAAAV,GAAAuP,GAAA3N,QAAAwF,GAAA,SAAAzH,EAAAI,EAAAW,EAAAC,EAAAE,GAAA,GAAAC,GAAAC,CAAA,IAAA,gBAAApB,GAAA,CAAA,gBAAAI,KAAAW,EAAAA,GAAAX,EAAAA,EAAAH,EAAA,KAAAkB,IAAAnB,GAAAyM,KAAAhF,GAAAtG,EAAAf,EAAAW,EAAAf,EAAAmB,GAAAD,EAAA,OAAAuL,MAAA,GAAA,MAAA1L,GAAA,MAAAC,GAAAA,EAAAZ,EAAAW,EAAAX,EAAAH,GAAA,MAAAe,IAAA,gBAAAZ,IAAAY,EAAAD,EAAAA,EAAAd,IAAAe,EAAAD,EAAAA,EAAAX,EAAAA,EAAAH,IAAAe,KAAA,EAAAA,EAAAsC,MAAA,KAAAtC,EAAA,MAAAyL,KAAA,OAAA,KAAAvL,IAAAE,EAAAJ,EAAAA,EAAA,SAAAhB,GAAA,MAAAK,MAAAsS,IAAA3S,GAAAoB,EAAA4Q,MAAAvF,KAAAwF,YAAAjR,EAAAc,KAAAV,EAAAU,OAAAV,EAAAU,KAAAzB,GAAAyB,SAAA2K,KAAA9L,KAAA,WAAAN,GAAA+E,MAAAC,IAAAoH,KAAAzM,EAAAgB,EAAAD,EAAAX,MAAAugB,IAAA,SAAA3gB,EAAAC,EAAAG,EAAAW,GAAA,MAAA0L,MAAAhF,GAAAzH,EAAAC,EAAAG,EAAAW,EAAA,IAAA4R,IAAA,SAAA3S,EAAAI,EAAAW,GAAA,GAAAC,GAAAE,CAAA,IAAAlB,GAAAA,EAAAod,gBAAApd,EAAA6d,UAAA,MAAA7c,GAAAhB,EAAA6d,UAAAxd,GAAAL,EAAAwd,gBAAA7K,IAAA3R,EAAAub,UAAAvb,EAAAob,SAAA,IAAApb,EAAAub,UAAAvb,EAAAob,SAAApb,EAAAyQ,SAAAzQ,EAAA8a,SAAArP,IAAA,IAAA,gBAAAzM,GAAA,CAAA,IAAAkB,IAAAlB,GAAAyM,KAAAkG,IAAAzR,EAAAd,EAAAJ,EAAAkB,GAAA,OAAAuL,MAAA,OAAArM,KAAA,GAAA,kBAAAA,MAAAW,EAAAX,EAAAA,EAAAH,GAAAc,KAAA,IAAAA,EAAAuC,GAAAmJ,KAAA9L,KAAA,WAAAN,GAAA+E,MAAA8D,OAAAuD,KAAAzM,EAAAe,EAAAX,MAAAwgB,KAAA,SAAA5gB,EAAAC,EAAAG,GAAA,MAAAqM,MAAAhF,GAAAzH,EAAA,KAAAC,EAAAG,IAAAygB,OAAA,SAAA7gB,EAAAC,GAAA,MAAAwM,MAAAkG,IAAA3S,EAAA,KAAAC,IAAA6gB,SAAA,SAAA9gB,EAAAC,EAAAG,EAAAW,GAAA,MAAA0L,MAAAhF,GAAAxH,EAAAD,EAAAI,EAAAW,IAAAggB,WAAA,SAAA/gB,EAAAC,EAAAG,GAAA,MAAA,KAAA6R,UAAA9R,OAAAsM,KAAAkG,IAAA3S,EAAA,MAAAyM,KAAAkG,IAAA1S,EAAAD,GAAA,KAAAI,IAAAsS,QAAA,SAAA1S,EAAAC,GAAA,MAAAwM,MAAA9L,KAAA,WAAAN,GAAA+E,MAAAsN,QAAA1S,EAAAC,EAAAwM,SAAAuU,eAAA,SAAAhhB,EAAAI,GAAA,GAAAW,GAAA0L,KAAA,EAAA,OAAA1L,GAAAV,GAAA+E,MAAAsN,QAAA1S,EAAAI,EAAAW,GAAA,GAAAd,KAAA,SAAAD,EAAAC,GAAA,QAAA2b,GAAA5b,GAAA,MAAA+Y,IAAA5V,KAAAnD,EAAA,IAAA,QAAAqD,KAAA,GAAArD,GAAAC,IAAA,OAAAD,GAAA,SAAAI,EAAAW,GAAA,MAAAd,GAAAyG,KAAAtG,GAAA,KAAAY,EAAAigB,mBAAAjhB,GAAAC,EAAA+J,SAAAhK,EAAAI,GAAAW,GAAA,QAAAuC,GAAAtD,GAAA,MAAAA,GAAA6P,IAAA,EAAA7P,EAAA,QAAAkhB,GAAAlhB,GAAA,GAAAC,GAAAuB,EAAA0C,cAAA,MAAA,KAAA,MAAAlE,GAAAC,GAAA,MAAAG,GAAA,OAAA,EAAA,QAAAH,EAAA,MAAA,QAAAkhB,GAAAnhB,EAAAC,EAAAG,EAAAW,GAAA,GAAAC,GAAAE,EAAAC,EAAAC,EAAAE,EAAAC,EAAAG,EAAAgM,EAAAC,EAAAgC,CAAA,KAAA1P,EAAAA,EAAAqE,eAAArE,EAAAY,KAAAW,GAAAI,EAAA3B,GAAAA,EAAAA,GAAAuB,EAAApB,EAAAA,OAAAJ,GAAA,gBAAAA,GAAA,MAAAI,EAAA,IAAA,KAAAgB,EAAAnB,EAAAO,WAAA,IAAAY,EAAA,QAAA,KAAAoM,IAAAzM,EAAA,CAAA,GAAAC,EAAAgY,GAAApU,KAAA5E,GAAA,GAAAmB,EAAAH,EAAA,IAAA,GAAA,IAAAI,EAAA,CAAA,GAAAF,EAAAjB,EAAAqR,eAAAnQ,IAAAD,IAAAA,EAAAyE,WAAA,MAAAvF,EAAA,IAAAc,EAAAqQ,KAAApQ,EAAA,MAAAf,GAAAsG,KAAAxF,GAAAd,MAAA,IAAAH,EAAAqE,gBAAApD,EAAAjB,EAAAqE,cAAAgN,eAAAnQ,KAAAsO,EAAAxP,EAAAiB,IAAAA,EAAAqQ,KAAApQ,EAAA,MAAAf,GAAAsG,KAAAxF,GAAAd,MAAA,CAAA,GAAAY,EAAA,GAAA,MAAAyP,GAAAuB,MAAA5R,EAAAwQ,EAAAjN,KAAA1D,EAAAmE,qBAAApE,GAAA,IAAAI,CAAA,KAAAe,EAAAH,EAAA,KAAA+O,EAAAqR,gBAAAnhB,EAAAohB,uBAAA,MAAA5Q,GAAAuB,MAAA5R,EAAAwQ,EAAAjN,KAAA1D,EAAAohB,uBAAAlgB,GAAA,IAAAf,EAAA,GAAA2P,EAAAuR,MAAA7T,EAAAtK,KAAAnD,GAAA,CAAA,GAAA0B,GAAA,EAAAgM,EAAAmC,EAAAlC,EAAA1N,EAAA0P,EAAA,IAAAvO,GAAApB,EAAA,IAAAoB,GAAA,WAAAnB,EAAAsF,SAAAvC,cAAA,CAAA,IAAAzB,EAAAiC,EAAAxD,IAAA0B,EAAAzB,EAAAgD,aAAA,OAAAyK,EAAAhM,EAAAoB,QAAAqW,GAAA,QAAAlZ,EAAAsV,aAAA,KAAA7H,GAAAA,EAAA,QAAAA,EAAA,MAAApM,EAAAC,EAAApB,OAAAmB,KAAAC,EAAAD,GAAAoM,EAAA3J,EAAAxC,EAAAD,GAAAqM,GAAAmL,GAAA3V,KAAAnD,IAAAC,EAAA0F,YAAA1F,EAAA0P,EAAApO,EAAAib,KAAA,KAAA,GAAA7M,EAAA,IAAA,MAAAc,GAAAuB,MAAA5R,EAAAwQ,EAAAjN,KAAAgK,EAAAnH,iBAAAmJ,GAAA,IAAAvP,EAAA,MAAAC,IAAA,QAAAqB,GAAAzB,EAAA4E,gBAAA,QAAA,MAAA0c,GAAAvhB,EAAA8C,QAAAD,GAAA,MAAA5C,EAAAG,EAAAW,GAAA,QAAA6C,GAAA5D,EAAAC,GAAA,GAAAG,GAAAH,GAAAD,EAAAe,EAAAX,KAAAH,EAAAuhB,aAAAlR,KAAAtQ,EAAAwhB,aAAAlR,EAAA,IAAAvP,EAAA,MAAAA,EAAA,IAAAX,EAAA,KAAAA,EAAAA,EAAAqhB,aAAA,GAAArhB,IAAAH,EAAA,MAAA,EAAA,OAAAD,GAAA,EAAA,GAAA,QAAA0hB,GAAA1hB,GAAA,MAAA,UAAAC,GAAA,GAAAG,GAAAH,EAAAsF,SAAAvC,aAAA,OAAA,UAAA5C,GAAAH,EAAAK,OAAAN,GAAA,QAAA2hB,GAAA3hB,GAAA,MAAA,UAAAC,GAAA,GAAAG,GAAAH,EAAAsF,SAAAvC,aAAA,QAAA,UAAA5C,GAAA,WAAAA,IAAAH,EAAAK,OAAAN,GAAA,QAAAuD,GAAAvD,GAAA,MAAAsD,GAAA,SAAArD,GAAA,MAAAA,IAAAA,EAAAqD,EAAA,SAAAlD,EAAAW,GAAA,IAAA,GAAAC,GAAAE,EAAAlB,KAAAI,EAAAD,OAAAF,GAAAkB,EAAAD,EAAAf,OAAAgB,KAAAf,EAAAY,EAAAE,EAAAC,MAAAf,EAAAY,KAAAD,EAAAC,GAAAZ,EAAAY,SAAA,QAAAwC,GAAAxD,EAAAC,GAAA,GAAAG,GAAAW,EAAAG,EAAAC,EAAAC,EAAAE,EAAAC,EAAAK,EAAAuO,EAAAnQ,EAAA,IAAA,IAAA4B,EAAA,MAAA3B,GAAA,EAAA2B,EAAAoF,MAAA,EAAA,KAAA5F,EAAApB,EAAAsB,KAAAC,EAAAP,EAAA4gB,UAAAxgB,GAAA,GAAAhB,IAAAW,EAAAyB,GAAAoC,KAAAxD,OAAAL,IAAAK,EAAAA,EAAA4F,MAAAjG,EAAA,GAAAZ,SAAAiB,GAAAE,EAAAoF,KAAAxF,OAAAd,GAAA,GAAAW,EAAA2X,GAAA9T,KAAAxD,MAAAhB,EAAAW,EAAAiJ,QAAA9I,EAAAwF,MAAAP,MAAA/F,EAAAE,KAAAS,EAAA,GAAA+B,QAAAD,GAAA,OAAAzB,EAAAA,EAAA4F,MAAA5G,EAAAD,QAAA,KAAAgB,IAAAH,GAAA6C,SAAA9C,EAAA8X,GAAA1X,GAAAyD,KAAAxD,KAAAG,EAAAJ,MAAAJ,EAAAQ,EAAAJ,GAAAJ,MAAAX,EAAAW,EAAAiJ,QAAA9I,EAAAwF,MAAAP,MAAA/F,EAAAE,KAAAa,EAAA0gB,QAAA9gB,IAAAK,EAAAA,EAAA4F,MAAA5G,EAAAD,QAAA,KAAAC,EAAA,MAAA,MAAAH,GAAAmB,EAAAjB,OAAAiB,EAAA+f,EAAA1W,MAAAzK,GAAAmQ,EAAAnQ,EAAAsB,GAAA0F,MAAA,GAAA,QAAAjD,GAAA/D,GAAA,IAAA,GAAAC,GAAA,EAAAG,EAAAJ,EAAAG,OAAAY,EAAA,GAAAX,EAAAH,EAAAA,IAAAc,GAAAf,EAAAC,GAAAkG,KAAA,OAAApF,GAAA,QAAAiD,GAAAhE,EAAAC,EAAAG,GAAA,GAAAY,GAAAf,EAAA6hB,IAAA5gB,EAAAd,GAAA,eAAAY,EAAAG,EAAA8O,GAAA,OAAAhQ,GAAAiS,MAAA,SAAAjS,EAAAG,EAAAW,GAAA,KAAAd,EAAAA,EAAAe,IAAA,GAAA,IAAAf,EAAAO,UAAAU,EAAA,MAAAlB,GAAAC,EAAAG,EAAAW,IAAA,SAAAd,EAAAG,EAAAgB,GAAA,GAAAE,GAAAC,EAAAK,EAAAJ,EAAAwO,EAAA,IAAA7O,CAAA,IAAAC,GAAA,KAAAnB,EAAAA,EAAAe,IAAA,IAAA,IAAAf,EAAAO,UAAAU,IAAAlB,EAAAC,EAAAG,EAAAgB,GAAA,OAAA,MAAA,MAAAnB,EAAAA,EAAAe,IAAA,GAAA,IAAAf,EAAAO,UAAAU,EAAA,GAAAU,EAAA3B,EAAA4P,KAAA5P,EAAA4P,QAAAtO,EAAAK,EAAAZ,KAAAO,EAAA,KAAAC,GAAA,IAAAF,EAAAC,EAAA,OAAA,GAAAD,IAAAP,EAAA,MAAAO,MAAA,MAAA,IAAAC,EAAAK,EAAAZ,IAAAQ,GAAAD,EAAA,GAAAvB,EAAAC,EAAAG,EAAAgB,IAAAL,EAAAQ,EAAA,MAAA,EAAA,OAAA,GAAA,QAAAwgB,GAAA/hB,GAAA,MAAAA,GAAAG,OAAA,EAAA,SAAAF,EAAAG,EAAAW,GAAA,IAAA,GAAAC,GAAAhB,EAAAG,OAAAa,KAAA,IAAAhB,EAAAgB,GAAAf,EAAAG,EAAAW,GAAA,OAAA,CAAA,QAAA,GAAAf,EAAA,GAAA,QAAAgiB,GAAAhiB,EAAAC,EAAAG,EAAAW,EAAAC,GAAA,IAAA,GAAAE,GAAAC,KAAAC,EAAA,EAAAE,EAAAtB,EAAAG,OAAAoB,EAAA,MAAAtB,EAAAqB,EAAAF,EAAAA,KAAAF,EAAAlB,EAAAoB,OAAAhB,GAAAA,EAAAc,EAAAH,EAAAC,MAAAG,EAAAuF,KAAAxF,GAAAK,GAAAtB,EAAAyG,KAAAtF,GAAA,OAAAD,GAAA,QAAA8gB,GAAAjiB,EAAAC,EAAAG,EAAAW,EAAAC,EAAAE,GAAA,MAAAH,KAAAA,EAAA8O,KAAA9O,EAAAkhB,EAAAlhB,IAAAC,IAAAA,EAAA6O,KAAA7O,EAAAihB,EAAAjhB,EAAAE,IAAAoC,EAAA,SAAApC,EAAAC,EAAAC,EAAAE,GAAA,GAAAC,GAAAK,EAAAJ,EAAAE,KAAA8L,KAAAC,EAAAtM,EAAAhB,OAAAuN,EAAAxM,GAAAghB,EAAAjiB,GAAA,IAAAmB,EAAAZ,UAAAY,GAAAA,MAAAuM,GAAA3N,IAAAkB,GAAAjB,EAAAyN,EAAAsU,EAAAtU,EAAAhM,EAAA1B,EAAAoB,EAAAE,GAAAmO,EAAArP,EAAAY,IAAAE,EAAAlB,EAAAyN,GAAA1M,MAAAI,EAAAwM,CAAA,IAAAvN,GAAAA,EAAAuN,EAAA8B,EAAArO,EAAAE,GAAAP,EAAA,IAAAQ,EAAAygB,EAAAvS,EAAAjC,GAAAzM,EAAAQ,KAAAH,EAAAE,GAAAM,EAAAL,EAAApB,OAAAyB,MAAAJ,EAAAD,EAAAK,MAAA6N,EAAAjC,EAAA5L,MAAA+L,EAAAH,EAAA5L,IAAAJ,GAAA,IAAAN,GAAA,GAAAF,GAAAhB,EAAA,CAAA,GAAAgB,EAAA,CAAA,IAAAO,KAAAK,EAAA6N,EAAAtP,OAAAyB,MAAAJ,EAAAiO,EAAA7N,KAAAL,EAAAmF,KAAAiH,EAAA/L,GAAAJ,EAAAR,GAAA,KAAAyO,KAAAlO,EAAAD,GAAA,IAAAM,EAAA6N,EAAAtP,OAAAyB,MAAAJ,EAAAiO,EAAA7N,MAAAL,EAAAP,EAAAd,EAAAyD,KAAAzC,EAAAM,GAAAE,EAAAE,IAAA,KAAAV,EAAAK,KAAAJ,EAAAI,GAAAC,SAAAiO,GAAAuS,EAAAvS,IAAAtO,EAAAsO,EAAAlF,OAAAkD,EAAAgC,EAAAtP,QAAAsP,GAAAzO,EAAAA,EAAA,KAAAG,EAAAsO,EAAAnO,GAAAmP,EAAAuB,MAAA7Q,EAAAsO,KAAA,QAAA0S,GAAAniB,GAAA,IAAA,GAAAC,GAAAG,EAAAW,EAAAG,EAAAlB,EAAAG,OAAAgB,EAAAH,EAAAohB,SAAApiB,EAAA,GAAAM,MAAAc,EAAAD,GAAAH,EAAAohB,SAAA,KAAA9gB,EAAAH,EAAA,EAAA,EAAAS,EAAAoC,EAAA,SAAAhE,GAAA,MAAAA,KAAAC,GAAAmB,GAAA,GAAAI,EAAAwC,EAAA,SAAAhE,GAAA,MAAAE,GAAAyD,KAAA1D,EAAAD,GAAA,IAAAoB,GAAA,GAAAM,GAAA,SAAA1B,EAAAI,EAAAW,GAAA,OAAAI,IAAAJ,GAAAX,IAAAmB,MAAAtB,EAAAG,GAAAI,SAAAoB,EAAA5B,EAAAI,EAAAW,GAAAS,EAAAxB,EAAAI,EAAAW,MAAAG,EAAAI,EAAAA,IAAA,GAAAlB,EAAAY,EAAAohB,SAAApiB,EAAAsB,GAAAhB,MAAAoB,GAAAsC,EAAA+d,EAAArgB,GAAAtB,QAAA,CAAA,GAAAA,EAAAY,EAAA6C,OAAA7D,EAAAsB,GAAAhB,MAAA0R,MAAA,KAAAhS,EAAAsB,GAAAugB,SAAAzhB,EAAAyP,GAAA,CAAA,IAAA9O,IAAAO,EAAAJ,EAAAH,IAAAC,EAAAohB,SAAApiB,EAAAe,GAAAT,MAAAS,KAAA,MAAAkhB,GAAA3gB,EAAA,GAAAygB,EAAArgB,GAAAJ,EAAA,GAAAyC,EAAA/D,EAAAgH,MAAA,EAAA1F,EAAA,IAAAwB,QAAAD,GAAA,MAAAzC,EAAAW,EAAAO,GAAA6gB,EAAAniB,EAAAgH,MAAA1F,EAAAP,IAAAG,EAAAH,GAAAohB,EAAAniB,EAAAA,EAAAgH,MAAAjG,IAAAG,EAAAH,GAAAgD,EAAA/D,IAAA0B,EAAAgF,KAAAtG,GAAA,MAAA2hB,GAAArgB,GAAA,QAAA2gB,GAAAriB,EAAAC,GAAA,GAAAG,GAAA,EAAAc,EAAAjB,EAAAE,OAAA,EAAAgB,EAAAnB,EAAAG,OAAA,EAAAiB,EAAA,SAAAA,EAAAE,EAAAM,EAAAF,EAAA8L,GAAA,GAAAC,GAAAC,EAAAC,EAAA8B,KAAAE,EAAA,EAAAtP,EAAA,IAAAwP,EAAAzO,MAAAP,EAAA,MAAA2M,EAAAuC,EAAAxO,EAAA0O,EAAA7O,GAAAD,GAAAH,EAAAkQ,KAAAoR,IAAA,IAAA9U,GAAAlM,EAAAqE,YAAArE,GAAA4O,EAAAF,GAAA,MAAAD,EAAA,EAAApI,KAAAkQ,UAAA,EAAA,KAAAhX,IAAAU,EAAAD,IAAAE,GAAAF,EAAAP,EAAAX,GAAA,OAAAqN,EAAAwC,EAAA5P,IAAAA,IAAA,CAAA,GAAAc,GAAAsM,EAAA,CAAA,IAAAC,EAAA,EAAAC,EAAA3N,EAAA0N,MAAA,GAAAC,EAAAF,EAAAnM,EAAAM,GAAA,CAAAF,EAAAgF,KAAA+G,EAAA,OAAA5M,IAAAmP,EAAAE,EAAAnP,IAAAX,GAAAc,KAAAuM,GAAAE,GAAAF,IAAAkC,IAAAvO,GAAAyO,EAAAnJ,KAAA+G,IAAA,GAAAkC,GAAAtP,EAAAa,GAAAb,IAAAsP,EAAA,CAAA,IAAAjC,EAAA,EAAAC,EAAA1N,EAAAyN,MAAAC,EAAAkC,EAAAJ,EAAAnO,EAAAM,EAAA,IAAAR,EAAA,CAAA,GAAAuO,EAAA,EAAA,KAAAtP,KAAAwP,EAAAxP,IAAAoP,EAAApP,KAAAoP,EAAApP,GAAAmQ,EAAA7M,KAAAjC,GAAA+N,GAAAuS,EAAAvS,GAAAgB,EAAAuB,MAAAtQ,EAAA+N,GAAA5O,IAAAO,GAAAqO,EAAAtP,OAAA,GAAAwP,EAAA1P,EAAAE,OAAA,GAAAghB,EAAAoB,WAAA7gB,GAAA,MAAAb,KAAAmP,EAAAE,EAAA3O,EAAAwO,GAAAF,EAAA,OAAA3O,GAAAoC,EAAAlC,GAAAA,EAAA,QAAA8gB,GAAAliB,EAAAC,EAAAG,GAAA,IAAA,GAAAW,GAAA,EAAAC,EAAAf,EAAAE,OAAAa,EAAAD,EAAAA,IAAAogB,EAAAnhB,EAAAC,EAAAc,GAAAX,EAAA,OAAAA,GAAA,QAAAmhB,GAAAvhB,EAAAC,EAAAG,EAAAW,GAAA,GAAAG,GAAAC,EAAAG,EAAAC,EAAAK,EAAAJ,EAAAgC,EAAAxD,EAAA,KAAAe,GAAA,IAAAS,EAAArB,OAAA,CAAA,GAAAgB,EAAAK,EAAA,GAAAA,EAAA,GAAAwF,MAAA,GAAA7F,EAAAhB,OAAA,GAAA,QAAAmB,EAAAH,EAAA,IAAAb,MAAA,IAAAL,EAAAO,WAAAgN,GAAAxM,EAAAohB,SAAAjhB,EAAA,GAAAb,MAAA,CAAA,GAAAL,EAAAe,EAAAkQ,KAAAsR,GAAAlhB,EAAAugB,QAAA,GAAA/e,QAAA2Y,GAAAC,IAAAzb,GAAA,IAAAA,EAAA,MAAAG,EAAAJ,GAAAA,EAAAgH,MAAA7F,EAAA6I,QAAA7D,MAAAhG,QAAA,IAAAe,EAAA2X,GAAAwD,aAAAlZ,KAAAnD,GAAA,EAAAmB,EAAAhB,OAAAe,MAAAI,EAAAH,EAAAD,IAAAF,EAAAohB,SAAA7gB,EAAAD,EAAAhB,QAAA,IAAAsB,EAAAZ,EAAAkQ,KAAA3P,MAAAR,EAAAa,EAAAN,EAAAugB,QAAA,GAAA/e,QAAA2Y,GAAAC,IAAA5C,GAAA3V,KAAAhC,EAAA,GAAAb,OAAAL,EAAA0F,YAAA1F,IAAA,CAAA,GAAAkB,EAAAoJ,OAAArJ,EAAA,GAAAlB,EAAAe,EAAAZ,QAAA4D,EAAA5C,IAAAnB,EAAA,MAAAyQ,GAAAuB,MAAA5R,EAAAwQ,EAAAjN,KAAA5C,EAAA,IAAAX,CAAA,QAAA,MAAAgB,GAAApB,EAAAwB,GAAAT,EAAAd,EAAAuN,EAAApN,EAAA0Y,GAAA3V,KAAAnD,IAAAI,EAAA,QAAAqiB,MAAA,GAAAriB,GAAAW,EAAAC,EAAAE,EAAAC,EAAAC,EAAAE,EAAAC,EAAAK,EAAAJ,EAAAE,EAAA8L,EAAAC,EAAAC,EAAAC,EAAA8B,EAAAE,EAAAE,EAAA,UAAA,GAAAmE,MAAAnT,EAAAb,EAAAN,SAAAqQ,KAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA7M,IAAA8M,EAAA9M,IAAA+M,EAAA/M,IAAAgN,QAAApQ,GAAAqQ,EAAA,GAAA,GAAAC,KAAAC,EAAAD,EAAA1O,IAAA4O,EAAAF,EAAA7J,KAAAkK,EAAAL,EAAAvJ,MAAA9G,EAAAqQ,EAAAhB,SAAA,SAAAvP,GAAA,IAAA,GAAAC,GAAA,EAAAG,EAAAqM,KAAAtM,OAAAC,EAAAH,EAAAA,IAAA,GAAAwM,KAAAxM,KAAAD,EAAA,MAAAC,EAAA,OAAA,IAAAS,GAAA,sBAAAD,GAAA,mCAAAyC,GAAAzC,GAAAqC,QAAA,IAAA,MAAAC,GAAA,eAAAjC,GAAA,MAAAJ,GAAA,KAAAD,GAAA,IAAAC,GAAA,OAAAqC,GAAArC,GAAA,wCAAAwC,GAAA,QAAAxC,GAAA,OAAAyB,GAAA,KAAA1B,GAAA,mEAAAK,GAAAgC,QAAA,EAAA,GAAA,eAAAD,GAAA8Z,OAAA,IAAAjc,GAAA,8BAAAA,GAAA,KAAA,KAAA8B,GAAAma,OAAA,IAAAjc,GAAA,KAAAA,GAAA,KAAAgY,GAAAiE,OAAA,IAAAjc,GAAA,4BAAAA,GAAA,KAAAiY,GAAAgE,OAAAxa,IAAAyW,GAAA+D,OAAA,IAAAzZ,GAAA,KAAA2V,IAAA2J,GAAA7F,OAAA,MAAAlc,GAAA,KAAAiiB,MAAA/F,OAAA,QAAAlc,GAAA,KAAAkiB,KAAAhG,OAAA,mBAAAlc,GAAA,cAAA6hB,IAAA3F,OAAA,KAAAlc,GAAAqC,QAAA,IAAA,MAAA,KAAA8f,KAAAjG,OAAA,IAAA7b,IAAA+hB,OAAAlG,OAAA,IAAAxa,IAAA2gB,MAAAnG,OAAA,yDAAAjc,GAAA,+BAAAA,GAAA,cAAAA,GAAA,aAAAA,GAAA,SAAA,KAAA2b,aAAAM,OAAA,IAAAjc,GAAA,mDAAAA,GAAA,mBAAAA,GAAA,mBAAA,MAAAoY,GAAA,sBAAAC,GAAA,2BAAAC,GAAA,mCAAAC,GAAA,sCAAAC,GAAA,SAAAC,GAAA,QAAAqC,GAAA,gDAAAC,GAAA,wCAAAC,GAAA,SAAA1b,EAAAC,GAAA,GAAAG,GAAA,KAAAH,EAAA,KAAA,OAAAG,KAAAA,EAAAH,EAAA,EAAAG,EAAA2iB,OAAAC,aAAA5iB,EAAA,OAAA2iB,OAAAC,aAAA,MAAA5iB,GAAA,GAAA,MAAA,KAAAA,GAAA,KAAAwQ,EAAAjN,KAAA9C,EAAAlB,gBAAA8G,WAAA,GAAA,GAAAjG,SAAA,MAAAmb,IAAA/K,EAAA,SAAA5Q,GAAA,IAAA,GAAAC,GAAAG,KAAAH,EAAAwM,KAAAzM,MAAAI,EAAAsG,KAAAzG,EAAA,OAAAG,IAAAe,EAAAggB,EAAA8B,MAAA,SAAAjjB,GAAA,GAAAC,GAAAD,IAAAA,EAAAsE,eAAAtE,GAAAL,eAAA,OAAAM,GAAA,SAAAA,EAAAsF,UAAA,GAAA3D,EAAAuf,EAAA+B,YAAA,SAAAljB,GAAA,GAAAI,GAAAJ,EAAAA,EAAAsE,eAAAtE,EAAAa,CAAA,OAAAT,KAAAoB,GAAA,IAAApB,EAAAI,UAAAJ,EAAAT,iBAAA6B,EAAApB,EAAAsB,EAAAtB,EAAAT,gBAAA6N,EAAArM,EAAAf,GAAA2P,EAAAoT,kBAAAjC,EAAA,SAAAlhB,GAAA,MAAAA,GAAAqE,YAAAjE,EAAAgjB,cAAA,MAAApjB,EAAAoE,qBAAA,KAAAjE,SAAA4P,EAAAqH,WAAA8J,EAAA,SAAAlhB,GAAAA,EAAA8F,UAAA,mBAAA,IAAA7F,SAAAD,GAAA+W,UAAA9T,aAAA,WAAA,OAAA,YAAAhD,GAAA,WAAAA,IAAA8P,EAAAqR,eAAAF,EAAA,SAAAlhB,GAAA,MAAAA,GAAA8F,UAAA,yDAAA9F,EAAAqhB,wBAAArhB,EAAAqhB,uBAAA,KAAAlhB,QAAAH,EAAA+W,UAAArB,UAAA,IAAA,IAAA1V,EAAAqhB,uBAAA,KAAAlhB,SAAA,IAAA4P,EAAAsT,UAAAnC,EAAA,SAAAlhB,GAAAA,EAAAuR,GAAA1B,EAAA,EAAA7P,EAAA8F,UAAA,YAAA+J,EAAA,oBAAAA,EAAA,WAAAnO,EAAA4hB,aAAAtjB,EAAA0B,EAAAkU,WAAA,IAAA3V,GAAAG,EAAAmjB,mBAAAnjB,EAAAmjB,kBAAA1T,GAAA1P,SAAA,EAAAC,EAAAmjB,kBAAA1T,EAAA,GAAA1P,MAAA,OAAA4P,GAAAyT,cAAApjB,EAAAkR,eAAAzB,GAAAnO,EAAAkW,YAAA5X,GAAAC,IAAAe,EAAAyiB,WAAAvC,EAAA,SAAAlhB,GAAA,MAAAA,GAAA8F,UAAA,mBAAA9F,EAAA4V,kBAAA5V,GAAA4V,WAAA3S,eAAAoN,GAAA,MAAArQ,EAAA4V,WAAA3S,aAAA,cAAAmY,KAAA,SAAApb,GAAA,MAAAA,GAAAiD,aAAA,OAAA,IAAA3C,KAAA,SAAAN,GAAA,MAAAA,GAAAiD,aAAA,UAAA8M,EAAAyT,cAAAxiB,EAAAkQ,KAAAsR,GAAA,SAAAxiB,EAAAC,GAAA,SAAAA,GAAAqR,iBAAAjB,IAAA7C,EAAA,CAAA,GAAApN,GAAAH,EAAAqR,eAAAtR,EAAA,OAAAI,IAAAA,EAAAuF,YAAAvF,QAAAY,EAAA6C,OAAA2e,GAAA,SAAAxiB,GAAA,GAAAC,GAAAD,EAAA8C,QAAA2Y,GAAAC,GAAA,OAAA,UAAA1b,GAAA,MAAAA,GAAAiD,aAAA,QAAAhD,MAAAe,EAAAkQ,KAAAsR,GAAA,SAAAxiB,EAAAI,GAAA,SAAAA,GAAAkR,iBAAAjB,IAAA7C,EAAA,CAAA,GAAAzM,GAAAX,EAAAkR,eAAAtR,EAAA,OAAAe,GAAAA,EAAAwQ,KAAAvR,SAAAe,GAAAyD,mBAAA6L,GAAAtP,EAAAyD,iBAAA,MAAA2B,QAAAnG,GAAAe,GAAAd,OAAAe,EAAA6C,OAAA2e,GAAA,SAAAxiB,GAAA,GAAAC,GAAAD,EAAA8C,QAAA2Y,GAAAC,GAAA,OAAA,UAAA1b,GAAA,GAAAI,SAAAJ,GAAAwE,mBAAA6L,GAAArQ,EAAAwE,iBAAA,KAAA,OAAApE,IAAAA,EAAA+F,QAAAlG,KAAAe,EAAAkQ,KAAAoR,IAAAvS,EAAAoT,kBAAA,SAAAnjB,EAAAI,GAAA,aAAAA,GAAAgE,uBAAAiM,EAAAjQ,EAAAgE,qBAAApE,GAAAC,GAAA,SAAAD,EAAAC,GAAA,GAAAG,GAAAW,KAAAC,EAAA,EAAAE,EAAAjB,EAAAmE,qBAAApE,EAAA,IAAA,MAAAA,EAAA,CAAA,KAAAI,EAAAc,EAAAF,MAAA,IAAAZ,EAAAI,UAAAO,EAAA2F,KAAAtG,EAAA,OAAAW,GAAA,MAAAG,IAAAF,EAAAkQ,KAAAyR,KAAA5S,EAAAsT,WAAA,SAAArjB,EAAAI,GAAA,aAAAA,GAAAmjB,oBAAAlT,EAAAjQ,EAAAmjB,kBAAApL,MAAAlY,GAAAe,EAAAkQ,KAAAwR,MAAA3S,EAAAqR,gBAAA,SAAAphB,EAAAI,GAAA,aAAAA,GAAAihB,yBAAAhR,GAAA7C,EAAAvN,EAAAG,EAAAihB,uBAAArhB,IAAA0N,KAAAD,GAAA,WAAAsC,EAAAuR,IAAA1F,EAAAxb,EAAAoG,qBAAA0a,EAAA,SAAAlhB,GAAAA,EAAA8F,UAAA,iDAAA9F,EAAAwG,iBAAA,cAAArG,QAAAsN,EAAA/G,KAAA,MAAAhG,GAAA,gEAAAV,EAAAwG,iBAAA,YAAArG,QAAAsN,EAAA/G,KAAA,cAAAwa,EAAA,SAAAlhB,GAAAA,EAAA8F,UAAA,8BAAA9F,EAAAwG,iBAAA,WAAArG,QAAAsN,EAAA/G,KAAA,SAAAhG,GAAA,gBAAAV,EAAAwG,iBAAA,YAAArG,QAAAsN,EAAA/G,KAAA,WAAA,aAAA1G,EAAAwG,iBAAA,QAAAiH,EAAA/G,KAAA,YAAAqJ,EAAA2T,gBAAA9H,EAAAjO,EAAAjM,EAAAgiB,iBAAAhiB,EAAAiiB,oBAAAjiB,EAAAkiB,uBAAAliB,EAAAmiB,kBAAAniB,EAAAoiB,qBAAA5C,EAAA,SAAAlhB,GAAA+P,EAAAgU,kBAAApW,EAAAhK,KAAA3D,EAAA,OAAA2N,EAAAhK,KAAA3D,EAAA,aAAA0N,EAAAhH,KAAA,KAAAvE,MAAAsL,EAAAkP,OAAAlP,EAAA+O,KAAA,MAAA9O,EAAAiP,OAAAjP,EAAA8O,KAAA,MAAA/M,EAAAmM,EAAAla,EAAA0F,WAAA1F,EAAAsiB,wBAAA,SAAAhkB,EAAAC,GAAA,GAAAG,GAAA,IAAAJ,EAAAQ,SAAAR,EAAAL,gBAAAK,EAAAe,EAAAd,GAAAA,EAAA0F,UAAA,OAAA3F,KAAAe,MAAAA,GAAA,IAAAA,EAAAP,YAAAJ,EAAAgH,SAAAhH,EAAAgH,SAAArG,GAAAf,EAAAgkB,yBAAA,GAAAhkB,EAAAgkB,wBAAAjjB,MAAA,SAAAf,EAAAC,GAAA,GAAAA,EAAA,KAAAA,EAAAA,EAAA0F,YAAA,GAAA1F,IAAAD,EAAA,OAAA,CAAA,QAAA,GAAA2P,EAAAjO,EAAAsiB,wBAAA,SAAAhkB,EAAAC,GAAA,GAAAc,EAAA,OAAAf,KAAAC,GAAAqB,GAAA,EAAA,IAAAP,EAAAd,EAAA+jB,yBAAAhkB,EAAAgkB,yBAAAhkB,EAAAgkB,wBAAA/jB,IAAA,EAAAc,GAAAf,EAAA2F,YAAA,KAAA3F,EAAA2F,WAAAnF,SAAAR,IAAAI,GAAAqP,EAAA5O,EAAAb,GAAA,GAAAC,IAAAG,GAAAqP,EAAA5O,EAAAZ,GAAA,EAAA,EAAA,EAAAc,EAAA,GAAA,EAAAf,EAAAgkB,wBAAA,GAAA,GAAA,SAAAhkB,EAAAC,GAAA,GAAAc,GAAAC,EAAA,EAAAE,EAAAlB,EAAA2F,WAAAxE,EAAAlB,EAAA0F,WAAAvE,GAAApB,GAAAuB,GAAAtB,EAAA,IAAAD,IAAAC,EAAA,MAAAqB,IAAA,EAAA,CAAA,KAAAJ,IAAAC,EAAA,MAAAnB,KAAAI,EAAA,GAAAH,IAAAG,EAAA,EAAAc,EAAA,GAAAC,EAAA,EAAA,CAAA,IAAAD,IAAAC,EAAA,MAAAyC,GAAA5D,EAAAC,EAAA,KAAAc,EAAAf,EAAAe,EAAAA,EAAA4E,YAAAvE,EAAAkI,QAAAvI,EAAA,KAAAA,EAAAd,EAAAc,EAAAA,EAAA4E,YAAApE,EAAA+H,QAAAvI,EAAA,MAAAK,EAAAJ,KAAAO,EAAAP,IAAAA,GAAA,OAAAA,GAAA4C,EAAAxC,EAAAJ,GAAAO,EAAAP,IAAAI,EAAAJ,KAAAH,EAAA,GAAAU,EAAAP,KAAAH,EAAA,EAAA,GAAAS,GAAA,GAAA,EAAA,GAAA+Q,KAAA1C,GAAAI,EAAAkU,iBAAA3iB,EAAAE,GAAAA,GAAA2f,EAAAU,QAAA,SAAA7hB,EAAAC,GAAA,MAAAkhB,GAAAnhB,EAAA,KAAA,KAAAC,IAAAkhB,EAAAuC,gBAAA,SAAA1jB,EAAAC,GAAA,IAAAD,EAAAsE,eAAAtE,KAAAwB,GAAAI,EAAA5B,GAAAC,EAAAA,EAAA6C,QAAA0Y,GAAA,aAAAzL,EAAA2T,iBAAAlW,GAAAE,GAAAA,EAAAvK,KAAAlD,IAAAwN,EAAAtK,KAAAlD,IAAA,IAAA,GAAAG,GAAAuN,EAAAhK,KAAA3D,EAAAC,EAAA,IAAAG,GAAA2P,EAAAgU,mBAAA/jB,EAAAN,UAAA,KAAAM,EAAAN,SAAAc,SAAA,MAAAJ,GAAA,MAAAW,IAAA,MAAAogB,GAAAlhB,EAAAuB,EAAA,MAAAxB,IAAAG,OAAA,GAAAghB,EAAA/Z,SAAA,SAAApH,EAAAC,GAAA,OAAAD,EAAAsE,eAAAtE,KAAAwB,GAAAI,EAAA5B,GAAAyP,EAAAzP,EAAAC,IAAAkhB,EAAA9P,KAAA,SAAArR,EAAAC,GAAA,GAAAG,EAAA,QAAAJ,EAAAsE,eAAAtE,KAAAwB,GAAAI,EAAA5B,GAAAwN,IAAAvN,EAAAA,EAAA+C,gBAAA5C,EAAAY,EAAAyiB,WAAAxjB,IAAAG,EAAAJ,GAAAwN,GAAAuC,EAAAqH,WAAApX,EAAAiD,aAAAhD,KAAAG,EAAAJ,EAAAwE,iBAAAvE,KAAAD,EAAAiD,aAAAhD,KAAAD,EAAAC,MAAA,EAAAA,EAAAG,GAAAA,EAAAqE,UAAArE,EAAA+F,MAAA,MAAAgb,EAAA1W,MAAA,SAAAzK,GAAA,KAAAgT,OAAA,0CAAAhT,IAAAmhB,EAAAoB,WAAA,SAAAviB,GAAA,GAAAC,GAAAG,KAAAW,EAAA,EAAAC,EAAA,CAAA,IAAAM,GAAAyO,EAAAkU,iBAAAjkB,EAAAqS,KAAA1C,GAAArO,EAAA,CAAA,KAAArB,EAAAD,EAAAe,GAAAA,IAAAd,IAAAD,EAAAe,EAAA,KAAAC,EAAAZ,EAAAsG,KAAA3F,GAAA,MAAAC,KAAAhB,EAAAuK,OAAAnK,EAAAY,GAAA,GAAA,MAAAhB,IAAAkB,EAAAigB,EAAA+C,QAAA,SAAAlkB,GAAA,GAAAC,GAAAG,EAAA,GAAAW,EAAA,EAAAC,EAAAhB,EAAAQ,QAAA,IAAAQ,GAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAAAA,EAAA,CAAA,GAAA,gBAAAhB,GAAAmkB,YAAA,MAAAnkB,GAAAmkB,WAAA,KAAAnkB,EAAAA,EAAA4V,WAAA5V,EAAAA,EAAAA,EAAAyhB,YAAArhB,GAAAc,EAAAlB,OAAA,IAAA,IAAAgB,GAAA,IAAAA,EAAA,MAAAhB,GAAAokB,cAAA,MAAAnkB,EAAAD,EAAAe,GAAAA,IAAAX,GAAAc,EAAAjB,EAAA,OAAAG,IAAAY,EAAAmgB,EAAAkD,WAAApD,YAAA,GAAAqD,aAAAhhB,EAAA1C,MAAAiY,GAAA3H,QAAAkR,UAAAmC,KAAAzC,IAAA,aAAA5P,OAAA,GAAAsS,KAAA1C,IAAA,cAAA2C,KAAA3C,IAAA,kBAAA5P,OAAA,GAAAwS,KAAA5C,IAAA,oBAAAF,WAAAgB,KAAA,SAAA5iB,GAAA,MAAAA,GAAA,GAAAA,EAAA,GAAA8C,QAAA2Y,GAAAC,IAAA1b,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAA,IAAA8C,QAAA2Y,GAAAC,IAAA,OAAA1b,EAAA,KAAAA,EAAA,GAAA,IAAAA,EAAA,GAAA,KAAAA,EAAAgH,MAAA,EAAA,IAAA8b,MAAA,SAAA9iB,GAAA,MAAAA,GAAA,GAAAA,EAAA,GAAAgD,cAAA,QAAAhD,EAAA,GAAAgH,MAAA,EAAA,IAAAhH,EAAA,IAAAmhB,EAAA1W,MAAAzK,EAAA,IAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAA,GAAA,GAAA,SAAAA,EAAA,IAAA,QAAAA,EAAA,KAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,IAAA,QAAAA,EAAA,KAAAA,EAAA,IAAAmhB,EAAA1W,MAAAzK,EAAA,IAAAA,GAAA6iB,OAAA,SAAA7iB,GAAA,GAAAC,GAAAG,GAAAJ,EAAA,IAAAA,EAAA,EAAA,OAAA6Y,IAAAiK,MAAA3f,KAAAnD,EAAA,IAAA,MAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAI,GAAAuY,GAAAxV,KAAA/C,KAAAH,EAAAuD,EAAApD,GAAA,MAAAH,EAAAG,EAAAmP,QAAA,IAAAnP,EAAAD,OAAAF,GAAAG,EAAAD,UAAAH,EAAA,GAAAA,EAAA,GAAAgH,MAAA,EAAA/G,GAAAD,EAAA,GAAAI,EAAA4G,MAAA,EAAA/G,IAAAD,EAAAgH,MAAA,EAAA,MAAAnD,QAAAye,IAAA,SAAAtiB,GAAA,MAAA,MAAAA,EAAA,WAAA,OAAA,IAAAA,EAAAA,EAAA8C,QAAA2Y,GAAAC,IAAA1Y,cAAA,SAAA/C,GAAA,MAAAA,GAAAsF,UAAAtF,EAAAsF,SAAAvC,gBAAAhD,KAAA0iB,MAAA,SAAA1iB,GAAA,GAAAC,GAAAiQ,EAAAlQ,EAAA,IAAA,OAAAC,KAAAA,EAAA0c,OAAA,MAAAjc,GAAA,IAAAV,EAAA,IAAAU,GAAA,SAAAwP,EAAAlQ,EAAA,SAAAA,GAAA,MAAAC,GAAAkD,KAAAnD,EAAA0V,iBAAA1V,GAAAiD,eAAAoN,GAAArQ,EAAAiD,aAAA,UAAA,OAAA2f,KAAA,SAAA5iB,EAAAC,EAAAG,GAAA,MAAA,UAAAW,GAAA,GAAAC,GAAAmgB,EAAA9P,KAAAtQ,EAAAf,EAAA,OAAA,OAAAgB,EAAA,OAAAf,EAAAA,GAAAe,GAAA,GAAA,MAAAf,EAAAe,IAAAZ,EAAA,OAAAH,EAAAe,IAAAZ,EAAA,OAAAH,EAAAG,GAAA,IAAAY,EAAAuO,QAAAnP,GAAA,OAAAH,EAAAG,GAAAY,EAAAuO,QAAAnP,GAAA,GAAA,OAAAH,EAAAG,GAAAY,EAAAgG,OAAA5G,EAAAD,UAAAC,EAAA,OAAAH,GAAA,IAAAe,EAAA,KAAAuO,QAAAnP,GAAA,GAAA,OAAAH,EAAAe,IAAAZ,GAAAY,EAAAgG,MAAA,EAAA5G,EAAAD,OAAA,KAAAC,EAAA,KAAA,IAAA,IAAA0iB,MAAA,SAAA9iB,EAAAC,EAAAG,EAAAW,EAAAC,GAAA,GAAAE,GAAA,QAAAlB,EAAAgH,MAAA,EAAA,GAAA7F,EAAA,SAAAnB,EAAAgH,MAAA,IAAA5F,EAAA,YAAAnB,CAAA,OAAA,KAAAc,GAAA,IAAAC,EAAA,SAAAhB,GAAA,QAAAA,EAAA2F,YAAA,SAAA1F,EAAAG,EAAAkB,GAAA,GAAAC,GAAAK,EAAAJ,EAAAE,EAAA8L,EAAAC,EAAAC,EAAAxM,IAAAC,EAAA,cAAA,kBAAAwM,EAAA1N,EAAA0F,WAAA8J,EAAArO,GAAAnB,EAAAsF,SAAAvC,cAAA2M,GAAArO,IAAAF,CAAA,IAAAuM,EAAA,CAAA,GAAAzM,EAAA,CAAA,KAAAwM,GAAA,CAAA,IAAAlM,EAAAvB,EAAAuB,EAAAA,EAAAkM,IAAA,GAAAtM,EAAAI,EAAA+D,SAAAvC,gBAAAyM,EAAA,IAAAjO,EAAAhB,SAAA,OAAA,CAAAiN,GAAAC,EAAA,SAAA1N,IAAAyN,GAAA,cAAA,OAAA,EAAA,GAAAA,GAAAtM,EAAAwM,EAAAiI,WAAAjI,EAAAoJ,WAAA5V,GAAAwO,GAAA,IAAA/N,EAAA+L,EAAAkC,KAAAlC,EAAAkC,OAAAtO,EAAAK,EAAA5B,OAAAwN,EAAAjM,EAAA,KAAAyO,GAAAzO,EAAA,GAAAG,EAAAH,EAAA,KAAAyO,GAAAzO,EAAA,GAAAC,EAAAgM,GAAAG,EAAAlH,WAAA+G,GAAAhM,IAAAgM,GAAAhM,GAAAA,EAAAkM,KAAAhM,EAAA8L,EAAA,IAAAC,EAAA5L,OAAA,GAAA,IAAAL,EAAAhB,YAAAkB,GAAAF,IAAAvB,EAAA,CAAA2B,EAAA5B,IAAAgQ,EAAAxC,EAAA9L,EAAA,YAAA,IAAAiO,IAAApO,GAAAtB,EAAA4P,KAAA5P,EAAA4P,QAAA7P,KAAAuB,EAAA,KAAAyO,EAAAtO,EAAAH,EAAA,OAAA,OAAAC,IAAAgM,GAAAhM,GAAAA,EAAAkM,KAAAhM,EAAA8L,EAAA,IAAAC,EAAA5L,UAAAT,EAAAI,EAAA+D,SAAAvC,gBAAAyM,EAAA,IAAAjO,EAAAhB,cAAAkB,IAAAiO,KAAAnO,EAAAqO,KAAArO,EAAAqO,QAAA7P,IAAAgQ,EAAAtO,IAAAF,IAAAvB,MAAA,MAAAyB,IAAAV,EAAAU,IAAAX,GAAA,IAAAW,EAAAX,GAAAW,EAAAX,GAAA,KAAA8hB,OAAA,SAAA7iB,EAAAC,GAAA,GAAAG,GAAAW,EAAAC,EAAA2jB,QAAA3kB,IAAAgB,EAAA4jB,WAAA5kB,EAAAgD,gBAAAme,EAAA1W,MAAA,uBAAAzK,EAAA,OAAAe,GAAA8O,GAAA9O,EAAAd,GAAAc,EAAAZ,OAAA,GAAAC,GAAAJ,EAAAA,EAAA,GAAAC,GAAAe,EAAA4jB,WAAAlV,eAAA1P,EAAAgD,eAAAM,EAAA,SAAAtD,EAAAI,GAAA,IAAA,GAAAY,GAAAE,EAAAH,EAAAf,EAAAC,GAAAkB,EAAAD,EAAAf,OAAAgB,KAAAH,EAAAd,EAAAyD,KAAA3D,EAAAkB,EAAAC,IAAAnB,EAAAgB,KAAAZ,EAAAY,GAAAE,EAAAC,MAAA,SAAAnB,GAAA,MAAAe,GAAAf,EAAA,EAAAI,KAAAW,IAAA4jB,SAAAE,IAAAvhB,EAAA,SAAAtD,GAAA,GAAAC,MAAAG,KAAAW,EAAAK,EAAApB,EAAA8C,QAAAD,GAAA,MAAA,OAAA9B,GAAA8O,GAAAvM,EAAA,SAAAtD,EAAAC,EAAAG,EAAAY,GAAA,IAAA,GAAAE,GAAAC,EAAAJ,EAAAf,EAAA,KAAAgB,MAAAI,EAAApB,EAAAG,OAAAiB,MAAAF,EAAAC,EAAAC,MAAApB,EAAAoB,KAAAnB,EAAAmB,GAAAF,MAAA,SAAAlB,EAAAgB,EAAAE,GAAA,MAAAjB,GAAA,GAAAD,EAAAe,EAAAd,EAAA,KAAAiB,EAAAd,IAAAA,EAAAyB,SAAA8S,IAAArR,EAAA,SAAAtD,GAAA,MAAA,UAAAC,GAAA,MAAAkhB,GAAAnhB,EAAAC,GAAAE,OAAA,KAAAiH,SAAA9D,EAAA,SAAAtD,GAAA,MAAA,UAAAC,GAAA,OAAAA,EAAAkkB,aAAAlkB,EAAA6kB,WAAA5jB,EAAAjB,IAAAsP,QAAAvP,GAAA,MAAA+kB,KAAAzhB,EAAA,SAAAtD,GAAA,MAAA4Y,IAAAzV,KAAAnD,GAAA,KAAAmhB,EAAA1W,MAAA,qBAAAzK,GAAAA,EAAAA,EAAA8C,QAAA2Y,GAAAC,IAAA1Y,cAAA,SAAA/C,GAAA,GAAAG,EAAA,GAAA,IAAAA,EAAAoN,EAAAvN,EAAAgD,aAAA,aAAAhD,EAAAgD,aAAA,QAAAhD,EAAA8kB,KAAA,MAAA3kB,GAAAA,EAAA4C,cAAA5C,IAAAJ,GAAA,IAAAI,EAAAmP,QAAAvP,EAAA,YAAAC,EAAAA,EAAA0F,aAAA,IAAA1F,EAAAO,SAAA,QAAA,KAAAyc,OAAA,SAAAhd,GAAA,GAAAG,GAAAJ,EAAAsP,UAAAtP,EAAAsP,SAAA0V,IAAA,OAAA5kB,IAAAA,EAAA4G,MAAA,KAAA/G,EAAAsR,IAAA0T,KAAA,SAAAjlB,GAAA,MAAAA,KAAA0B,GAAA2d,MAAA,SAAArf,GAAA,MAAAA,KAAAwB,EAAA8d,iBAAA9d,EAAA0jB,UAAA1jB,EAAA0jB,gBAAAllB,EAAAM,MAAAN,EAAAob,OAAApb,EAAAkb,WAAAiK,QAAA,SAAAnlB,GAAA,MAAAA,GAAA4U,YAAA,GAAAA,SAAA,SAAA5U,GAAA,MAAAA,GAAA4U,YAAA,GAAA1O,QAAA,SAAAlG,GAAA,GAAAC,GAAAD,EAAAuF,SAAAvC,aAAA,OAAA,UAAA/C,KAAAD,EAAAkG,SAAA,WAAAjG,KAAAD,EAAAqG,UAAAA,SAAA,SAAArG,GAAA,MAAAA,GAAA2F,YAAA3F,EAAA2F,WAAAuU,cAAAla,EAAAqG,YAAA,GAAAyH,MAAA,SAAA9N,GAAA,IAAAA,EAAAA,EAAA4V,WAAA5V,EAAAA,EAAAA,EAAAyhB,YAAA,GAAAzhB,EAAAuF,SAAA,KAAA,IAAAvF,EAAAQ,UAAA,IAAAR,EAAAQ,SAAA,OAAA,CAAA,QAAA,GAAA4kB,OAAA,SAAAplB,GAAA,OAAAgB,EAAA2jB,QAAA7W,MAAA9N,IAAAqlB,OAAA,SAAArlB,GAAA,MAAAkZ,IAAA/V,KAAAnD,EAAAuF,WAAAoR,MAAA,SAAA3W,GAAA,MAAAiZ,IAAA9V,KAAAnD,EAAAuF,WAAA8V,OAAA,SAAArb,GAAA,GAAAC,GAAAD,EAAAuF,SAAAvC,aAAA,OAAA,UAAA/C,GAAA,WAAAD,EAAAM,MAAA,WAAAL,GAAAyF,KAAA,SAAA1F,GAAA,GAAAC,EAAA,OAAA,UAAAD,EAAAuF,SAAAvC,eAAA,SAAAhD,EAAAM,OAAA,OAAAL,EAAAD,EAAAiD,aAAA,UAAAhD,EAAA+C,gBAAAhD,EAAAM,OAAA4R,MAAA3O,EAAA,WAAA,OAAA,KAAA6O,KAAA7O,EAAA,SAAAvD,EAAAC,GAAA,OAAAA,EAAA,KAAAkS,GAAA5O,EAAA,SAAAvD,EAAAC,EAAAG,GAAA,OAAA,EAAAA,EAAAA,EAAAH,EAAAG,KAAAklB,KAAA/hB,EAAA,SAAAvD,EAAAC,GAAA,IAAA,GAAAG,GAAA,EAAAH,EAAAG,EAAAA,GAAA,EAAAJ,EAAA0G,KAAAtG,EAAA,OAAAJ,KAAAulB,IAAAhiB,EAAA,SAAAvD,EAAAC,GAAA,IAAA,GAAAG,GAAA,EAAAH,EAAAG,EAAAA,GAAA,EAAAJ,EAAA0G,KAAAtG,EAAA,OAAAJ,KAAA0hB,GAAAne,EAAA,SAAAvD,EAAAC,EAAAG,GAAA,IAAA,GAAAW,GAAA,EAAAX,EAAAA,EAAAH,EAAAG,IAAAW,GAAA,GAAAf,EAAA0G,KAAA3F,EAAA,OAAAf,KAAA+hB,GAAAxe,EAAA,SAAAvD,EAAAC,EAAAG,GAAA,IAAA,GAAAW,GAAA,EAAAX,EAAAA,EAAAH,EAAAG,EAAAH,IAAAc,GAAAf,EAAA0G,KAAA3F,EAAA,OAAAf,MAAA,KAAAI,KAAAolB,OAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC,OAAA,GAAA5kB,EAAA2jB,QAAAvkB,GAAAshB,EAAAthB,EAAA,KAAAA,KAAA6W,QAAA,EAAA4O,OAAA,GAAA7kB,EAAA2jB,QAAAvkB,GAAAuhB,EAAAvhB,EAAAgB,GAAA+f,EAAA2E,QAAA,SAAA9lB,EAAAC,GAAA,GAAAG,GAAAW,KAAAC,KAAAE,EAAAkP,EAAApQ,EAAA,IAAA,KAAAkB,EAAA,CAAA,IAAAjB,IAAAA,EAAAuD,EAAAxD,IAAAI,EAAAH,EAAAE,OAAAC,KAAAc,EAAAihB,EAAAliB,EAAAG,IAAAc,EAAA2O,GAAA9O,EAAA2F,KAAAxF,GAAAF,EAAA0F,KAAAxF,EAAAA,GAAAkP,EAAApQ,EAAAqiB,EAAArhB,EAAAD,IAAA,MAAAG,IAAAF,EAAA2jB,QAAAoB,IAAA/kB,EAAA2jB,QAAAxS,GAAAnR,EAAAglB,QAAAvD,EAAA5T,UAAA7N,EAAA2jB,QAAA3jB,EAAA4jB,WAAA,GAAAnC,GAAA7gB,IAAAuf,EAAA9P,KAAAhR,GAAAgR,KAAAhR,GAAA6Q,KAAAiQ,EAAA9gB,GAAAic,KAAA6E,EAAAkD,UAAAhkB,GAAAic,KAAA,KAAAjc,GAAAic,KAAAqI,QAAAtkB,GAAAqU,OAAAyM,EAAAoB,WAAAliB,GAAAqF,KAAAyb,EAAA+C,QAAA7jB,GAAA8Z,SAAAgH,EAAA8B,MAAA5iB,GAAA+G,SAAA+Z,EAAA/Z,UAAApH,EAAA,IAAAkhB,IAAA,SAAAC,GAAA,iCAAAvd,GAAA,iBAAA8d,GAAArhB,GAAAic,KAAA1b,MAAAyb,aAAAsF,IAAAsE,UAAA,EAAAnc,UAAA,EAAAoc,MAAA,EAAAC,MAAA,EAAA9lB,IAAAuP,GAAA3N,QAAAiP,KAAA,SAAAlR,GAAA,GAAAC,GAAAG,EAAAW,EAAAC,EAAAyL,KAAAtM,MAAA,IAAA,gBAAAH,GAAA,MAAAe,GAAA0L,KAAAA,KAAAqF,UAAAzR,GAAAL,GAAA6D,OAAA,WAAA,IAAA5D,EAAA,EAAAe,EAAAf,EAAAA,IAAA,GAAAI,GAAA+G,SAAArG,EAAAd,GAAAwM,MAAA,OAAA,IAAA,KAAArM,KAAAH,EAAA,EAAAe,EAAAf,EAAAA,IAAAI,GAAA6Q,KAAAlR,EAAAyM,KAAAxM,GAAAG,EAAA,OAAAA,GAAAqM,KAAAqF,UAAA9Q,EAAA,EAAAX,GAAAqU,OAAAtU,GAAAA,GAAAA,EAAAqR,UAAAhF,KAAAgF,SAAAhF,KAAAgF,SAAA,IAAA,IAAAzR,EAAAI,GAAAuU,IAAA,SAAA3U,GAAA,GAAAC,GAAAG,EAAAC,GAAAL,EAAAyM,MAAA1L,EAAAX,EAAAD,MAAA,OAAAsM,MAAA5I,OAAA,WAAA,IAAA5D,EAAA,EAAAc,EAAAd,EAAAA,IAAA,GAAAI,GAAA+G,SAAAqF,KAAArM,EAAAH,IAAA,OAAA,KAAA4kB,IAAA,SAAA7kB,GAAA,MAAAyM,MAAAqF,UAAAtO,EAAAiJ,KAAAzM,GAAA,KAAA6D,OAAA,SAAA7D,GAAA,MAAAyM,MAAAqF,UAAAtO,EAAAiJ,KAAAzM,GAAA,KAAAomB,GAAA,SAAApmB,GAAA,QAAAA,IAAA,gBAAAA,GAAA0hB,GAAAve,KAAAnD,GAAAK,GAAAL,EAAAyM,KAAA+E,SAAAwM,MAAAvR,KAAA,KAAA,EAAApM,GAAAwD,OAAA7D,EAAAyM,MAAAtM,OAAA,EAAAsM,KAAA5I,OAAA7D,GAAAG,OAAA,IAAAkmB,QAAA,SAAArmB,EAAAC,GAAA,IAAA,GAAAG,GAAAW,EAAA,EAAAC,EAAAyL,KAAAtM,OAAAe,KAAAC,EAAAugB,GAAAve,KAAAnD,IAAA,gBAAAA,GAAAK,GAAAL,EAAAC,GAAAwM,KAAA+E,SAAA,EAAAxQ,EAAAD,EAAAA,IAAA,IAAAX,EAAAqM,KAAA1L,GAAAX,GAAAA,EAAAkE,eAAAlE,IAAAH,GAAA,KAAAG,EAAAI,UAAA,CAAA,GAAAW,EAAAA,EAAA6c,MAAA5d,GAAA,GAAAC,GAAA6Q,KAAAwS,gBAAAtjB,EAAAJ,GAAA,CAAAkB,EAAAwF,KAAAtG,EAAA,OAAAA,EAAAA,EAAAuF,WAAA,MAAA8G,MAAAqF,UAAA5Q,EAAAf,OAAA,EAAAE,GAAAqU,OAAAxT,GAAAA,IAAA8c,MAAA,SAAAhe,GAAA,MAAAA,GAAA,gBAAAA,GAAAK,GAAAyD,QAAA2I,KAAA,GAAApM,GAAAL,IAAAK,GAAAyD,QAAA9D,EAAAgR,OAAAhR,EAAA,GAAAA,EAAAyM,MAAAA,KAAA,IAAAA,KAAA,GAAA9G,WAAA8G,KAAAyF,QAAAoU,UAAAnmB,OAAA,IAAAkF,IAAA,SAAArF,EAAAC,GAAA,GAAAG,GAAA,gBAAAJ,GAAAK,GAAAL,EAAAC,GAAAI,GAAAqR,UAAA1R,GAAAA,EAAAQ,UAAAR,GAAAA,GAAAe,EAAAV,GAAAsG,MAAA8F,KAAAoF,MAAAzR,EAAA,OAAAqM,MAAAqF,UAAAzR,GAAAqU,OAAA3T,KAAAwlB,QAAA,SAAAvmB,GAAA,MAAAyM,MAAApH,IAAA,MAAArF,EAAAyM,KAAAsF,WAAAtF,KAAAsF,WAAAlO,OAAA7D,OAAAK,GAAAuP,GAAA4W,QAAAnmB,GAAAuP,GAAA2W,QAAAlmB,GAAAM,MAAAykB,OAAA,SAAAplB,GAAA,GAAAC,GAAAD,EAAA2F,UAAA,OAAA1F,IAAA,KAAAA,EAAAO,SAAAP,EAAA,MAAAwmB,QAAA,SAAAzmB,GAAA,MAAAK,IAAAyhB,IAAA9hB,EAAA;AAAA0mB,aAAA,SAAA1mB,EAAAC,EAAAG,GAAA,MAAAC,IAAAyhB,IAAA9hB,EAAA,aAAAI,IAAA8lB,KAAA,SAAAlmB,GAAA,MAAAuD,GAAAvD,EAAA,gBAAAmmB,KAAA,SAAAnmB,GAAA,MAAAuD,GAAAvD,EAAA,oBAAA2mB,QAAA,SAAA3mB,GAAA,MAAAK,IAAAyhB,IAAA9hB,EAAA,gBAAAsmB,QAAA,SAAAtmB,GAAA,MAAAK,IAAAyhB,IAAA9hB,EAAA,oBAAA4mB,UAAA,SAAA5mB,EAAAC,EAAAG,GAAA,MAAAC,IAAAyhB,IAAA9hB,EAAA,cAAAI,IAAAymB,UAAA,SAAA7mB,EAAAC,EAAAG,GAAA,MAAAC,IAAAyhB,IAAA9hB,EAAA,kBAAAI,IAAA0mB,SAAA,SAAA9mB,GAAA,MAAAK,IAAA0mB,SAAA/mB,EAAA2F,gBAAAiQ,WAAA5V,IAAAimB,SAAA,SAAAjmB,GAAA,MAAAK,IAAA0mB,QAAA/mB,EAAA4V,aAAA9L,SAAA,SAAA9J,GAAA,MAAAK,IAAAkF,SAAAvF,EAAA,UAAAA,EAAA6I,iBAAA7I,EAAA4I,cAAAlJ,SAAAW,GAAAsG,SAAA3G,EAAAyG,cAAA,SAAAzG,EAAAC,GAAAI,GAAAuP,GAAA5P,GAAA,SAAAI,EAAAW,GAAA,GAAAC,GAAAX,GAAAiC,IAAAmK,KAAAxM,EAAAG,EAAA,OAAA8gB,IAAA/d,KAAAnD,KAAAe,EAAAX,GAAAW,GAAA,gBAAAA,KAAAC,EAAAX,GAAAwD,OAAA9C,EAAAC,IAAAA,EAAAyL,KAAAtM,OAAA,IAAAwhB,GAAA3hB,GAAAK,GAAAqU,OAAA1T,GAAAA,EAAAyL,KAAAtM,OAAA,GAAAghB,GAAAhe,KAAAnD,KAAAgB,EAAAA,EAAAgmB,WAAAva,KAAAqF,UAAA9Q,MAAAX,GAAA4B,QAAA4B,OAAA,SAAA7D,EAAAC,EAAAG,GAAA,MAAAA,KAAAJ,EAAA,QAAAA,EAAA,KAAA,IAAAC,EAAAE,OAAAE,GAAA6Q,KAAAwS,gBAAAzjB,EAAA,GAAAD,IAAAC,EAAA,OAAAI,GAAA6Q,KAAA2Q,QAAA7hB,EAAAC,IAAA6hB,IAAA,SAAA9hB,EAAAI,EAAAW,GAAA,IAAA,GAAAC,MAAAE,EAAAlB,EAAAI,GAAAc,GAAA,IAAAA,EAAAV,WAAAO,IAAAd,GAAA,IAAAiB,EAAAV,WAAAH,GAAAa,GAAAklB,GAAArlB,KAAA,IAAAG,EAAAV,UAAAQ,EAAA0F,KAAAxF,GAAAA,EAAAA,EAAAd,EAAA,OAAAY,IAAA+lB,QAAA,SAAA/mB,EAAAC,GAAA,IAAA,GAAAG,MAAAJ,EAAAA,EAAAA,EAAAyhB,YAAA,IAAAzhB,EAAAQ,UAAAR,IAAAC,GAAAG,EAAAsG,KAAA1G,EAAA,OAAAI,KAAA,IAAA4D,IAAA,6JAAA+d,GAAA,6BAAAC,GAAArF,OAAA,OAAA3Y,GAAA,WAAA,KAAAie,GAAA,OAAAE,GAAA,0EAAAE,GAAA,YAAAH,GAAA,UAAAX,GAAA,YAAAkB,GAAA,0BAAAzc,GAAA,wBAAAihB,GAAA,oCAAAC,GAAA,4BAAAviB,GAAA,cAAAwiB,GAAA,2CAAAC,IAAArN,QAAA,EAAA,+BAAA,aAAAsN,QAAA,EAAA,aAAA,eAAAC,MAAA,EAAA,QAAA,UAAAC,OAAA,EAAA,WAAA,aAAAC,OAAA,EAAA,UAAA,YAAA7a,IAAA,EAAA,iBAAA,oBAAA8a,KAAA,EAAA,mCAAA,uBAAAC,IAAA,EAAA,qBAAA,yBAAApK,SAAAjd,GAAAsC,QAAAmT,eAAA,EAAA,GAAA,KAAA,EAAA,SAAA,WAAA6R,GAAA5jB,EAAA7C,GAAA0mB,GAAAD,GAAAtjB,YAAAnD,EAAAgD,cAAA,OAAAkjB,IAAAS,SAAAT,GAAArN,OAAAqN,GAAAvR,MAAAuR,GAAAU,MAAAV,GAAAW,SAAAX,GAAAY,QAAAZ,GAAAI,MAAAJ,GAAAa,GAAAb,GAAAM,GAAArnB,GAAAuP,GAAA3N,QAAAyD,KAAA,SAAA1F,GAAA,MAAAK,IAAA0T,OAAAtH,KAAA,SAAAzM,GAAA,MAAAA,KAAAC,EAAAI,GAAAqF,KAAA+G,MAAAA,KAAAqB,QAAAoa,QAAAzb,KAAA,IAAAA,KAAA,GAAAnI,eAAApD,GAAAinB,eAAAnoB,KAAA,KAAAA,EAAAiS,UAAA9R,SAAAioB,QAAA,SAAApoB,GAAA,GAAAK,GAAAoD,WAAAzD,GAAA,MAAAyM,MAAA9L,KAAA,SAAAV,GAAAI,GAAAoM,MAAA2b,QAAApoB,EAAA2D,KAAA8I,KAAAxM,KAAA,IAAAwM,KAAA,GAAA,CAAA,GAAAxM,GAAAI,GAAAL,EAAAyM,KAAA,GAAAnI,eAAA6N,GAAA,GAAAkW,OAAA,EAAA5b,MAAA,GAAA9G,YAAA1F,EAAAqjB,aAAA7W,KAAA,IAAAxM,EAAAqC,IAAA,WAAA,IAAA,GAAAtC,GAAAyM,KAAAzM,EAAA4V,YAAA,IAAA5V,EAAA4V,WAAApV,UAAAR,EAAAA,EAAA4V,UAAA,OAAA5V,KAAAkoB,OAAAzb,MAAA,MAAAA,OAAA6b,UAAA,SAAAtoB,GAAA,MAAAK,IAAAoD,WAAAzD,GAAAyM,KAAA9L,KAAA,SAAAV,GAAAI,GAAAoM,MAAA6b,UAAAtoB,EAAA2D,KAAA8I,KAAAxM,MAAAwM,KAAA9L,KAAA,WAAA,GAAAV,GAAAI,GAAAoM,MAAArM,EAAAH,EAAA6J,UAAA1J,GAAAD,OAAAC,EAAAgoB,QAAApoB,GAAAC,EAAAioB,OAAAloB,MAAAuoB,KAAA,SAAAvoB,GAAA,GAAAC,GAAAI,GAAAoD,WAAAzD,EAAA,OAAAyM,MAAA9L,KAAA,SAAAP,GAAAC,GAAAoM,MAAA2b,QAAAnoB,EAAAD,EAAA2D,KAAA8I,KAAArM,GAAAJ,MAAAwoB,OAAA,WAAA,MAAA/b,MAAA2Y,SAAAzkB,KAAA,WAAAN,GAAAkF,SAAAkH,KAAA,SAAApM,GAAAoM,MAAAgc,YAAAhc,KAAAhG,cAAAkI,OAAAuZ,OAAA,WAAA,MAAAzb,MAAAic,SAAAzW,WAAA,EAAA,SAAAjS,IAAA,IAAAyM,KAAAjM,UAAA,KAAAiM,KAAAjM,UAAA,IAAAiM,KAAAjM,WAAAiM,KAAApI,YAAArE,MAAA2oB,QAAA,WAAA,MAAAlc,MAAAic,SAAAzW,WAAA,EAAA,SAAAjS,IAAA,IAAAyM,KAAAjM,UAAA,KAAAiM,KAAAjM,UAAA,IAAAiM,KAAAjM,WAAAiM,KAAA6W,aAAAtjB,EAAAyM,KAAAmJ,eAAAgT,OAAA,WAAA,MAAAnc,MAAAic,SAAAzW,WAAA,EAAA,SAAAjS,GAAAyM,KAAA9G,YAAA8G,KAAA9G,WAAA2d,aAAAtjB,EAAAyM,SAAAoc,MAAA,WAAA,MAAApc,MAAAic,SAAAzW,WAAA,EAAA,SAAAjS,GAAAyM,KAAA9G,YAAA8G,KAAA9G,WAAA2d,aAAAtjB,EAAAyM,KAAAgV,gBAAAvY,OAAA,SAAAlJ,EAAAC,GAAA,IAAA,GAAAG,GAAAW,EAAA,EAAA,OAAAX,EAAAqM,KAAA1L,IAAAA,MAAAf,GAAAK,GAAAwD,OAAA7D,GAAAI,IAAAD,OAAA,KAAAF,GAAA,IAAAG,EAAAI,UAAAH,GAAAqC,UAAA6D,EAAAnG,IAAAA,EAAAuF,aAAA1F,GAAAI,GAAA+G,SAAAhH,EAAAkE,cAAAlE,IAAA0E,EAAAyB,EAAAnG,EAAA,WAAAA,EAAAuF,WAAAiS,YAAAxX,IAAA,OAAAqM,OAAAqB,MAAA,WAAA,IAAA,GAAA9N,GAAAC,EAAA,EAAA,OAAAD,EAAAyM,KAAAxM,IAAAA,IAAA,CAAA,IAAA,IAAAD,EAAAQ,UAAAH,GAAAqC,UAAA6D,EAAAvG,GAAA,IAAAA,EAAA4V,YAAA5V,EAAA4X,YAAA5X,EAAA4V,WAAA5V,GAAAia,SAAA5Z,GAAAkF,SAAAvF,EAAA,YAAAA,EAAAia,QAAA9Z,OAAA,GAAA,MAAAsM,OAAA4b,MAAA,SAAAroB,EAAAC,GAAA,MAAAD,GAAA,MAAAA,GAAA,EAAAA,EAAAC,EAAA,MAAAA,EAAAD,EAAAC,EAAAwM,KAAAnK,IAAA,WAAA,MAAAjC,IAAAgoB,MAAA5b,KAAAzM,EAAAC,MAAA6oB,KAAA,SAAA9oB,GAAA,MAAAK,IAAA0T,OAAAtH,KAAA,SAAAzM,GAAA,GAAAI,GAAAqM,KAAA,OAAA1L,EAAA,EAAAC,EAAAyL,KAAAtM,MAAA,IAAAH,IAAAC,EAAA,MAAA,KAAAG,EAAAI,SAAAJ,EAAA0F,UAAAhD,QAAAif,GAAA,IAAA9hB,CAAA,MAAA,gBAAAD,IAAAyiB,GAAAtf,KAAAnD,KAAAK,GAAAsC,QAAAmT,eAAAkM,GAAA7e,KAAAnD,KAAAK,GAAAsC,QAAAgT,mBAAAsM,GAAA9e,KAAAnD,IAAAonB,IAAA/E,GAAAzd,KAAA5E,KAAA,GAAA,KAAA,GAAAgD,gBAAA,CAAAhD,EAAAA,EAAA8C,QAAAqf,GAAA,YAAA,KAAA,KAAAnhB,EAAAD,EAAAA,IAAAX,EAAAqM,KAAA1L,OAAA,IAAAX,EAAAI,WAAAH,GAAAqC,UAAA6D,EAAAnG,GAAA,IAAAA,EAAA0F,UAAA9F,EAAAI,GAAA,EAAA,MAAAc,KAAAd,GAAAqM,KAAAqB,QAAAoa,OAAAloB,IAAA,KAAAA,EAAAiS,UAAA9R,SAAAsoB,YAAA,SAAAzoB,GAAA,GAAAC,GAAAI,GAAAoD,WAAAzD,EAAA,OAAAC,IAAA,gBAAAD,KAAAA,EAAAK,GAAAL,GAAA6kB,IAAApY,MAAAzD,UAAAyD,KAAAic,UAAA1oB,IAAA,EAAA,SAAAA,GAAA,GAAAC,GAAAwM,KAAAgV,YAAArhB,EAAAqM,KAAA9G,UAAAvF,KAAAC,GAAAoM,MAAAvD,SAAA9I,EAAAkjB,aAAAtjB,EAAAC,OAAA+I,OAAA,SAAAhJ,GAAA,MAAAyM,MAAAvD,OAAAlJ,GAAA,IAAA0oB,SAAA,SAAA1oB,EAAAI,EAAAW,GAAAf,EAAA0B,GAAAsQ,SAAAhS,EAAA,IAAAgB,GAAAE,EAAAC,EAAAC,EAAAE,EAAAC,EAAAK,EAAA,EAAAJ,EAAAiL,KAAAtM,OAAAqN,EAAAf,KAAAgB,EAAAjM,EAAA,EAAAkM,EAAA1N,EAAA,GAAA2N,EAAAtN,GAAAoD,WAAAiK,EAAA,IAAAC,KAAA,GAAAnM,GAAA,gBAAAkM,IAAArN,GAAAsC,QAAAmU,aAAAmQ,GAAA9jB,KAAAuK,GAAA,MAAAjB,MAAA9L,KAAA,SAAAK,GAAA,GAAAE,GAAAsM,EAAA2E,GAAAnR,EAAA2M,KAAA3N,EAAA,GAAA0N,EAAA/J,KAAA8I,KAAAzL,EAAAZ,EAAAc,EAAA4nB,OAAA7oB,IAAAiB,EAAAwnB,SAAA1oB,EAAAI,EAAAW,IAAA,IAAAS,IAAAD,EAAAlB,GAAA4S,cAAAjT,EAAAyM,KAAA,GAAAnI,eAAA,EAAAmI,MAAAzL,EAAAO,EAAAqU,WAAA,IAAArU,EAAAkF,WAAAtG,SAAAoB,EAAAP,GAAAA,GAAA,CAAA,IAAAZ,EAAAA,GAAAC,GAAAkF,SAAAvE,EAAA,MAAAI,EAAAf,GAAAiC,IAAAiE,EAAAhF,EAAA,UAAAgD,GAAApD,EAAAC,EAAAjB,OAAAqB,EAAAI,EAAAA,IAAAV,EAAAK,EAAAK,IAAA6L,IAAAvM,EAAAb,GAAAgoB,MAAAnnB,GAAA,GAAA,GAAAC,GAAAd,GAAAsG,MAAAvF,EAAAmF,EAAArF,EAAA,YAAAH,EAAA4C,KAAAvD,GAAAC,GAAAkF,SAAAkH,KAAA7K,GAAA,SAAAuC,EAAAsI,KAAA7K,GAAA,SAAA6K,KAAA7K,GAAAV,EAAAU,EAAA,IAAAT,EAAA,IAAAG,EAAAF,EAAAA,EAAAjB,OAAA,GAAAmE,cAAAjE,GAAAiC,IAAAlB,EAAAsD,GAAA9C,EAAA,EAAAT,EAAAS,EAAAA,IAAAV,EAAAE,EAAAQ,GAAAslB,GAAA/jB,KAAAjC,EAAAZ,MAAA,MAAAD,GAAA0E,MAAA7D,EAAA,eAAAb,GAAA+G,SAAA9F,EAAAJ,KAAAA,EAAA6nB,IAAA1oB,GAAA2oB,MAAAC,IAAA/nB,EAAA6nB,IAAAzoB,KAAA,MAAAgK,SAAA,SAAAkJ,OAAA,EAAAqI,QAAA,EAAAqN,UAAA,IAAA7oB,GAAAqT,YAAAxS,EAAAwE,MAAAxE,EAAAijB,aAAAjjB,EAAA4E,WAAA,IAAAhD,QAAAqkB,GAAA,KAAA5lB,GAAAP,EAAA,KAAA,MAAAyL,SAAApM,GAAAM,MAAAgI,SAAA,SAAAwgB,UAAA,UAAA7F,aAAA,SAAA8F,YAAA,QAAAC,WAAA,eAAA,SAAArpB,EAAAC,GAAAI,GAAAuP,GAAA5P,GAAA,SAAAA,GAAA,IAAA,GAAAI,GAAAW,EAAA,EAAAC,KAAAE,EAAAb,GAAAL,GAAAmB,EAAAD,EAAAf,OAAA,EAAAgB,GAAAJ,EAAAA,IAAAX,EAAAW,IAAAI,EAAAsL,KAAAA,KAAA4b,OAAA,GAAAhoB,GAAAa,EAAAH,IAAAd,GAAAG,GAAAoN,GAAAwE,MAAAhR,EAAAZ,EAAAyR,MAAA,OAAApF,MAAAqF,UAAA9Q,MAAAX,GAAA4B,QAAAomB,MAAA,SAAAroB,EAAAC,EAAAG,GAAA,GAAAW,GAAAC,EAAAE,EAAAC,EAAAC,EAAAE,EAAAjB,GAAA+G,SAAApH,EAAAsE,cAAAtE,EAAA,IAAAK,GAAAsC,QAAAkD,YAAAxF,GAAA8Z,SAAAna,KAAAgiB,GAAA7e,KAAA,IAAAnD,EAAAuF,SAAA,KAAArE,EAAAlB,EAAAoW,WAAA,IAAAwR,GAAA9hB,UAAA9F,EAAA4F,UAAAgiB,GAAAhQ,YAAA1W,EAAA0mB,GAAAhS,eAAAvV,GAAAsC,QAAA6C,cAAAnF,GAAAsC,QAAA8T,gBAAA,IAAAzW,EAAAQ,UAAA,KAAAR,EAAAQ,UAAAH,GAAA8Z,SAAAna,IAAA,IAAAe,EAAAwF,EAAArF,GAAAE,EAAAmF,EAAAvG,GAAAmB,EAAA,EAAA,OAAAH,EAAAI,EAAAD,MAAAA,EAAAJ,EAAAI,IAAAmE,EAAAtE,EAAAD,EAAAI,GAAA,IAAAlB,EAAA,GAAAG,EAAA,IAAAgB,EAAAA,GAAAmF,EAAAvG,GAAAe,EAAAA,GAAAwF,EAAArF,GAAAC,EAAA,EAAA,OAAAH,EAAAI,EAAAD,IAAAA,IAAA6D,EAAAhE,EAAAD,EAAAI,QAAA6D,GAAAhF,EAAAkB,EAAA,OAAAH,GAAAwF,EAAArF,EAAA,UAAAH,EAAAZ,OAAA,GAAA2E,EAAA/D,GAAAO,GAAAiF,EAAAvG,EAAA,WAAAe,EAAAK,EAAAJ,EAAA,KAAAE,GAAA+R,cAAA,SAAAjT,EAAAC,EAAAG,EAAAW,GAAA,IAAA,GAAAC,GAAAE,EAAAC,EAAAC,EAAAE,EAAAC,EAAAK,EAAAJ,EAAAxB,EAAAG,OAAAuB,EAAAqC,EAAA9D,GAAAuN,KAAAC,EAAA,EAAAjM,EAAAiM,EAAAA,IAAA,GAAAvM,EAAAlB,EAAAyN,GAAAvM,GAAA,IAAAA,EAAA,GAAA,WAAAb,GAAAC,KAAAY,GAAAb,GAAAsG,MAAA6G,EAAAtM,EAAAV,UAAAU,GAAAA,OAAA,IAAAqgB,GAAApe,KAAAjC,GAAA,CAAA,IAAAE,EAAAA,GAAAM,EAAA2C,YAAApE,EAAAiE,cAAA,QAAA5C,GAAA+gB,GAAAzd,KAAA1D,KAAA,GAAA,KAAA,GAAA8B,cAAApB,EAAAwlB,GAAA9lB,IAAA8lB,GAAA9J,SAAAlc,EAAA0E,UAAAlE,EAAA,GAAAV,EAAA4B,QAAAqf,GAAA,aAAAvgB,EAAA,GAAAZ,EAAAY,EAAA,GAAAZ,KAAAI,EAAAA,EAAA2V,SAAA,KAAA1W,GAAAsC,QAAAgT,mBAAAsM,GAAA9e,KAAAjC,IAAAsM,EAAA9G,KAAAzG,EAAAkoB,eAAAlG,GAAArd,KAAA1D,GAAA,MAAAb,GAAAsC,QAAAkT,MAAA,IAAA3U,EAAA,UAAAI,GAAA4gB,GAAA/e,KAAAjC,GAAA,YAAAU,EAAA,IAAAsgB,GAAA/e,KAAAjC,GAAA,EAAAE,EAAAA,EAAAwU,WAAA5U,EAAAE,GAAAA,EAAAuF,WAAAtG,OAAAa,KAAAX,GAAAkF,SAAAhE,EAAAL,EAAAuF,WAAAzF,GAAA,WAAAO,EAAAkF,WAAAtG,QAAAe,EAAA0W,YAAArW,EACA,KAAAlB,GAAAsG,MAAA6G,EAAApM,EAAAqF,YAAArF,EAAA+iB,YAAA,GAAA/iB,EAAAwU,YAAAxU,EAAAwW,YAAAxW,EAAAwU,WAAAxU,GAAAM,EAAAqV,cAAAvJ,GAAA9G,KAAAzG,EAAAkoB,eAAAjnB,GAAA,KAAAE,GAAAM,EAAAkW,YAAAxW,GAAAf,GAAAsC,QAAAkU,eAAAxW,GAAAqD,KAAA6C,EAAAiH,EAAA,SAAA5G,GAAA6G,EAAA,EAAAvM,EAAAsM,EAAAC,MAAA,KAAA1M,GAAA,KAAAV,GAAAyD,QAAA5C,EAAAH,MAAAI,EAAAd,GAAA+G,SAAAlG,EAAAoD,cAAApD,GAAAE,EAAAmF,EAAA7E,EAAA2C,YAAAnD,GAAA,UAAAC,GAAA2D,EAAA1D,GAAAhB,GAAA,IAAAY,EAAA,EAAAE,EAAAE,EAAAJ,MAAAkmB,GAAA/jB,KAAAjC,EAAAZ,MAAA,KAAAF,EAAAsG,KAAAxF,EAAA,OAAAE,GAAA,KAAAM,GAAAgB,UAAA,SAAA1C,EAAAC,GAAA,IAAA,GAAAG,GAAAW,EAAAG,EAAAC,EAAAC,EAAA,EAAAE,EAAAjB,GAAAgB,QAAAE,EAAAlB,GAAAoB,MAAAD,EAAAnB,GAAAsC,QAAAC,cAAAlB,EAAArB,GAAA+E,MAAA6W,QAAA,OAAA7b,EAAAJ,EAAAoB,IAAAA,IAAA,IAAAnB,GAAAI,GAAAY,WAAAb,MAAAc,EAAAd,EAAAkB,GAAAH,EAAAD,GAAAK,EAAAL,IAAA,CAAA,GAAAC,EAAA+D,OAAA,IAAAnE,IAAAI,GAAA+D,OAAAxD,EAAAX,GAAAV,GAAA+E,MAAA8D,OAAA9I,EAAAW,GAAAV,GAAAoF,YAAArF,EAAAW,EAAAI,EAAAgE,OAAA5D,GAAAL,WAAAK,GAAAL,GAAAM,QAAApB,GAAAkB,SAAAlB,GAAAyE,kBAAA7D,EAAAZ,EAAAyE,gBAAAvD,GAAAlB,EAAAkB,GAAA,KAAAM,EAAA8E,KAAAxF,OAAA,IAAAwH,IAAAR,GAAAE,GAAAkhB,GAAA,kBAAAC,GAAA,wBAAAC,GAAA,4BAAAC,GAAA,4BAAAC,GAAA,UAAAhiB,GAAAiV,OAAA,KAAA9M,GAAA,SAAA,KAAAxH,GAAAsU,OAAA,KAAA9M,GAAA,kBAAA,KAAA8Z,GAAAhN,OAAA,YAAA9M,GAAA,IAAA,KAAArH,IAAAohB,KAAA,SAAAC,IAAAC,SAAA,WAAAC,WAAA,SAAAxiB,QAAA,SAAAyiB,IAAAC,cAAA,EAAAC,WAAA,KAAApiB,IAAA,MAAA,QAAA,SAAA,QAAAb,IAAA,SAAA,IAAA,MAAA,KAAA5G,IAAAuP,GAAA3N,QAAAkF,IAAA,SAAAnH,EAAAI,GAAA,MAAAC,IAAA0T,OAAAtH,KAAA,SAAAzM,EAAAI,EAAAW,GAAA,GAAAC,GAAAE,EAAAC,KAAAC,EAAA,CAAA,IAAAf,GAAA+B,QAAAhC,GAAA,CAAA,IAAAc,EAAAgH,GAAAlI,GAAAgB,EAAAZ,EAAAD,OAAAa,EAAAI,EAAAA,IAAAD,EAAAf,EAAAgB,IAAAf,GAAA8G,IAAAnH,EAAAI,EAAAgB,IAAA,EAAAF,EAAA,OAAAC,GAAA,MAAAJ,KAAAd,EAAAI,GAAAiH,MAAAtH,EAAAI,EAAAW,GAAAV,GAAA8G,IAAAnH,EAAAI,IAAAJ,EAAAI,EAAA6R,UAAA9R,OAAA,IAAAqO,KAAA,WAAA,MAAAnH,GAAAoF,MAAA,IAAAgC,KAAA,WAAA,MAAApH,GAAAoF,OAAA0d,OAAA,SAAAnqB,GAAA,GAAAC,GAAA,iBAAAD,EAAA,OAAAyM,MAAA9L,KAAA,YAAAV,EAAAD,EAAAkH,EAAAuF,OAAApM,GAAAoM,MAAA+B,OAAAnO,GAAAoM,MAAAgC,YAAApO,GAAA4B,QAAAoL,UAAA4B,SAAA4C,IAAA,SAAA7R,EAAAC,GAAA,GAAAA,EAAA,CAAA,GAAAG,GAAAgI,GAAApI,EAAA,UAAA,OAAA,KAAAI,EAAA,IAAAA,MAAAgqB,WAAAC,aAAA,EAAAC,aAAA,EAAAJ,YAAA,EAAAK,YAAA,EAAAtb,SAAA,EAAAub,SAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAtc,MAAA,GAAAuc,UAAAC,QAAAvqB,GAAAsC,QAAAqT,SAAA,WAAA,cAAA1O,MAAA,SAAAtH,EAAAI,EAAAW,EAAAC,GAAA,GAAAhB,GAAA,IAAAA,EAAAQ,UAAA,IAAAR,EAAAQ,UAAAR,EAAAsH,MAAA,CAAA,GAAApG,GAAAC,EAAAC,EAAAE,EAAAjB,GAAA6B,UAAA9B,GAAAmB,EAAAvB,EAAAsH,KAAA,IAAAlH,EAAAC,GAAAsqB,SAAArpB,KAAAjB,GAAAsqB,SAAArpB,GAAAuF,EAAAtF,EAAAD,IAAAF,EAAAf,GAAAgN,SAAAjN,IAAAC,GAAAgN,SAAA/L,GAAAP,IAAAd,EAAA,MAAAmB,IAAA,OAAAA,KAAAF,EAAAE,EAAAyQ,IAAA7R,GAAA,EAAAgB,MAAAf,EAAAiB,EAAAK,EAAAnB,EAAA,IAAAe,QAAAJ,GAAA,WAAAI,IAAAD,EAAAyoB,GAAA/kB,KAAA7D,MAAAA,GAAAG,EAAA,GAAA,GAAAA,EAAA,GAAAqH,WAAAlI,GAAA8G,IAAAnH,EAAAI,IAAAe,EAAA,YAAA,MAAAJ,GAAA,WAAAI,GAAA2R,MAAA/R,KAAA,WAAAI,GAAAd,GAAA+pB,UAAA9oB,KAAAP,GAAA,MAAAV,GAAAsC,QAAA2U,iBAAA,KAAAvW,GAAA,IAAAX,EAAAmP,QAAA,gBAAAhO,EAAAnB,GAAA,WAAAgB,GAAA,OAAAA,KAAAL,EAAAK,EAAA0Y,IAAA9Z,EAAAe,EAAAC,MAAAf,IAAA,IAAAsB,EAAAnB,GAAAW,EAAA,MAAAa,OAAAuF,IAAA,SAAAnH,EAAAI,EAAAW,EAAAC,GAAA,GAAAE,GAAAC,EAAAC,EAAAE,EAAAjB,GAAA6B,UAAA9B,EAAA,OAAAA,GAAAC,GAAAsqB,SAAArpB,KAAAjB,GAAAsqB,SAAArpB,GAAAuF,EAAA7G,EAAAsH,MAAAhG,IAAAF,EAAAf,GAAAgN,SAAAjN,IAAAC,GAAAgN,SAAA/L,GAAAF,GAAA,OAAAA,KAAAD,EAAAC,EAAAyQ,IAAA7R,GAAA,EAAAe,IAAAI,IAAAlB,IAAAkB,EAAAiH,GAAApI,EAAAI,EAAAY,IAAA,WAAAG,GAAAf,IAAA4pB,MAAA7oB,EAAA6oB,GAAA5pB,IAAA,KAAAW,GAAAA,GAAAG,EAAAqH,WAAApH,GAAAJ,KAAA,GAAAV,GAAAwS,UAAA3R,GAAAA,GAAA,EAAAC,GAAAA,GAAA0pB,KAAA,SAAA7qB,EAAAC,EAAAG,EAAAW,GAAA,GAAAC,GAAAE,EAAAC,IAAA,KAAAD,IAAAjB,GAAAkB,EAAAD,GAAAlB,EAAAsH,MAAApG,GAAAlB,EAAAsH,MAAApG,GAAAjB,EAAAiB,EAAAF,GAAAZ,EAAA4R,MAAAhS,EAAAe,MAAA,KAAAG,IAAAjB,GAAAD,EAAAsH,MAAApG,GAAAC,EAAAD,EAAA,OAAAF,MAAAhB,EAAA0X,kBAAAxP,GAAA,SAAAjI,GAAA,MAAAD,GAAA0X,iBAAAzX,EAAA,OAAAmI,GAAA,SAAApI,EAAAI,EAAAW,GAAA,GAAAC,GAAAE,EAAAC,EAAAC,EAAAL,GAAAmH,GAAAlI,GAAAsB,EAAAF,EAAAA,EAAA0pB,iBAAA1qB,IAAAgB,EAAAhB,GAAAH,EAAAsB,EAAAvB,EAAAsH,KAAA,OAAAlG,KAAA,KAAAE,GAAAjB,GAAA+G,SAAApH,EAAAsE,cAAAtE,KAAAsB,EAAAjB,GAAAiH,MAAAtH,EAAAI,IAAAiI,GAAAlF,KAAA7B,IAAAooB,GAAAvmB,KAAA/C,KAAAY,EAAAO,EAAA2N,MAAAhO,EAAAK,EAAAwpB,SAAA5pB,EAAAI,EAAAypB,SAAAzpB,EAAAwpB,SAAAxpB,EAAAypB,SAAAzpB,EAAA2N,MAAA5N,EAAAA,EAAAF,EAAA8N,MAAA3N,EAAA2N,MAAAlO,EAAAO,EAAAwpB,SAAA7pB,EAAAK,EAAAypB,SAAA7pB,IAAAG,IAAAJ,EAAAvB,gBAAAsrB,eAAA/iB,GAAA,SAAAlI,GAAA,MAAAA,GAAAirB,cAAA7iB,GAAA,SAAApI,EAAAI,EAAAW,GAAA,GAAAC,GAAAE,EAAAC,EAAAC,EAAAL,GAAAmH,GAAAlI,GAAAsB,EAAAF,EAAAA,EAAAhB,GAAAH,EAAAsB,EAAAvB,EAAAsH,KAAA,OAAA,OAAAhG,GAAAC,GAAAA,EAAAnB,KAAAkB,EAAAC,EAAAnB,IAAAiI,GAAAlF,KAAA7B,KAAAkoB,GAAArmB,KAAA/C,KAAAY,EAAAO,EAAAjC,KAAA4B,EAAAlB,EAAAkrB,aAAA/pB,EAAAD,GAAAA,EAAA5B,KAAA6B,IAAAD,EAAA5B,KAAAU,EAAAirB,aAAA3rB,MAAAiC,EAAAjC,KAAA,aAAAc,EAAA,MAAAkB,EAAAA,EAAAC,EAAA4pB,UAAA,KAAA5pB,EAAAjC,KAAA0B,EAAAG,IAAAD,EAAA5B,KAAA6B,IAAA,KAAAG,EAAA,OAAAA,IAAAjB,GAAAM,MAAA,SAAA,SAAA,SAAAX,EAAAI,GAAAC,GAAAgN,SAAAjN,IAAAyR,IAAA,SAAA7R,EAAAe,EAAAC,GAAA,MAAAD,GAAA,IAAAf,EAAAgI,aAAAyhB,GAAAtmB,KAAA9C,GAAA8G,IAAAnH,EAAA,YAAAK,GAAAwqB,KAAA7qB,EAAA6pB,GAAA,WAAA,MAAA9hB,GAAA/H,EAAAI,EAAAY,KAAA+G,EAAA/H,EAAAI,EAAAY,GAAAf,GAAA6Z,IAAA,SAAA9Z,EAAAC,EAAAc,GAAA,GAAAC,GAAAD,GAAAmH,GAAAlI,EAAA,OAAAyH,GAAAzH,EAAAC,EAAAc,EAAA8G,EAAA7H,EAAAI,EAAAW,EAAAV,GAAAsC,QAAAwF,WAAA,eAAA9H,GAAA8G,IAAAnH,EAAA,aAAA,EAAAgB,GAAAA,GAAA,OAAAX,GAAAsC,QAAAsM,UAAA5O,GAAAgN,SAAA4B,SAAA4C,IAAA,SAAA7R,EAAAC,GAAA,MAAAspB,IAAApmB,MAAAlD,GAAAD,EAAAirB,aAAAjrB,EAAAirB,aAAApnB,OAAA7D,EAAAsH,MAAAzD,SAAA,IAAA,IAAA0E,WAAAoU,OAAAyO,IAAA,GAAAnrB,EAAA,IAAA,IAAA6Z,IAAA,SAAA9Z,EAAAC,GAAA,GAAAG,GAAAJ,EAAAsH,MAAAvG,EAAAf,EAAAirB,aAAAjqB,EAAAX,GAAAwS,UAAA5S,GAAA,iBAAA,IAAAA,EAAA,IAAA,GAAAiB,EAAAH,GAAAA,EAAA8C,QAAAzD,EAAAyD,QAAA,EAAAzD,GAAAgO,KAAA,GAAAnO,GAAA,GAAA,KAAAA,IAAA,KAAAI,GAAA0F,KAAA7E,EAAA4B,QAAAwmB,GAAA,MAAAlpB,EAAAyE,kBAAAzE,EAAAyE,gBAAA,UAAA,KAAA5E,GAAAc,IAAAA,EAAA8C,UAAAzD,EAAAyD,OAAAylB,GAAAnmB,KAAAjC,GAAAA,EAAA4B,QAAAwmB,GAAAtoB,GAAAE,EAAA,IAAAF,MAAAX,GAAA,WAAAA,GAAAsC,QAAA4T,sBAAAlW,GAAAgN,SAAAsK,aAAA9F,IAAA,SAAA7R,EAAAI,GAAA,MAAAA,GAAAC,GAAAwqB,KAAA7qB,GAAAuH,QAAA,gBAAAa,IAAApI,EAAA,gBAAAC,MAAAI,GAAAsC,QAAA6T,eAAAnW,GAAAuP,GAAAka,UAAAzpB,GAAAM,MAAA,MAAA,QAAA,SAAAX,EAAAI,GAAAC,GAAAgN,SAAAjN,IAAAyR,IAAA,SAAA7R,EAAAe,GAAA,MAAAA,IAAAA,EAAAqH,GAAApI,EAAAI,GAAAiI,GAAAlF,KAAApC,GAAAV,GAAAL,GAAA8pB,WAAA1pB,GAAA,KAAAW,GAAAd,QAAAI,GAAAic,MAAAjc,GAAAic,KAAA0J,UAAA3lB,GAAAic,KAAA0J,QAAAzX,OAAA,SAAAvO,GAAA,MAAA,IAAAA,EAAAgI,aAAA,GAAAhI,EAAAiI,eAAA5H,GAAAsC,QAAA4U,uBAAA,UAAAvX,EAAAsH,OAAAtH,EAAAsH,MAAAC,SAAAlH,GAAA8G,IAAAnH,EAAA,aAAAK,GAAAic,KAAA0J,QAAAqF,QAAA,SAAArrB,GAAA,OAAAK,GAAAic,KAAA0J,QAAAzX,OAAAvO,KAAAK,GAAAM,MAAA2qB,OAAA,GAAAC,QAAA,GAAAC,OAAA,SAAA,SAAAxrB,EAAAC,GAAAI,GAAAgN,SAAArN,EAAAC,IAAAqN,OAAA,SAAAlN,GAAA,IAAA,GAAAW,GAAA,EAAAC,KAAAE,EAAA,gBAAAd,GAAAA,EAAAmC,MAAA,MAAAnC,GAAA,EAAAW,EAAAA,IAAAC,EAAAhB,EAAA8H,GAAA/G,GAAAd,GAAAiB,EAAAH,IAAAG,EAAAH,EAAA,IAAAG,EAAA,EAAA,OAAAF,KAAA0oB,GAAAvmB,KAAAnD,KAAAK,GAAAgN,SAAArN,EAAAC,GAAA6Z,IAAArS,IAAA,IAAAgkB,IAAA,OAAAriB,GAAA,QAAAwG,GAAA,SAAA8b,GAAA,wCAAAC,GAAA,oCAAAtrB,IAAAuP,GAAA3N,QAAA2pB,UAAA,WAAA,MAAAvrB,IAAAknB,MAAA9a,KAAAof,mBAAAA,eAAA,WAAA,MAAApf,MAAAnK,IAAA,WAAA,GAAAtC,GAAAK,GAAAgZ,KAAA5M,KAAA,WAAA,OAAAzM,GAAAK,GAAAqR,UAAA1R,GAAAyM,OAAA5I,OAAA,WAAA,GAAA7D,GAAAyM,KAAAnM,IAAA,OAAAmM,MAAA0L,OAAA9X,GAAAoM,MAAA2Z,GAAA,cAAAuF,GAAAxoB,KAAAsJ,KAAAlH,YAAAmmB,GAAAvoB,KAAAnD,KAAAyM,KAAAvG,UAAAF,GAAA7C,KAAAnD,MAAAsC,IAAA,SAAAtC,EAAAC,GAAA,GAAAG,GAAAC,GAAAoM,MAAAmN,KAAA,OAAA,OAAAxZ,EAAA,KAAAC,GAAA+B,QAAAhC,GAAAC,GAAAiC,IAAAlC,EAAA,SAAAJ,GAAA,OAAAmY,KAAAlY,EAAAkY,KAAAhS,MAAAnG,EAAA8C,QAAA8M,GAAA,YAAAuI,KAAAlY,EAAAkY,KAAAhS,MAAA/F,EAAA0C,QAAA8M,GAAA,WAAAiC,SAAAxR,GAAAknB,MAAA,SAAAvnB,EAAAI,GAAA,GAAAW,GAAAC,KAAAE,EAAA,SAAAlB,EAAAC,GAAAA,EAAAI,GAAAoD,WAAAxD,GAAAA,IAAA,MAAAA,EAAA,GAAAA,EAAAe,EAAAA,EAAAb,QAAA2rB,mBAAA9rB,GAAA,IAAA8rB,mBAAA7rB,GAAA,IAAAG,IAAAH,IAAAG,EAAAC,GAAAsJ,cAAAtJ,GAAAsJ,aAAAoiB,aAAA1rB,GAAA+B,QAAApC,IAAAA,EAAAgR,SAAA3Q,GAAA+Q,cAAApR,GAAAK,GAAAM,KAAAX,EAAA,WAAAkB,EAAAuL,KAAA0L,KAAA1L,KAAAtG,aAAA,KAAApF,IAAAf,GAAAmJ,EAAApI,EAAAf,EAAAe,GAAAX,EAAAc,EAAA,OAAAF,GAAAwb,KAAA,KAAA1Z,QAAA2oB,GAAA,MAAAprB,GAAAM,KAAA,0MAAA4B,MAAA,KAAA,SAAAvC,EAAAC,GAAAI,GAAAuP,GAAA3P,GAAA,SAAAD,EAAAI,GAAA,MAAA6R,WAAA9R,OAAA,EAAAsM,KAAAhF,GAAAxH,EAAA,KAAAD,EAAAI,GAAAqM,KAAAiG,QAAAzS,MAAAI,GAAAuP,GAAAoc,MAAA,SAAAhsB,EAAAC,GAAA,MAAAwM,MAAAyT,WAAAlgB,GAAAmgB,WAAAlgB,GAAAD,GAAA,IAAAisB,IAAAC,GAAAC,GAAA9rB,GAAA4K,MAAAmhB,GAAA,KAAAC,GAAA,OAAAC,GAAA,gBAAAC,GAAA,gCAAAC,GAAA,4DAAAC,GAAA,iBAAAC,GAAA,QAAAC,GAAA,8CAAAC,GAAAvsB,GAAAuP,GAAAwP,KAAAyN,MAAApjB,MAAAqjB,GAAA,KAAAzqB,OAAA,IAAA,KAAA6pB,GAAA/qB,EAAAia,KAAA,MAAA2R,IAAAb,GAAAhrB,EAAAgD,cAAA,KAAAgoB,GAAA9Q,KAAA,GAAA8Q,GAAAA,GAAA9Q,KAAA6Q,GAAAU,GAAA/nB,KAAAsnB,GAAAlpB,mBAAA3C,GAAAuP,GAAAwP,KAAA,SAAApf,EAAAI,EAAAW,GAAA,GAAA,gBAAAf,IAAA4sB,GAAA,MAAAA,IAAA5a,MAAAvF,KAAAwF,UAAA,IAAAjR,GAAAE,EAAAC,EAAAC,EAAAqL,KAAAnL,EAAAtB,EAAAuP,QAAA,IAAA,OAAAjO,IAAA,IAAAN,EAAAhB,EAAAgH,MAAA1F,EAAAtB,EAAAG,QAAAH,EAAAA,EAAAgH,MAAA,EAAA1F,IAAAjB,GAAAoD,WAAArD,IAAAW,EAAAX,EAAAA,EAAAH,GAAAG,GAAA,gBAAAA,KAAAe,EAAA,QAAAC,EAAAjB,OAAA,GAAAE,GAAA2oB,MAAAC,IAAAjpB,EAAAM,KAAAa,EAAAmJ,SAAA,OAAA3I,KAAAvB,IAAA8M,KAAA,SAAAlN,GAAAkB,EAAA+Q,UAAA7Q,EAAA0nB,KAAA9nB,EAAAX,GAAA,SAAA6nB,OAAA7nB,GAAA8Q,UAAAnR,IAAAkR,KAAAlQ,GAAAhB,KAAAmN,SAAApM,GAAA,SAAAf,EAAAC,GAAAmB,EAAAT,KAAAI,EAAAG,IAAAlB,EAAAgtB,aAAA/sB,EAAAD,MAAAyM,MAAApM,GAAAM,MAAA,YAAA,WAAA,eAAA,YAAA,cAAA,YAAA,SAAAX,EAAAC,GAAAI,GAAAuP,GAAA3P,GAAA,SAAAD,GAAA,MAAAyM,MAAAhF,GAAAxH,EAAAD,MAAAK,GAAAM,MAAA,MAAA,QAAA,SAAAX,EAAAI,GAAAC,GAAAD,GAAA,SAAAJ,EAAAe,EAAAC,EAAAE,GAAA,MAAAb,IAAAoD,WAAA1C,KAAAG,EAAAA,GAAAF,EAAAA,EAAAD,EAAAA,EAAAd,GAAAI,GAAA2oB,MAAAC,IAAAjpB,EAAAM,KAAAF,EAAAkK,SAAApJ,EAAAS,KAAAZ,EAAAksB,QAAAjsB,OAAAX,GAAA4B,QAAAirB,OAAA,EAAAC,gBAAAC,QAAAzjB,cAAAsf,IAAAiD,GAAA5rB,KAAA,MAAA+sB,QAAAb,GAAArpB,KAAA8oB,GAAA,IAAApQ,QAAA,EAAAyR,aAAA,EAAA9Z,OAAA,EAAA+Z,YAAA,mDAAAC,SAAAC,IAAAX,GAAApnB,KAAA,aAAAojB,KAAA,YAAA4E,IAAA,4BAAAC,KAAA,qCAAA7jB,UAAA4jB,IAAA,MAAA5E,KAAA,OAAA6E,KAAA,QAAA5jB,gBAAA2jB,IAAA,cAAAhoB,KAAA,gBAAAyE,YAAAyjB,SAAA5tB,EAAA+iB,OAAA8K,aAAA,EAAAC,YAAAztB,GAAA+C,UAAA2qB,WAAA1tB,GAAAgT,UAAAzJ,aAAAqf,KAAA,EAAAzX,SAAA,IAAAwc,UAAA,SAAAhuB,EAAAC,GAAA,MAAAA,GAAAyJ,EAAAA,EAAA1J,EAAAK,GAAAsJ,cAAA1J,GAAAyJ,EAAArJ,GAAAsJ,aAAA3J,IAAAiuB,cAAA5kB,EAAAwjB,IAAAqB,cAAA7kB,EAAAI,IAAAuf,KAAA,SAAAhpB,EAAAI,GAAA,QAAA8P,GAAAlQ,EAAAI,EAAAW,EAAAC,GAAA,GAAAY,GAAA6N,EAAAE,EAAA9O,EAAAkP,EAAAE,EAAA7P,CAAA,KAAAyP,IAAAA,EAAA,EAAAzO,GAAAoX,aAAApX,GAAAG,EAAAtB,EAAAkB,EAAAH,GAAA,GAAAgP,EAAAW,WAAA3Q,EAAA,EAAA,EAAA,EAAAe,IAAAF,EAAAgJ,EAAArI,EAAAwO,EAAAjP,IAAAf,GAAA,KAAA,IAAAA,GAAA,MAAAA,GAAAwB,EAAA2sB,aAAApe,EAAAC,EAAA9F,kBAAA,iBAAA6F,IAAA1P,GAAA8sB,aAAAjsB,GAAA6O,GAAAA,EAAAC,EAAA9F,kBAAA,QAAA6F,IAAA1P,GAAA+sB,KAAAlsB,GAAA6O,IAAA,MAAA/P,GAAA4B,GAAA,EAAAqO,EAAA,aAAA,MAAAjQ,GAAA4B,GAAA,EAAAqO,EAAA,gBAAArO,EAAAwI,EAAA5I,EAAAX,GAAAoP,EAAArO,EAAA4I,MAAAiF,EAAA7N,EAAAD,KAAAgO,EAAA/N,EAAA6I,MAAA7I,GAAA+N,KAAAA,EAAAM,GAAAjQ,IAAAiQ,KAAAA,EAAA,QAAA,EAAAjQ,IAAAA,EAAA,KAAAgQ,EAAAoe,OAAApuB,EAAAgQ,EAAAqe,YAAAjuB,GAAA6P,GAAA,GAAArO,EAAA6L,EAAA3B,YAAApK,GAAA+N,EAAAQ,EAAAD,IAAAvC,EAAAf,WAAAhL,GAAAsO,EAAAC,EAAAN,IAAAK,EAAAse,WAAA3gB,GAAAA,EAAA1N,EAAAqB,GAAAkM,EAAAkF,QAAA9Q,EAAA,cAAA,aAAAoO,EAAAxO,EAAAI,EAAA6N,EAAAE,IAAAjC,EAAAqH,SAAArT,GAAAsO,EAAAC,IAAA3O,IAAAkM,EAAAkF,QAAA,gBAAA1C,EAAAxO,MAAAnB,GAAA6sB,QAAA7sB,GAAA+E,MAAAsN,QAAA,cAAA,gBAAA1S,KAAAI,EAAAJ,EAAAA,EAAAC,GAAAG,EAAAA,KAAA,IAAAW,GAAAC,EAAAE,EAAAC,EAAAC,EAAAE,EAAAC,EAAAK,EAAAJ,EAAAnB,GAAA2tB,aAAA5tB,GAAAsB,EAAAF,EAAAgQ,SAAAhQ,EAAAgM,EAAAhM,EAAAgQ,UAAA9P,EAAAlB,UAAAkB,EAAAsP,QAAA3Q,GAAAqB,GAAArB,GAAA+E,MAAAqI,EAAApN,GAAAiL,WAAAoC,EAAArN,GAAAgU,UAAA,eAAA1G,EAAAnM,EAAA8sB,eAAA7e,KAAAE,KAAAE,EAAA,EAAAE,EAAA,WAAAC,GAAAW,WAAA,EAAAzG,kBAAA,SAAAlK,GAAA,GAAAC,EAAA,IAAA,IAAA4P,EAAA,CAAA,IAAAjO,EAAA,IAAAA,KAAA3B,EAAAssB,GAAA3nB,KAAAzD,IAAAS,EAAA3B,EAAA,GAAA+C,eAAA/C,EAAA,EAAAA,GAAA2B,EAAA5B,EAAAgD,eAAA,MAAA,OAAA/C,EAAA,KAAAA,GAAAsuB,sBAAA,WAAA,MAAA,KAAA1e,EAAA1O,EAAA,MAAAqtB,iBAAA,SAAAxuB,EAAAC,GAAA,GAAAG,GAAAJ,EAAAgD,aAAA,OAAA6M,KAAA7P,EAAA2P,EAAAvP,GAAAuP,EAAAvP,IAAAJ,EAAAyP,EAAAzP,GAAAC,GAAAwM,MAAAgiB,iBAAA,SAAAzuB,GAAA,MAAA6P,KAAArO,EAAAyI,SAAAjK,GAAAyM,MAAA6hB,WAAA,SAAAtuB,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAA,EAAA6P,EAAA,IAAA5P,IAAAD,GAAA2N,EAAA1N,IAAA0N,EAAA1N,GAAAD,EAAAC,QAAA+P,GAAAzE,OAAAvL,EAAAgQ,EAAAoe,QAAA,OAAA3hB,OAAAiiB,MAAA,SAAA1uB,GAAA,GAAAC,GAAAD,GAAA+P,CAAA,OAAAxO,IAAAA,EAAAmtB,MAAAzuB,GAAAiQ,EAAA,EAAAjQ,GAAAwM,MAAA,IAAAgB,EAAA1B,QAAAiE,GAAA7C,SAAAO,EAAArI,IAAA2K,EAAAid,QAAAjd,EAAA9C,KAAA8C,EAAAvF,MAAAuF,EAAA5C,KAAA5L,EAAAynB,MAAAjpB,GAAAwB,EAAAynB,KAAAiD,IAAA,IAAAppB,QAAAupB,GAAA,IAAAvpB,QAAA4pB,GAAAT,GAAA,GAAA,MAAAzqB,EAAAlB,KAAAF,EAAAuuB,QAAAvuB,EAAAE,MAAAkB,EAAAmtB,QAAAntB,EAAAlB,KAAAkB,EAAAgI,UAAAnJ,GAAA0F,KAAAvE,EAAA8I,UAAA,KAAAtH,cAAApC,MAAAC,MAAA,IAAA,MAAAW,EAAAotB,cAAA7tB,EAAA4rB,GAAA/nB,KAAApD,EAAAynB,IAAAjmB,eAAAxB,EAAAotB,eAAA7tB,GAAAA,EAAA,KAAAkrB,GAAA,IAAAlrB,EAAA,KAAAkrB,GAAA,KAAAlrB,EAAA,KAAA,UAAAA,EAAA,GAAA,GAAA,QAAAkrB,GAAA,KAAA,UAAAA,GAAA,GAAA,GAAA,QAAAzqB,EAAAG,MAAAH,EAAA8rB,aAAA,gBAAA9rB,GAAAG,OAAAH,EAAAG,KAAAtB,GAAAknB,MAAA/lB,EAAAG,KAAAH,EAAAuqB,cAAAxiB,EAAAsjB,GAAArrB,EAAApB,EAAA4P,GAAA,IAAAH,EAAA,MAAAG,EAAA1O,GAAAE,EAAAqa,OAAAva,GAAA,IAAAjB,GAAA6sB,UAAA7sB,GAAA+E,MAAAsN,QAAA,aAAAlR,EAAAlB,KAAAkB,EAAAlB,KAAAyG,cAAAvF,EAAAqtB,YAAApC,GAAAtpB,KAAA3B,EAAAlB,MAAAY,EAAAM,EAAAynB,IAAAznB,EAAAqtB,aAAArtB,EAAAG,OAAAT,EAAAM,EAAAynB,MAAAmD,GAAAjpB,KAAAjC,GAAA,IAAA,KAAAM,EAAAG,WAAAH,GAAAG,MAAAH,EAAAC,SAAA,IAAAD,EAAAynB,IAAAqD,GAAAnpB,KAAAjC,GAAAA,EAAA4B,QAAAwpB,GAAA,OAAAH,MAAAjrB,GAAAkrB,GAAAjpB,KAAAjC,GAAA,IAAA,KAAA,KAAAirB,OAAA3qB,EAAA2sB,aAAA9tB,GAAA8sB,aAAAjsB,IAAA8O,EAAAwe,iBAAA,oBAAAnuB,GAAA8sB,aAAAjsB,IAAAb,GAAA+sB,KAAAlsB,IAAA8O,EAAAwe,iBAAA,gBAAAnuB,GAAA+sB,KAAAlsB,MAAAM,EAAAG,MAAAH,EAAAqtB,YAAArtB,EAAA+rB,eAAA,GAAAntB,EAAAmtB,cAAAvd,EAAAwe,iBAAA,eAAAhtB,EAAA+rB,aAAAvd,EAAAwe,iBAAA,SAAAhtB,EAAAgI,UAAA,IAAAhI,EAAAgsB,QAAAhsB,EAAAgI,UAAA,IAAAhI,EAAAgsB,QAAAhsB,EAAAgI,UAAA,KAAA,MAAAhI,EAAAgI,UAAA,GAAA,KAAAsjB,GAAA,WAAA,IAAAtrB,EAAAgsB,QAAA,KAAA,KAAAxsB,IAAAQ,GAAAstB,QAAA9e,EAAAwe,iBAAAxtB,EAAAQ,EAAAstB,QAAA9tB,GAAA,IAAAQ,EAAAutB,aAAAvtB,EAAAutB,WAAAprB,KAAAjC,EAAAsO,EAAAxO,MAAA,GAAA,IAAAqO,GAAA,MAAAG,GAAA0e,OAAA3e,GAAA,OAAA,KAAA/O,KAAAisB,QAAA,EAAAxiB,MAAA,EAAA0C,SAAA,GAAA6C,EAAAhP,GAAAQ,EAAAR,GAAA,IAAAO,EAAAgI,EAAAE,GAAAjI,EAAApB,EAAA4P,GAAA,CAAAA,EAAAW,WAAA,EAAArP,GAAAkM,EAAAkF,QAAA,YAAA1C,EAAAxO,IAAAA,EAAAgS,OAAAhS,EAAAwtB,QAAA,IAAA5tB,EAAA2J,WAAA,WAAAiF,EAAA0e,MAAA,YAAAltB,EAAAwtB,SAAA,KAAAnf,EAAA,EAAAtO,EAAA0tB,KAAAxf,EAAAS,GAAA,MAAAD,GAAA,KAAA,EAAAJ,GAAA,KAAAI,EAAAC,GAAA,GAAAD,QAAAC,GAAA,GAAA,eAAA,OAAAF,IAAAkf,UAAA,SAAAlvB,EAAAI,GAAA,MAAAC,IAAAwR,IAAA7R,EAAAC,EAAAG,EAAA,WAAA+uB,QAAA,SAAAnvB,EAAAC,EAAAG,GAAA,MAAAC,IAAAwR,IAAA7R,EAAAC,EAAAG,EAAA,WAAAC,GAAA2tB,WAAAR,SAAA4B,OAAA,6FAAAtlB,UAAAslB,OAAA,uBAAAjlB,YAAAklB,cAAA,SAAArvB,GAAA,MAAAK,IAAAqT,WAAA1T,GAAAA,MAAAK,GAAA4tB,cAAA,SAAA,SAAAjuB,GAAAA,EAAAyB,QAAAxB,IAAAD,EAAAyB,OAAA,GAAAzB,EAAA4uB,cAAA5uB,EAAAM,KAAA,MAAAN,EAAA6b,QAAA,KAAAxb,GAAA6tB,cAAA,SAAA,SAAAluB,GAAA,GAAAA,EAAA4uB,YAAA,CAAA,GAAAxuB,GAAAW,EAAAG,EAAAouB,MAAAjvB,GAAA,QAAA,IAAAa,EAAAvB,eAAA,QAAAsvB,KAAA,SAAAhvB,EAAAe,GAAAZ,EAAAc,EAAAgD,cAAA,UAAA9D,EAAAoT,OAAA,EAAAxT,EAAAuvB,gBAAAnvB,EAAAovB,QAAAxvB,EAAAuvB,eAAAnvB,EAAA2oB,IAAA/oB,EAAAipB,IAAA7oB,EAAAqvB,OAAArvB,EAAAsvB,mBAAA,SAAA1vB,EAAAC,IAAAA,IAAAG,EAAAuQ,YAAA,kBAAAxN,KAAA/C,EAAAuQ,eAAAvQ,EAAAqvB,OAAArvB,EAAAsvB,mBAAA,KAAAtvB,EAAAuF,YAAAvF,EAAAuF,WAAAiS,YAAAxX,GAAAA,EAAA,KAAAH,GAAAe,EAAA,IAAA,aAAAD,EAAAuiB,aAAAljB,EAAAW,EAAA6U,aAAA8Y,MAAA,WAAAtuB,GAAAA,EAAAqvB,OAAAxvB,GAAA,OAAA,IAAA0vB,OAAAC,GAAA,mBAAAvvB,IAAA2tB,WAAA6B,MAAA,WAAAC,cAAA,WAAA,GAAA9vB,GAAA2vB,GAAA9tB,OAAAxB,GAAAgB,QAAA,IAAA8qB,IAAA,OAAA1f,MAAAzM,IAAA,EAAAA,KAAAK,GAAA4tB,cAAA,aAAA,SAAA7tB,EAAAW,EAAAC,GAAA,GAAAE,GAAAC,EAAAC,EAAAE,EAAAlB,EAAAyvB,SAAA,IAAAD,GAAAzsB,KAAA/C,EAAA6oB,KAAA,MAAA,gBAAA7oB,GAAAuB,QAAAvB,EAAAmtB,aAAA,IAAAhe,QAAA,sCAAAqgB,GAAAzsB,KAAA/C,EAAAuB,OAAA,OAAA,OAAAL,IAAA,UAAAlB,EAAAoJ,UAAA,IAAAtI,EAAAd,EAAA0vB,cAAAzvB,GAAAoD,WAAArD,EAAA0vB,eAAA1vB,EAAA0vB,gBAAA1vB,EAAA0vB,cAAAxuB,EAAAlB,EAAAkB,GAAAlB,EAAAkB,GAAAwB,QAAA8sB,GAAA,KAAA1uB,GAAAd,EAAAyvB,SAAA,IAAAzvB,EAAA6oB,MAAAmD,GAAAjpB,KAAA/C,EAAA6oB,KAAA,IAAA,KAAA7oB,EAAAyvB,MAAA,IAAA3uB,GAAAd,EAAA+J,WAAA,eAAA,WAAA,MAAA/I,IAAAf,GAAAoK,MAAAvJ,EAAA,mBAAAE,EAAA,IAAAhB,EAAAoJ,UAAA,GAAA,OAAArI,EAAAnB,EAAAkB,GAAAlB,EAAAkB,GAAA,WAAAE,EAAA6Q,WAAAjR,EAAAuK,OAAA,WAAAvL,EAAAkB,GAAAC,EAAAf,EAAAc,KAAAd,EAAA0vB,cAAA/uB,EAAA+uB,cAAAH,GAAAjpB,KAAAxF,IAAAE,GAAAf,GAAAoD,WAAAtC,IAAAA,EAAAC,EAAA,IAAAA,EAAAD,EAAAlB,IAAA,UAAAA,GAAA,IAAA8vB,IAAAC,GAAAC,GAAA,EAAAC,GAAAlwB,EAAA6K,eAAA,WAAA,GAAA7K,EAAA,KAAAA,IAAA+vB,IAAAA,GAAA/vB,GAAAC,GAAA,GAAAI,IAAAsJ,aAAAwmB,IAAAnwB,EAAA6K,cAAA,WAAA,OAAA4B,KAAA4gB,SAAA3iB,KAAAE,KAAAF,EAAAslB,GAAA3vB,GAAAsJ,aAAAwmB,MAAA9vB,GAAAsC,QAAAytB,OAAAJ,IAAA,mBAAAA,IAAAA,GAAA3vB,GAAAsC,QAAAqmB,OAAAgH,GAAAA,IAAA3vB,GAAA6tB,cAAA,SAAA9tB,GAAA,IAAAA,EAAAwuB,aAAAvuB,GAAAsC,QAAAytB,KAAA,CAAA,GAAArvB,EAAA,QAAAkuB,KAAA,SAAAjuB,EAAAE,GAAA,GAAAC,GAAAC,EAAAE,EAAAlB,EAAA+vB,KAAA,IAAA/vB,EAAAiwB,SAAA/uB,EAAAgvB,KAAAlwB,EAAAE,KAAAF,EAAA6oB,IAAA7oB,EAAAoT,MAAApT,EAAAiwB,SAAAjwB,EAAAulB,UAAArkB,EAAAgvB,KAAAlwB,EAAAE,KAAAF,EAAA6oB,IAAA7oB,EAAAoT,OAAApT,EAAAmwB,UAAA,IAAAnvB,IAAAhB,GAAAmwB,UAAAjvB,EAAAF,GAAAhB,EAAAmwB,UAAAnvB,EAAAhB,GAAA6J,UAAA3I,EAAAmtB,kBAAAntB,EAAAmtB,iBAAAruB,EAAA6J,UAAA7J,EAAAwuB,aAAA5tB,EAAA,sBAAAA,EAAA,oBAAA,iBAAA,KAAA,IAAAI,IAAAJ,GAAAM,EAAAktB,iBAAAptB,EAAAJ,EAAAI,IAAA,MAAAG,IAAAD,EAAA2tB,KAAA7uB,EAAAyuB,YAAAzuB,EAAAuB,MAAA,MAAAZ,EAAA,SAAAf,EAAAgB,GAAA,GAAAI,GAAAG,EAAAK,EAAAJ,CAAA,KAAA,GAAAT,IAAAC,GAAA,IAAAM,EAAAqP,YAAA,GAAA5P,EAAAd,EAAAkB,IAAAG,EAAAouB,mBAAArvB,GAAA2B,KAAAkuB,UAAAH,IAAA5uB,IAAAH,EAAA,IAAAM,EAAAqP,YAAArP,EAAAotB,YAAA,CAAAltB,KAAAJ,EAAAE,EAAA8sB,OAAA7sB,EAAAD,EAAAitB,wBAAA,gBAAAjtB,GAAA0rB,eAAAxrB,EAAAkE,KAAApE,EAAA0rB,aAAA,KAAAprB,EAAAN,EAAA+sB,WAAA,MAAA3sB,GAAAE,EAAA,GAAAR,IAAAhB,EAAAitB,SAAAjtB,EAAAwuB,YAAA,OAAAxtB,IAAAA,EAAA,KAAAA,EAAAI,EAAAkE,KAAA,IAAA,KAAA,MAAA8H,GAAAxM,GAAAE,EAAA,GAAAsM,GAAAhM,GAAAN,EAAAE,EAAAQ,EAAAJ,EAAAD,IAAAnB,EAAAoT,MAAA,IAAAlS,EAAAqP,WAAA5F,WAAAhK,IAAAI,IAAA8uB,GAAAC,KAAAH,KAAAA,MAAA1vB,GAAAL,GAAAwwB,OAAAN,KAAAH,GAAA5uB,GAAAJ,GAAAO,EAAAouB,mBAAA3uB,GAAAA,KAAA2tB,MAAA,WAAA3tB,GAAAA,EAAAd,GAAA,OAAA,IAAA+K,IAAAylB,GAAAniB,GAAA,yBAAAoiB,GAAA/T,OAAA,iBAAA9M,GAAA,cAAA,KAAA8gB,GAAA,cAAAtlB,IAAAkC,GAAApC,IAAAsiB,KAAA,SAAAztB,EAAAC,GAAA,GAAAG,GAAAW,EAAAC,EAAAyL,KAAAJ,YAAArM,EAAAC,GAAAiB,EAAAwvB,GAAA9rB,KAAA3E,GAAAkB,EAAAH,EAAAqX,MAAAjX,GAAAD,GAAA,EAAAG,EAAA,EAAAC,EAAA,EAAA,IAAAL,EAAA,CAAA,GAAAd,GAAAc,EAAA,GAAAH,EAAAG,EAAA,KAAAb,GAAA+pB,UAAApqB,GAAA,GAAA,MAAA,OAAAe,GAAAK,EAAA,CAAAA,EAAAf,GAAA8G,IAAAnG,EAAAwK,KAAAxL,GAAA,IAAAI,GAAA,CAAA,GAAAkB,GAAAA,GAAA,KAAAF,GAAAE,EAAAjB,GAAAiH,MAAAtG,EAAAwK,KAAAxL,EAAAoB,EAAAL,SAAAO,KAAAA,EAAAN,EAAAqX,MAAAlX,IAAA,IAAAG,KAAAC,GAAAP,EAAA4vB,KAAA7vB,EAAAC,EAAA4L,MAAAxL,EAAAJ,EAAA2N,IAAAzN,EAAA,GAAAE,GAAAF,EAAA,GAAA,GAAAd,EAAAA,EAAA,MAAAY,KAAAX,IAAAwwB,UAAAxwB,GAAA4B,OAAAmJ,GAAA0lB,QAAA,SAAA9wB,EAAAC,GAAAI,GAAAoD,WAAAzD,IAAAC,EAAAD,EAAAA,GAAA,MAAAA,EAAAA,EAAAuC,MAAA,IAAA,KAAA,GAAAnC,GAAAW,EAAA,EAAAC,EAAAhB,EAAAG,OAAAa,EAAAD,EAAAA,IAAAX,EAAAJ,EAAAe,GAAAoK,GAAA/K,GAAA+K,GAAA/K,OAAA+K,GAAA/K,GAAAkJ,QAAArJ,IAAA8wB,UAAA,SAAA/wB,EAAAC,GAAAA,EAAAoL,GAAA/B,QAAAtJ,GAAAqL,GAAA3E,KAAA1G,MAAAK,GAAAiM,MAAAsC,EAAAA,EAAAC,WAAAoC,YAAArC,EAAAE,KAAA,SAAA9O,EAAAC,EAAAG,EAAAW,EAAAC,EAAAE,GAAAuL,KAAAjB,KAAAxL,EAAAyM,KAAA4M,KAAAjZ,EAAAqM,KAAAF,OAAAvL,GAAA,QAAAyL,KAAAwN,QAAAha,EAAAwM,KAAAG,MAAAH,KAAAxB,IAAAwB,KAAA4L,MAAA5L,KAAAkC,IAAA5N,EAAA0L,KAAAmkB,KAAA1vB,IAAAb,GAAA+pB,UAAAhqB,GAAA,GAAA,OAAAiY,IAAA,WAAA,GAAArY,GAAA4O,EAAAqM,UAAAxO,KAAA4M,KAAA,OAAArZ,IAAAA,EAAA6R,IAAA7R,EAAA6R,IAAApF,MAAAmC,EAAAqM,UAAAqC,SAAAzL,IAAApF,OAAAb,IAAA,SAAA5L,GAAA,GAAAC,GAAAG,EAAAwO,EAAAqM,UAAAxO,KAAA4M,KAAA,OAAA5M,MAAAukB,IAAA/wB,EAAAwM,KAAAwN,QAAAvO,SAAArL,GAAAkM,OAAAE,KAAAF,QAAAvM,EAAAyM,KAAAwN,QAAAvO,SAAA1L,EAAA,EAAA,EAAAyM,KAAAwN,QAAAvO,UAAA1L,EAAAyM,KAAAxB,KAAAwB,KAAAkC,IAAAlC,KAAAG,OAAA3M,EAAAwM,KAAAG,MAAAH,KAAAwN,QAAAgX,MAAAxkB,KAAAwN,QAAAgX,KAAAttB,KAAA8I,KAAAjB,KAAAiB,KAAAxB,IAAAwB,MAAArM,GAAAA,EAAA0Z,IAAA1Z,EAAA0Z,IAAArN,MAAAmC,EAAAqM,UAAAqC,SAAAxD,IAAArN,MAAAA,OAAAmC,EAAAC,UAAAC,KAAAD,UAAAD,EAAAC,UAAAD,EAAAqM,WAAAqC,UAAAzL,IAAA,SAAA7R,GAAA,GAAAC,EAAA,OAAA,OAAAD,EAAAwL,KAAAxL,EAAAqZ,OAAArZ,EAAAwL,KAAAlE,OAAA,MAAAtH,EAAAwL,KAAAlE,MAAAtH,EAAAqZ,OAAApZ,EAAAI,GAAA8G,IAAAnH,EAAAwL,KAAAxL,EAAAqZ,KAAA,IAAApZ,GAAA,SAAAA,EAAAA,EAAA,GAAAD,EAAAwL,KAAAxL,EAAAqZ,OAAAS,IAAA,SAAA9Z,GAAAK,GAAAwM,GAAAokB,KAAAjxB,EAAAqZ,MAAAhZ,GAAAwM,GAAAokB,KAAAjxB,EAAAqZ,MAAArZ,GAAAA,EAAAwL,KAAAlE,QAAA,MAAAtH,EAAAwL,KAAAlE,MAAAjH,GAAAsqB,SAAA3qB,EAAAqZ,QAAAhZ,GAAAgN,SAAArN,EAAAqZ,OAAAhZ,GAAAiH,MAAAtH,EAAAwL,KAAAxL,EAAAqZ,KAAArZ,EAAAiL,IAAAjL,EAAA4wB,MAAA5wB,EAAAwL,KAAAxL,EAAAqZ,MAAArZ,EAAAiL,OAAA2D,EAAAqM,UAAA+D,UAAApQ,EAAAqM,UAAA2D,YAAA9E,IAAA,SAAA9Z,GAAAA,EAAAwL,KAAAhL,UAAAR,EAAAwL,KAAA7F,aAAA3F,EAAAwL,KAAAxL,EAAAqZ,MAAArZ,EAAAiL,OAAA5K,GAAAM,MAAA,SAAA,OAAA,QAAA,SAAAX,EAAAC,GAAA,GAAAG,GAAAC,GAAAuP,GAAA3P,EAAAI,IAAAuP,GAAA3P,GAAA,SAAAD,EAAAe,EAAAC,GAAA,MAAA,OAAAhB,GAAA,iBAAAA,GAAAI,EAAA4R,MAAAvF,KAAAwF,WAAAxF,KAAAykB,QAAAniB,EAAA9O,GAAA,GAAAD,EAAAe,EAAAC,MAAAX,GAAAuP,GAAA3N,QAAAkvB,OAAA,SAAAnxB,EAAAC,EAAAG,EAAAW,GAAA,MAAA0L,MAAA5I,OAAAqD,GAAAC,IAAA,UAAA,GAAAqH,OAAAG,MAAAuiB,SAAAjiB,QAAAhP,GAAAD,EAAAI,EAAAW,IAAAmwB,QAAA,SAAAlxB,EAAAC,EAAAG,EAAAW,GAAA,GAAAC,GAAAX,GAAAoC,cAAAzC,GAAAkB,EAAAb,GAAA+wB,MAAAnxB,EAAAG,EAAAW,GAAAI,EAAA,WAAA,GAAAlB,GAAAmL,EAAAqB,KAAApM,GAAA4B,UAAAjC,GAAAkB,EAAAC,GAAAkwB,OAAA,WAAApxB,EAAAuM,MAAA,KAAAxL,GAAAX,GAAA0E,MAAA0H,KAAA,YAAAxM,EAAAuM,MAAA,GAAA,OAAArL,GAAAkwB,OAAAlwB,EAAAH,GAAAE,EAAA8L,SAAA,EAAAP,KAAA9L,KAAAQ,GAAAsL,KAAAO,MAAA9L,EAAA8L,MAAA7L,IAAAqL,KAAA,SAAAxM,EAAAI,EAAAW,GAAA,GAAAC,GAAA,SAAAhB,GAAA,GAAAC,GAAAD,EAAAwM,WAAAxM,GAAAwM,KAAAvM,EAAAc,GAAA,OAAA,gBAAAf,KAAAe,EAAAX,EAAAA,EAAAJ,EAAAA,EAAAC,GAAAG,GAAAJ,KAAA,GAAAyM,KAAAO,MAAAhN,GAAA,SAAAyM,KAAA9L,KAAA,WAAA,GAAAV,IAAA,EAAAG,EAAA,MAAAJ,GAAAA,EAAA,aAAAkB,EAAAb,GAAAixB,OAAAnwB,EAAAd,GAAA0E,MAAA0H,KAAA,IAAArM,EAAAe,EAAAf,IAAAe,EAAAf,GAAAoM,MAAAxL,EAAAG,EAAAf,QAAA,KAAAA,IAAAe,GAAAA,EAAAf,IAAAe,EAAAf,GAAAoM,MAAAmkB,GAAAxtB,KAAA/C,IAAAY,EAAAG,EAAAf,GAAA,KAAAA,EAAAc,EAAAf,OAAAC,KAAAc,EAAAd,GAAAoL,OAAAiB,MAAA,MAAAzM,GAAAkB,EAAAd,GAAA4M,QAAAhN,IAAAkB,EAAAd,GAAA2M,KAAAP,KAAAzL,GAAAd,GAAA,EAAAiB,EAAAqJ,OAAAnK,EAAA,KAAAH,IAAAc,IAAAV,GAAA+X,QAAA3L,KAAAzM,MAAAqxB,OAAA,SAAArxB,GAAA,MAAAA,MAAA,IAAAA,EAAAA,GAAA,MAAAyM,KAAA9L,KAAA,WAAA,GAAAV,GAAAG,EAAAC,GAAA0E,MAAA0H,MAAA1L,EAAAX,EAAAJ,EAAA,SAAAgB,EAAAZ,EAAAJ,EAAA,cAAAkB,EAAAb,GAAAixB,OAAAnwB,EAAAJ,EAAAA,EAAAZ,OAAA,CAAA,KAAAC,EAAAixB,QAAA,EAAAhxB,GAAA2M,MAAAP,KAAAzM,MAAAgB,GAAAA,EAAAqX,KAAArX,EAAAqX,IAAAgZ,QAAArwB,EAAAqX,IAAAgZ,OAAA1tB,KAAA8I,MAAAxM,EAAAiB,EAAAf,OAAAF,KAAAiB,EAAAjB,GAAAuL,OAAAiB,MAAAvL,EAAAjB,GAAA+M,QAAAhN,IAAAkB,EAAAjB,GAAA8M,KAAAP,MAAA,GAAAtL,EAAAqJ,OAAAtK,EAAA,GAAA,KAAAA,EAAA,EAAAkB,EAAAlB,EAAAA,IAAAc,EAAAd,IAAAc,EAAAd,GAAAoxB,QAAAtwB,EAAAd,GAAAoxB,OAAA1tB,KAAA8I,YAAArM,GAAAixB,YAAAhxB,GAAAM,MAAA4wB,UAAAxiB,EAAA,QAAAyiB,QAAAziB,EAAA,QAAA0iB,YAAA1iB,EAAA,UAAA2iB,QAAAziB,QAAA,QAAA0iB,SAAA1iB,QAAA,QAAA2iB,YAAA3iB,QAAA,WAAA,SAAAjP,EAAAC,GAAAI,GAAAuP,GAAA5P,GAAA,SAAAA,EAAAI,EAAAW,GAAA,MAAA0L,MAAAykB,QAAAjxB,EAAAD,EAAAI,EAAAW,MAAAV,GAAA+wB,MAAA,SAAApxB,EAAAC,EAAAG,GAAA,GAAAW,GAAAf,GAAA,gBAAAA,GAAAK,GAAA4B,UAAAjC,IAAAmN,SAAA/M,IAAAA,GAAAH,GAAAI,GAAAoD,WAAAzD,IAAAA,EAAA0L,SAAA1L,EAAAuM,OAAAnM,GAAAH,GAAAA,IAAAI,GAAAoD,WAAAxD,IAAAA,EAAA,OAAAc,GAAA2K,SAAArL,GAAAwM,GAAA8F,IAAA,EAAA,gBAAA5R,GAAA2K,SAAA3K,EAAA2K,SAAA3K,EAAA2K,WAAArL,IAAAwM,GAAA0L,OAAAlY,GAAAwM,GAAA0L,OAAAxX,EAAA2K,UAAArL,GAAAwM,GAAA0L,OAAA+E,UAAA,MAAAvc,EAAAiM,OAAAjM,EAAAiM,SAAA,KAAAjM,EAAAiM,MAAA,MAAAjM,EAAA8wB,IAAA9wB,EAAAoM,SAAApM,EAAAoM,SAAA,WAAA9M,GAAAoD,WAAA1C,EAAA8wB,MAAA9wB,EAAA8wB,IAAAluB,KAAA8I,MAAA1L,EAAAiM,OAAA3M,GAAA+X,QAAA3L,KAAA1L,EAAAiM,QAAAjM,GAAAV,GAAAkM,QAAAulB,OAAA,SAAA9xB,GAAA,MAAAA,IAAA+xB,MAAA,SAAA/xB,GAAA,MAAA,GAAA2H,KAAAqqB,IAAAhyB,EAAA2H,KAAAsqB,IAAA,IAAA5xB,GAAAixB,UAAAjxB,GAAAwM,GAAA+B,EAAAC,UAAAC,KAAAzO,GAAAwM,GAAAqlB,KAAA,WAAA,GAAAlyB,GAAAI,EAAAC,GAAAixB,OAAAvwB,EAAA,CAAA,KAAAiK,GAAA3K,GAAA4K,MAAA7K,EAAAD,OAAAY,EAAAA,IAAAf,EAAAI,EAAAW,GAAAf,KAAAI,EAAAW,KAAAf,GAAAI,EAAAmK,OAAAxJ,IAAA,EAAAX,GAAAD,QAAAE,GAAAwM,GAAAL,OAAAxB,GAAA/K,GAAAI,GAAAwM,GAAAC,MAAA,SAAA9M,GAAAA,KAAAK,GAAAixB,OAAA5qB,KAAA1G,IAAAK,GAAAwM,GAAAD,SAAAvM,GAAAwM,GAAAslB,SAAA,GAAA9xB,GAAAwM,GAAAD,MAAA,WAAA6jB,KAAAA,GAAA2B,YAAA/xB,GAAAwM,GAAAqlB,KAAA7xB,GAAAwM,GAAAslB,YAAA9xB,GAAAwM,GAAAL,KAAA,WAAA6lB,cAAA5B,IAAAA,GAAA,MAAApwB,GAAAwM,GAAA0L,QAAA+Z,KAAA,IAAAC,KAAA,IAAAjV,SAAA,KAAAjd,GAAAwM,GAAAokB,QAAA5wB,GAAAic,MAAAjc,GAAAic,KAAA0J,UAAA3lB,GAAAic,KAAA0J,QAAAwM,SAAA,SAAAxyB,GAAA,MAAAK,IAAAqD,KAAArD,GAAAixB,OAAA,SAAArxB,GAAA,MAAAD,KAAAC,EAAAuL,OAAArL,SAAAE,GAAAuP,GAAA6iB,OAAA,SAAAzyB,GAAA,GAAAiS,UAAA9R,OAAA,MAAAH,KAAAC,EAAAwM,KAAAA,KAAA9L,KAAA,SAAAV,GAAAI,GAAAoyB,OAAAC,UAAAjmB,KAAAzM,EAAAC,IAAA,IAAAG,GAAAW,EAAAG,GAAA7B,IAAA,EAAAC,KAAA,GAAA6B,EAAAsL,KAAA,GAAArL,EAAAD,GAAAA,EAAAmD,aAAA,OAAAlD,IAAAhB,EAAAgB,EAAAzB,gBAAAU,GAAA+G,SAAAhH,EAAAe,UAAAA,GAAA/B,wBAAA4B,IAAAE,EAAAC,EAAA/B,yBAAA2B,EAAAoO,EAAA/N,IAAA/B,IAAA6B,EAAA7B,KAAA0B,EAAA4xB,aAAAvyB,EAAA4e,YAAA5e,EAAA6e,WAAA,GAAA3f,KAAA4B,EAAA5B,MAAAyB,EAAA6xB,aAAAxyB,EAAAwe,aAAAxe,EAAAye,YAAA,KAAA3d,GAAA,QAAAb,GAAAoyB,QAAAC,UAAA,SAAA1yB,EAAAC,EAAAG,GAAA,GAAAW,GAAAV,GAAA8G,IAAAnH,EAAA,WAAA,YAAAe,IAAAf,EAAAsH,MAAAwiB,SAAA,WAAA,IAAAtoB,GAAAE,EAAAV,EAAAX,GAAAL,GAAAkB,EAAAF,EAAAyxB,SAAAtxB,EAAAd,GAAA8G,IAAAnH,EAAA,OAAAoB,EAAAf,GAAA8G,IAAAnH,EAAA,QAAAsB,GAAA,aAAAP,GAAA,UAAAA,IAAAV,GAAAyD,QAAA,QAAA3C,EAAAC,IAAA,GAAAG,KAAAK,IAAAN,IAAAM,EAAAZ,EAAA8oB,WAAAtoB,EAAAI,EAAAvC,IAAAqC,EAAAE,EAAAtC,OAAAkC,EAAA+G,WAAApH,IAAA,EAAAO,EAAA6G,WAAAnH,IAAA,GAAAf,GAAAoD,WAAAxD,KAAAA,EAAAA,EAAA0D,KAAA3D,EAAAI,EAAAc,IAAA,MAAAjB,EAAAZ,MAAAkC,EAAAlC,IAAAY,EAAAZ,IAAA6B,EAAA7B,IAAAmC,GAAA,MAAAvB,EAAAX,OAAAiC,EAAAjC,KAAAW,EAAAX,KAAA4B,EAAA5B,KAAAoC,GAAA,SAAAzB,GAAAA,EAAA4yB,MAAAlvB,KAAA3D,EAAAuB,GAAAP,EAAAmG,IAAA5F,KAAAlB,GAAAuP,GAAA3N,QAAA6nB,SAAA,WAAA,GAAArd,KAAA,GAAA,CAAA,GAAAzM,GAAAC,EAAAG,GAAAf,IAAA,EAAAC,KAAA,GAAAyB,EAAA0L,KAAA,EAAA,OAAA,UAAApM,GAAA8G,IAAApG,EAAA,YAAAd,EAAAc,EAAA3B,yBAAAY,EAAAyM,KAAAqmB,eAAA7yB,EAAAwM,KAAAgmB,SAAApyB,GAAAkF,SAAAvF,EAAA,GAAA,UAAAI,EAAAJ,EAAAyyB,UAAAryB,EAAAf,KAAAgB,GAAA8G,IAAAnH,EAAA,GAAA,kBAAA,GAAAI,EAAAd,MAAAe,GAAA8G,IAAAnH,EAAA,GAAA,mBAAA,KAAAX,IAAAY,EAAAZ,IAAAe,EAAAf,IAAAgB,GAAA8G,IAAApG,EAAA,aAAA,GAAAzB,KAAAW,EAAAX,KAAAc,EAAAd,KAAAe,GAAA8G,IAAApG,EAAA,cAAA,MAAA+xB,aAAA,WAAA,MAAArmB,MAAAnK,IAAA,WAAA,IAAA,GAAAtC,GAAAyM,KAAAqmB,cAAA5xB,EAAAvB,gBAAAK,IAAAK,GAAAkF,SAAAvF,EAAA,SAAA,WAAAK,GAAA8G,IAAAnH,EAAA,aAAAA,EAAAA,EAAA8yB,YAAA,OAAA9yB,IAAAkB,EAAAvB,qBAAAU,GAAAM,MAAAie,WAAA,cAAAI,UAAA,eAAA,SAAAhf,EAAAI,GAAA,GAAAW,GAAA,IAAAoC,KAAA/C,EAAAC,IAAAuP,GAAA5P,GAAA,SAAAgB,GAAA,MAAAX,IAAA0T,OAAAtH,KAAA,SAAAzM,EAAAgB,EAAAE,GAAA,GAAAC,GAAAgO,EAAAnP,EAAA,OAAAkB,KAAAjB,EAAAkB,EAAAf,IAAAe,GAAAA,EAAAf,GAAAe,EAAAzB,SAAAC,gBAAAqB,GAAAhB,EAAAgB,IAAAG,EAAAA,EAAA4xB,SAAAhyB,EAAAV,GAAAc,GAAAyd,aAAA1d,EAAAH,EAAAG,EAAAb,GAAAc,GAAA6d,aAAAhf,EAAAgB,GAAAE,EAAAjB,IAAAD,EAAAgB,EAAAiR,UAAA9R,OAAA,SAAAE,GAAAM,MAAAqyB,OAAA,SAAAC,MAAA,SAAA,SAAAjzB,EAAAI,GAAAC,GAAAM,MAAA4qB,QAAA,QAAAvrB,EAAAkzB,QAAA9yB,EAAA+yB,GAAA,QAAAnzB,GAAA,SAAAe,EAAAC,GAAAX,GAAAuP,GAAA5O,GAAA,SAAAA,EAAAE,GAAA,GAAAC,GAAA8Q,UAAA9R,SAAAY,GAAA,iBAAAC,IAAAI,EAAAL,IAAAC,KAAA,GAAAE,KAAA,EAAA,SAAA,SAAA,OAAAb,IAAA0T,OAAAtH,KAAA,SAAArM,EAAAW,EAAAC,GAAA,GAAAE,EAAA,OAAAb,IAAAE,SAAAH,GAAAA,EAAAV,SAAAC,gBAAA,SAAAK,GAAA,IAAAI,EAAAI,UAAAU,EAAAd,EAAAT,gBAAAgI,KAAAC,IAAAxH,EAAA6I,KAAA,SAAAjJ,GAAAkB,EAAA,SAAAlB,GAAAI,EAAA6I,KAAA,SAAAjJ,GAAAkB,EAAA,SAAAlB,GAAAkB,EAAA,SAAAlB,KAAAgB,IAAAf,EAAAI,GAAA8G,IAAA/G,EAAAW,EAAAK,GAAAf,GAAAiH,MAAAlH,EAAAW,EAAAC,EAAAI,IAAAhB,EAAAe,EAAAH,EAAAf,EAAAkB,EAAA,WAAAnB,EAAAd,OAAAc,EAAAwC,EAAAnC,GAAA,kBAAA+yB,SAAAA,OAAAC,KAAAD,OAAAC,IAAAn0B,QAAAk0B,OAAA,YAAA,WAAA,MAAA/yB,OAAAb;;;;;;;;;;;;;;;;;;;ACkBA,SAAA+B,EAAAG,GAAA,QAAAiM,KAAA,GAAAxM,GAAAnB,EAAAszB,QAAA,OAAA,gBAAAnyB,GAAAA,EAAAoB,MAAA,KAAApB,EAAA,QAAAH,GAAAG,GAAA,GAAAd,GAAAD,EAAAe,EAAAD,GAAA,OAAAb,KAAAA,KAAAoN,IAAAtM,EAAAD,GAAAuM,EAAArN,EAAAqN,GAAApN,GAAAA,EAAA,QAAAmB,GAAAL,EAAAd,EAAAuB,GAAA,MAAAvB,KAAAA,EAAAqB,GAAAgM,EAAArN,EAAA6D,cAAA/C,IAAAS,IAAAA,EAAAZ,EAAAX,IAAAA,EAAAuB,EAAAH,MAAAN,GAAAS,EAAAH,MAAAN,GAAAiV,YAAArV,EAAAoC,KAAAhC,IAAAS,EAAAH,MAAAN,GAAAS,EAAA2xB,WAAApyB,IAAAiV,YAAAxU,EAAA2xB,WAAApyB,GAAAd,EAAAmzB,kBAAApyB,EAAA+B,KAAAhC,GAAAS,EAAA6xB,KAAApvB,YAAAhE,GAAAA,GAAA,QAAAJ,GAAAkB,EAAAd,GAAAA,EAAAoB,QAAApB,EAAAoB,SAAApB,EAAAkzB,WAAApyB,EAAA+C,cAAA7D,EAAAqzB,WAAAvyB,EAAA8C,uBAAA5D,EAAAozB,KAAApzB,EAAAqzB,cACAvyB,EAAA+C,cAAA,SAAAtC,GAAA,MAAA5B,GAAA2zB,YAAAnyB,EAAAI,EAAAT,EAAAd,GAAAA,EAAAkzB,WAAA3xB,IAAAT,EAAA8C,uBAAAmP,SAAA,MAAA,2EAAAzF,IAAA6O,OAAA1Z,QAAA,OAAA,SAAA3B,GAAA,MAAAd,GAAAkzB,WAAApyB,GAAAd,EAAAozB,KAAAvvB,cAAA/C,GAAA,MAAAA,EAAA,OAAA,eAAAnB,EAAAK,EAAAozB,MAAA,QAAA7iB,GAAAzP,GAAAA,IAAAA,EAAAO,EAAA,IAAArB,GAAAW,EAAAG,EAAA,IAAAnB,EAAA4zB,UAAAtjB,IAAAjQ,EAAAwzB,OAAA,CAAA,GAAAjyB,GAAA4L,EAAArM,CAAAS,GAAA4L,EAAAtJ,cAAA,KAAAsJ,EAAAA,EAAApJ,qBAAA,QAAA,IAAAoJ,EAAA7N,gBAAAiC,EAAAkE,UAAA,uIACAlE,EAAA4L,EAAA8V,aAAA1hB,EAAAmV,UAAAvJ,EAAAoI,YAAAvV,EAAAwzB,SAAAjyB,EAAA,MAAA8L,IAAAzN,EAAAkB,EAAAd,GAAAc,EAAA,GAAAmP,GAAA5C,EAAAwC,EAAA3O,EAAAuyB,UAAA1yB,EAAA,qEAAAL,EAAA,6GAAAG,EAAA,aAAAuM,EAAA,EAAArN,MAAA,WAAA,IAAA,GAAAe,GAAAO,EAAAwC,cAAA,IAAA/C,GAAA2E,UAAA,cAAAwK,EAAA,UAAAnP,EAAA,IAAAd,EAAA,MAAAA,EAAA,GAAAc,EAAAsF,WAAAtG,QAAA,CAAAuB,EAAAwC,cAAA,IAAA,IAAAtC,GAAAF,EAAAuC,wBAAA5D,GAAA,mBAAAuB,GAAAwU,WACA,mBAAAxU,GAAAqC,wBAAA,mBAAArC,GAAAsC,cAAAwJ,EAAArN,EAAA,MAAAmN,GAAAE,EAAA4C,GAAA,KAAA,IAAAtQ,IAAAszB,SAAApjB,EAAAojB,UAAA,kKAAAS,QAAA,QAAAH,SAAA,IAAA1jB,EAAA0jB,QAAAI,wBAAAtmB,EAAAimB,aAAA,IAAAzjB,EAAAyjB,YAAArzB,KAAA,UAAA2zB,aAAArjB,EAAA1M,cAAA1C,EAAAyC,uBAAA,SAAA9C,EAAAd,GAAA,GAAAc,IAAAA,EAAAO,GAAAgM,EAAA,MAAAvM,GAAA8C,wBACA,KAAA,GAAA5D,GAAAA,GAAAW,EAAAG,GAAAS,EAAAvB,EAAAozB,KAAArd,YAAA5I,EAAA,EAAAxN,EAAA2N,IAAAF,EAAAzN,EAAAG,OAAAsN,EAAAD,EAAAA,IAAA5L,EAAAsC,cAAAlE,EAAAwN,GAAA,OAAA5L,IAAAL,GAAAuyB,MAAA9zB,EAAA4Q,EAAAlP,IAAA+K,KAAA/M;;AAIAF,OAAA00B,WAAA10B,OAAA00B,YAAA,SAAAC,EAAAC,GAEA,YAEA,IAAAC,GACAC,EAAAH,EAAAx0B,gBACA40B,EAAAD,EAAAE,mBAAAF,EAAA1e,WAEA6e,EAAAN,EAAAjwB,cAAA,QACAwwB,EAAAP,EAAAjwB,cAAA,MAOA,OALAwwB,GAAAnjB,GAAA,YACAmjB,EAAAptB,MAAAkO,QAAA,+BACAif,EAAAntB,MAAAqtB,WAAA,OACAF,EAAApwB,YAAAqwB,GAEA,SAAA9jB,GAQA,MANA8jB,GAAA5uB,UAAA,sBAAA8K,EAAA,yCAEA0jB,EAAAhR,aAAAmR,EAAAF,GACAF,EAAA,KAAAK,EAAA1sB,YACAssB,EAAA1c,YAAA6c,IAGA5S,QAAAwS,EACAO,MAAAhkB,KAKAlR;AAOA,SAAAm1B,GAEA,YAiSA,SAAAC,KACAC,GAAA,GA/RA,GAAAC,KAUA,IATAH,EAAAG,QAAAA,EAGAA,EAAAC,OAAA,aAGAD,EAAAE,sBAAAL,EAAAX,YAAAW,EAAAX,WAAA,YAAArS,SAGAmT,EAAAE,sBAAA,CAKA,GAiHAC,GAEAC,EAoCAC,EAvJAlB,EAAAU,EAAAn1B,SACA40B,EAAAH,EAAAx0B,gBACA21B,KACAC,KACAC,KACAC,KACAC,EAAA,GACApG,EAAA6E,EAAA/vB,qBAAA,QAAA,IAAAkwB,EACAqB,EAAAxB,EAAA/vB,qBAAA,QAAA,GACAwxB,EAAAtG,EAAAlrB,qBAAA,QACAyxB,KAGAC,EAAA,WAEA,IAAA,GAAA90B,GAAA,EAAAA,EAAA40B,EAAAz1B,OAAAa,IAAA,CACA,GAAA+0B,GAAAH,EAAA50B,GACAoa,EAAA2a,EAAA3a,KACAwZ,EAAAmB,EAAAnB,MACAoB,EAAAD,EAAAE,KAAA,eAAAF,EAAAE,IAAAjzB,aAGAoY,IAAA4a,IAAAP,EAAAra,KAEA2a,EAAAG,YAAAH,EAAAG,WAAAC,YACAC,EAAAL,EAAAG,WAAAC,WAAA/a,EAAAwZ,GACAa,EAAAra,IAAA,IAEA,oBAAAjY,KAAAiY,IAAAua,IACAva,EAAAtY,QAAA6Z,OAAAyO,GAAA,IAAA7oB,MAAA,KAAA,KAAAsyB,EAAAvlB,SAAA+mB,MACAR,EAAAnvB,MACA0U,KAAAA,EACAwZ,MAAAA,KAMA0B,KAIAA,EAAA,WACA,GAAAT,EAAA11B,OAAA,CACA,GAAAo2B,GAAAV,EAAA7rB,OAEAgf,GAAAuN,EAAAnb,KAAA,SAAAob,GACAJ,EAAAI,EAAAD,EAAAnb,KAAAmb,EAAA3B,OACAa,EAAAc,EAAAnb,OAAA,EAIAyZ,EAAA9pB,WAAA,WAAAurB,KAAA,OAMAF,EAAA,SAAAI,EAAApb,EAAAwZ,GACA,GAAA6B,GAAAD,EAAA51B,MAAA,2CACA81B,EAAAD,GAAAA,EAAAt2B,QAAA,CAGAib,GAAAA,EAAAub,UAAA,EAAAvb,EAAAwb,YAAA,KAEA,IAAAC,GAAA,SAAA1vB,GACA,MAAAA,GAAArE,QAAA,6CAAA,KAAAsY,EAAA,SAEA0b,GAAAJ,GAAA9B,CAGAxZ,GAAAjb,SAAAib,GAAA,KAMA0b,IACAJ,EAAA,EAGA,KAAA,GAAA11B,GAAA,EAAA01B,EAAA11B,EAAAA,IAAA,CACA,GAAA+1B,GAAAC,EAAAC,EAAAC,CAGAJ,IACAC,EAAAnC,EACAW,EAAA7uB,KAAAmwB,EAAAL,MAIAO,EAAAN,EAAAz1B,GAAAJ,MAAA,kCAAA+b,OAAAyO,GACAmK,EAAA7uB,KAAAiW,OAAAwa,IAAAN,EAAAla,OAAAwa,MAGAF,EAAAF,EAAAx0B,MAAA,KACA20B,EAAAD,EAAA92B,MAEA,KAAA,GAAAmQ,GAAA,EAAA4mB,EAAA5mB,EAAAA,IACA0mB,EAAAC,EAAA3mB,GACAglB,EAAA5uB,MACAkuB,MAAAoC,EAAAz0B,MAAA,KAAA,GAAA3B,MAAA,6BAAA+b,OAAAwa,IAAA,MACA5B,MAAAA,EAAAp1B,OAAA,EACAi3B,SAAAJ,EAAAznB,QAAA,KAAA,GACA8nB,KAAAL,EAAAp2B,MAAA,oDAAA2H,WAAAoU,OAAAyO,KAAAzO,OAAAwa,IAAA,IACAG,KAAAN,EAAAp2B,MAAA,oDAAA2H,WAAAoU,OAAAyO,KAAAzO,OAAAwa,IAAA,MAKApC,KAQAwC,EAAA,WACA,GAAAC,GACA9C,EAAAP,EAAAjwB,cAAA,OACA+E,EAAAkrB,EAAAlrB,KACAwuB,GAAA,CAyBA,OAvBA/C,GAAAptB,MAAAkO,QAAA,4CAEAvM,IACAA,EAAAwuB,EAAAtD,EAAAjwB,cAAA,QACA+E,EAAA3B,MAAAqtB,WAAA,QAGA1rB,EAAA5E,YAAAqwB,GAEAJ,EAAAhR,aAAAra,EAAAqrB,EAAA1e,YAEA4hB,EAAA9C,EAAA1sB,YAEAyvB,EACAnD,EAAA1c,YAAA3O,GAGAA,EAAA2O,YAAA8c,GAIA8C,EAAAnC,EAAA9sB,WAAAivB,IASAzC,EAAA,SAAA2C,GACA,GAAAvf,GAAA,cACAwf,EAAArD,EAAAnc,GACAyf,EAAA,eAAAzD,EAAA7d,YAAAqhB,GAAAxD,EAAAlrB,KAAAkP,IAAAwf,EACAE,KACAC,EAAAlC,EAAAA,EAAAz1B,OAAA,GACA8K,GAAA,GAAA+I,OAAAC,SAGA,IAAAyjB,GAAAvC,GAAAO,EAAAzqB,EAAAkqB,EAGA,MAFAN,GAAArc,aAAA4c,QACAA,EAAAP,EAAA9pB,WAAAgqB,EAAAW,GAIAP,GAAAlqB,CAGA,KAAA,GAAAjK,KAAAs0B,GACA,GAAAA,EAAA5lB,eAAA1O,GAAA,CACA,GAAA+2B,GAAAzC,EAAAt0B,GACAg3B,EAAAD,EAAAV,KACAzvB,EAAAmwB,EAAAT,KACAW,EAAA,OAAAD,EACAE,EAAA,OAAAtwB,EACAuwB,EAAA,IAEAH,KACAA,EAAAzvB,WAAAyvB,IAAAA,EAAAzoB,QAAA4oB,GAAA,GAAA9C,GAAAkC,IAAA,IAEA3vB,IACAA,EAAAW,WAAAX,IAAAA,EAAA2H,QAAA4oB,GAAA,GAAA9C,GAAAkC,IAAA,IAIAQ,EAAAX,WAAAa,GAAAC,KAAAD,GAAAL,GAAAI,MAAAE,GAAAtwB,GAAAgwB,MACAC,EAAAE,EAAAnD,SACAiD,EAAAE,EAAAnD,WAEAiD,EAAAE,EAAAnD,OAAAluB,KAAA6uB,EAAAwC,EAAAxC,SAMA,IAAA,GAAAjlB,KAAAklB,GACAA,EAAA9lB,eAAAY,IACAklB,EAAAllB,IAAAklB,EAAAllB,GAAA3K,aAAA2pB,GACAA,EAAA1X,YAAA4d,EAAAllB,GAMA,KAAA,GAAAJ,KAAA2nB,GACA,GAAAA,EAAAnoB,eAAAQ,GAAA,CACA,GAAAkoB,GAAAjE,EAAAjwB,cAAA,SACAiD,EAAA0wB,EAAA3nB,GAAAsM,KAAA,KAEA4b,GAAA93B,KAAA,WACA83B,EAAAxD,MAAA1kB,EAIAof,EAAAhM,aAAA8U,EAAAN,EAAArW,aAEA2W,EAAAlC,WACAkC,EAAAlC,WAAA1gB,QAAArO,EAGAixB,EAAA/zB,YAAA8vB,EAAAhM,eAAAhhB,IAIAquB,EAAA9uB,KAAA0xB,KAKApP,EAAA,SAAAC,EAAAoP,GACA,GAAAC,GAAAC,GACAD,KAGAA,EAAAhI,KAAA,MAAArH,GAAA,GACAqP,EAAA5I,mBAAA,WACA,IAAA4I,EAAA3nB,YAAA,MAAA2nB,EAAAlK,QAAA,MAAAkK,EAAAlK,QAGAiK,EAAAC,EAAAtL,eAEA,IAAAsL,EAAA3nB,YAGA2nB,EAAArJ,KAAA,QAGAsJ,EAAA,WACA,GAAAC,IAAA,CACA,KACAA,EAAA,GAAA3D,GAAAlqB,eAEA,MAAA3K,GACAw4B,EAAA,GAAA3D,GAAAhqB,cAAA,qBAEA,MAAA,YACA,MAAA2tB,MAKA1C,KAGAd,EAAAC,OAAAa,EAMAjB,EAAAnkB,iBACAmkB,EAAAnkB,iBAAA,SAAAokB,GAAA,GAEAD,EAAA3gB,aACA2gB,EAAA3gB,YAAA,WAAA4gB,KAEAroB,MC/WAgsB,KAAA,mBAAAj5B,QAAAA,OAAA,mBAAAk5B,oBAAAD,eAAAC,mBAAAD,OAAA,IAAAE,OAAA,WAAA,GAAA34B,GAAA,iCAAAC,EAAAw4B,KAAAE,OAAAC,MAAAC,OAAA,SAAA74B,GAAA,MAAAA,aAAAI,GAAA,GAAAA,GAAAJ,EAAAM,KAAAL,EAAA24B,KAAAC,OAAA74B,EAAAkzB,SAAAlzB,EAAA84B,OAAA,UAAA74B,EAAA24B,KAAAt4B,KAAAN,GAAAA,EAAAsC,IAAArC,EAAA24B,KAAAC,QAAA74B,EAAA8C,QAAA,KAAA,SAAAA,QAAA,KAAA,QAAAA,QAAA,UAAA,MAAAxC,KAAA,SAAAN,GAAA,MAAA6T,QAAAhF,UAAAW,SAAA7L,KAAA3D,GAAAY,MAAA,oBAAA,IAAAynB,MAAA,SAAAroB,GAAA,GAAAI,GAAAH,EAAA24B,KAAAt4B,KAAAN,EAAA,QAAAI,GAAA,IAAA,SAAA,GAAAe,KAAA,KAAA,GAAAJ,KAAAf,GAAAA,EAAA0P,eAAA3O,KAAAI,EAAAJ,GAAAd,EAAA24B,KAAAvQ,MAAAroB,EAAAe,IAAA,OAAAI,EAAA,KAAA,QAAA,MAAAnB,GAAAsC,IAAA,SAAAtC,GAAA,MAAAC,GAAA24B,KAAAvQ,MAAAroB,KAAA,MAAAA,KAAA+4B,WAAA92B,OAAA,SAAAjC,EAAAI,GAAA,GAAAe,GAAAlB,EAAA24B,KAAAvQ,MAAApoB,EAAA84B,UAAA/4B,GAAA,KAAA,GAAAe,KAAAX,GAAAe,EAAAJ,GAAAX,EAAAW,EAAA,OAAAI,IAAAmiB,aAAA,SAAAtjB,EAAAI,EAAAe,EAAAJ,GAAAA,EAAAA,GAAAd,EAAA84B,SAAA,IAAA/3B,GAAAD,EAAAf,EAAA,IAAA,GAAAiS,UAAA9R,OAAA,CAAAgB,EAAA8Q,UAAA,EAAA,KAAA,GAAA1Q,KAAAJ,GAAAA,EAAAuO,eAAAnO,KAAAP,EAAAO,GAAAJ,EAAAI,GAAA,OAAAP,GAAA,GAAAI,KAAA,KAAA,GAAAF,KAAAF,GAAA,GAAAA,EAAA0O,eAAAxO,GAAA,CAAA,GAAAA,GAAAd,EAAA,IAAA,GAAAmB,KAAAJ,GAAAA,EAAAuO,eAAAnO,KAAAH,EAAAG,GAAAJ,EAAAI,GAAAH,GAAAF,GAAAF,EAAAE,GAAA,MAAAjB,GAAA84B,UAAAC,IAAA/4B,EAAA84B,UAAA,SAAA94B,EAAAG,GAAAA,IAAAW,EAAAf,IAAAC,GAAAD,IAAAyM,KAAAxM,GAAAmB,KAAAL,EAAAf,GAAAoB,GAAA43B,IAAA,SAAAh5B,EAAAI,EAAAe,GAAA,IAAA,GAAAJ,KAAAf,GAAAA,EAAA0P,eAAA3O,KAAAX,EAAAuD,KAAA3D,EAAAe,EAAAf,EAAAe,GAAAI,GAAAJ,GAAA,WAAAd,EAAA24B,KAAAt4B,KAAAN,EAAAe,IAAAd,EAAA84B,UAAAC,IAAAh5B,EAAAe,GAAAX,GAAA,UAAAH,EAAA24B,KAAAt4B,KAAAN,EAAAe,KAAAd,EAAA84B,UAAAC,IAAAh5B,EAAAe,GAAAX,EAAAW,MAAAk4B,aAAA,SAAAj5B,EAAAI,GAAA,IAAA,GAAAe,GAAAJ,EAAArB,SAAA8G,iBAAA,oGAAAxF,EAAA,EAAAG,EAAAJ,EAAAC,MAAAf,EAAAi5B,iBAAA/3B,EAAAnB,KAAA,EAAAI,IAAA84B,iBAAA,SAAA/3B,EAAAJ,EAAAC,GAAA,IAAA,GAAAO,GAAAH,EAAAF,EAAAC,EAAAD,IAAAlB,EAAAmD,KAAAjC,EAAAwU,YAAAxU,EAAAA,EAAAyE,UAAA,IAAAzE,IAAAK,GAAAL,EAAAwU,UAAA9U,MAAAZ,KAAA,CAAA,KAAA,GAAAoB,EAAAnB,EAAA84B,UAAAx3B,IAAAH,EAAA,CAAAD,EAAAuU,UAAAvU,EAAAuU,UAAA5S,QAAA9C,EAAA,IAAA8C,QAAA,OAAA,KAAA,aAAAvB,EAAAL,EAAAC,EAAAwE,WAAA,OAAAxC,KAAAjC,EAAAqE,YAAArE,EAAAwU,UAAAxU,EAAAwU,UAAA5S,QAAA9C,EAAA,IAAA8C,QAAA,OAAA,KAAA,aAAAvB,EAAA,IAAAD,GAAAH,EAAAgjB,WAAA,IAAA7iB,EAAA,CAAAA,EAAAA,EAAAwB,QAAA,gBAAA,GAAA,IAAA4K,IAAAyrB,QAAAh4B,EAAAi4B,SAAA73B,EAAA83B,QAAAj4B,EAAAk4B,KAAAh4B,EAAA,IAAArB,EAAAs5B,MAAA3tB,IAAA,mBAAA8B,GAAA3M,GAAA03B,KAAAe,OAAA,CAAA,GAAA53B,GAAA,GAAA43B,QAAAv5B,EAAAw5B,SAAA73B,GAAA83B,UAAA,SAAA15B,GAAA0N,EAAAisB,gBAAAv5B,EAAAw5B,UAAA1mB,KAAAC,MAAAnT,EAAA2B,MAAAJ,GAAAtB,EAAAs5B,MAAA3tB,IAAA,gBAAA8B,GAAAA,EAAAyrB,QAAArzB,UAAA4H,EAAAisB,gBAAA34B,GAAAA,EAAA2C,KAAA+J,EAAAyrB,SAAAl5B,EAAAs5B,MAAA3tB,IAAA,kBAAA8B,IAAA9L,EAAAi4B,YAAA3mB,KAAA0mB,WAAAR,SAAA1rB,EAAA0rB,SAAAE,KAAA5rB,EAAA4rB,YAAA5rB,GAAAisB,gBAAA15B,EAAA65B,UAAApsB,EAAA4rB,KAAA5rB,EAAA2rB,QAAA3rB,EAAA0rB,UAAAn5B,EAAAs5B,MAAA3tB,IAAA,gBAAA8B,GAAAA,EAAAyrB,QAAArzB,UAAA4H,EAAAisB,gBAAA34B,GAAAA,EAAA2C,KAAAxC,GAAAlB,EAAAs5B,MAAA3tB,IAAA,kBAAA8B,MAAAosB,UAAA,SAAA95B,EAAAmB,EAAAJ,GAAA,GAAAC,GAAAf,EAAA85B,SAAA/5B,EAAAmB,EAAA,OAAAf,GAAAw5B,UAAA35B,EAAA24B,KAAAC,OAAA73B,GAAAD,IAAAg5B,SAAA,SAAA/5B,EAAAI,GAAA,GAAAe,GAAAlB,EAAA+5B,MAAAj5B,GAAAf,GAAAgB,EAAAZ,EAAA65B,IAAA,IAAAj5B,EAAA,CAAA,IAAA,GAAAO,KAAAP,GAAAZ,EAAAmB,GAAAP,EAAAO,SAAAnB,GAAA65B,KAAAj6B,EAAA,IAAA,GAAAuB,KAAAnB,GAAA,GAAAA,EAAAsP,eAAAnO,IAAAnB,EAAAmB,GAAA,CAAA,GAAAH,GAAAhB,EAAAmB,EAAAH,GAAA,UAAAnB,EAAA24B,KAAAt4B,KAAAc,GAAAA,GAAAA,EAAA,KAAA,GAAAF,GAAA,EAAAA,EAAAE,EAAAjB,SAAAe,EAAA,CAAA,GAAAI,GAAAF,EAAAF,GAAAwM,EAAApM,EAAA44B,OAAAt4B,IAAAN,EAAA64B,WAAAz4B,EAAA,EAAA+L,EAAAnM,EAAAw3B,KAAAx3B,GAAAA,EAAA84B,SAAA94B,CAAA,KAAA,GAAAE,GAAA,EAAAA,EAAAT,EAAAZ,OAAAqB,IAAA,CAAA,GAAAgM,GAAAzM,EAAAS,EAAA,IAAAT,EAAAZ,OAAAH,EAAAG,OAAA,KAAAH,EAAA,MAAAwN,YAAArM,IAAA,CAAAG,EAAA+4B,UAAA,CAAA,IAAA1sB,GAAArM,EAAAsD,KAAA4I,EAAA,IAAAG,EAAA,CAAA/L,IAAAF,EAAAiM,EAAA,GAAAxN,OAAA,IAAAsP,GAAA9B,EAAAqQ,MAAA,EAAAtc,EAAAiM,EAAAA,EAAA,GAAA3G,MAAAtF,GAAAiO,EAAAhC,EAAAxN,OAAA+P,EAAAT,EAAAE,EAAAtP,EAAAmN,EAAAxG,MAAA,EAAAyI,EAAA,GAAA5O,EAAA2M,EAAAxG,MAAAkJ,EAAA,GAAAF,GAAAxO,EAAA,EAAAnB,IAAA2P,EAAAtJ,KAAArG,EAAA,IAAA6C,GAAA,GAAA/B,GAAAI,EAAAmM,EAAAzN,EAAA85B,SAAApsB,EAAAD,GAAAC,EAAAF,EAAAuC,GAAAtJ,KAAAxD,GAAArC,GAAAmP,EAAAtJ,KAAA7F,GAAA+R,MAAA/D,UAAAtE,OAAAyH,MAAAjR,EAAAiP,OAAA,MAAAjP,IAAAw4B,OAAAe,OAAAj1B,IAAA,SAAArF,EAAAI,GAAA,GAAAe,GAAAlB,EAAAs5B,MAAAe,GAAAn5B,GAAAnB,GAAAmB,EAAAnB,OAAAmB,EAAAnB,GAAA0G,KAAAtG,IAAAwL,IAAA,SAAA5L,EAAAI,GAAA,GAAAe,GAAAlB,EAAAs5B,MAAAe,IAAAt6B,EAAA,IAAAmB,GAAAA,EAAAhB,OAAA,IAAA,GAAAY,GAAAC,EAAA,EAAAD,EAAAI,EAAAH,MAAAD,EAAAX,MAAAA,EAAAH,EAAA+5B,MAAA,SAAAh6B,EAAAC,EAAAG,GAAAqM,KAAAnM,KAAAN,EAAAyM,KAAAymB,QAAAjzB,EAAAwM,KAAAqsB,MAAA14B,EAAA,IAAAA,EAAAw5B,UAAA,SAAA55B,EAAAmB,EAAAJ,GAAA,GAAA,gBAAAf,GAAA,MAAAA,EAAA,IAAA,UAAAC,EAAA24B,KAAAt4B,KAAAN,GAAA,MAAAA,GAAAsC,IAAA,SAAArC,GAAA,MAAAG,GAAAw5B,UAAA35B,EAAAkB,EAAAnB,KAAAwc,KAAA,GAAA,IAAAxb,IAAAV,KAAAN,EAAAM,KAAA4yB,QAAA9yB,EAAAw5B,UAAA55B,EAAAkzB,QAAA/xB,EAAAJ,GAAAw5B,IAAA,OAAAC,SAAA,QAAAx6B,EAAAM,MAAA8W,cAAAgiB,SAAAj4B,EAAAikB,OAAArkB,EAAA,IAAA,WAAAC,EAAAV,OAAAU,EAAAoW,WAAAqjB,WAAA,QAAAz6B,EAAA84B,MAAA,CAAA,GAAAv3B,GAAA,UAAAtB,EAAA24B,KAAAt4B,KAAAN,EAAA84B,OAAA94B,EAAA84B,OAAA94B,EAAA84B,MAAAlmB,OAAA/D,UAAAnI,KAAAsL,MAAAhR,EAAAw5B,QAAAj5B,GAAAtB,EAAAs5B,MAAA3tB,IAAA,OAAA5K,EAAA,IAAAI,GAAA,EAAA,KAAA,GAAAF,KAAAF,GAAAoW,WAAAhW,GAAAF,EAAA,MAAAF,EAAAoW,WAAAlW,IAAA,IAAA,GAAA,OAAA,IAAAF,EAAAu5B,IAAA,WAAAv5B,EAAAw5B,QAAAhe,KAAA,KAAA,KAAApb,EAAA,IAAAJ,EAAAkyB,QAAA,KAAAlyB,EAAAu5B,IAAA,MAAA9B,KAAA/4B,SAAA,MAAA+4B,MAAA/nB,kBAAA+nB,KAAA/nB,iBAAA,UAAA,SAAA1Q,GAAA,GAAAI,GAAA8S,KAAAC,MAAAnT,EAAA2B,MAAAR,EAAAf,EAAAg5B,SAAAr4B,EAAAX,EAAAk5B,IAAAb,MAAAoB,YAAA3mB,KAAA0mB,UAAA35B,EAAA24B,KAAAC,OAAA54B,EAAA85B,SAAAh5B,EAAAd,EAAA84B,UAAA53B,OAAAs3B,KAAA1vB,UAAA,GAAA0vB,KAAAE,OAAAF,KAAAE,KAAA,IAAAx3B,GAAAzB,SAAA0E,qBAAA,SAAA,OAAAjD,GAAAA,EAAAA,EAAAhB,OAAA,GAAAgB,IAAAlB,EAAAw5B,SAAAt4B,EAAA4nB,IAAArpB,SAAAgR,mBAAAvP,EAAAu5B,aAAA,gBAAAh7B,SAAAgR,iBAAA,mBAAAzQ,EAAAg5B,eAAAR,KAAAE,QAAA,oBAAAgC,SAAAA,OAAAC,UAAAD,OAAAC,QAAAjC,OACAA,MAAAI,UAAA8B,QAAAC,QAAA,kBAAAC,OAAA,YAAAC,QAAA,gBAAAC,MAAA,0BAAAV,KAAAH,QAAA,+FAAAF,QAAAK,KAAAH,QAAA,kBAAAF,QAAAgB,YAAA,QAAA3e,UAAA,iBAAA4e,cAAAf,QAAA,kCAAAF,QAAAgB,YAAA,UAAAA,YAAA,OAAAE,aAAAhB,QAAA,YAAAF,QAAA3d,UAAA,mBAAA8e,OAAA,qBAAA1C,MAAAY,MAAAl0B,IAAA,OAAA,SAAApF,GAAA,WAAAA,EAAAK,OAAAL,EAAAmX,WAAAkkB,MAAAr7B,EAAAizB,QAAApwB,QAAA,QAAA,QACA61B,MAAAI,UAAA5xB,KAAA2zB,QAAA,mBAAAS,QAAAnB,QAAA,4BAAAF,QAAAgB,YAAA,SAAAjS,IAAA,wCAAAxX,SAAA,8BAAA+pB,OAAA,uBAAAC,SAAA,yBAAAC,UAAA,kBAAAR,YAAA,WAAAS,WAAA,qBAAAhD,MAAAI,UAAA8B,SAAAlC,MAAAI,UAAAzV,aAAA,SAAA,OAAAhc,OAAA8yB,QAAA,oCAAAF,QAAAK,KAAAH,QAAA,6BAAAF,OAAAvB,MAAAI,UAAA8B,OAAAN,IAAAL,QAAAD,KAAAtB,MAAAI,UAAA5xB,KAAA2xB,MAAA,kBAAAH,MAAAI,UAAAzV,aAAA,SAAA,cAAAsY,cAAAxB,QAAA,uBAAAF,QAAAkB,aAAAhB,QAAA,aAAAF,OAAAvB,MAAAI,UAAA8B,OAAAN,IAAAL,QAAAgB,YAAA,wBAAAC,cAAAf,QAAA,MAAAF,OAAAvB,MAAAI,UAAA5xB,MAAA2xB,MAAA,iBAAAH,MAAAI,UAAA8B,OAAAN,MACA5B,MAAAI,UAAA8C,OAAAf,UAAAV,QAAA,4BAAAD,YAAA,IAAAC,QAAA,mBAAAD,YAAA,IAAAqB,OAAA,uBAAAM,cAAA1B,QAAA,qGAAAD,YAAA,EAAAD,QAAAgB,YAAA,YAAAa,QAAA,2GAAAC,UAAA,mBAAAL,YAAAvB,QAAA,gBAAAF,QAAAgB,YAAA,OAAAe,OAAA,8CAAAC,SAAA,0DAAAC,OAAA,iBAAAjB,YAAA,iBACAvC,MAAAI,UAAAqD,WAAAzD,MAAAI,UAAA92B,OAAA,SAAA85B,QAAA,2TAAAE,OAAA,+EAAAN,WAAA,6BAAAhD,MAAAI,UAAAzV,aAAA,aAAA,WAAA+Y,OAAAjC,QAAA,+EAAAD,YAAA,KAAAxB,MAAAI,UAAAzV,aAAA,aAAA,UAAAgZ,mBAAAlC,QAAA,qBAAAF,QAAAqC,eAAAnC,QAAA,cAAAF,QAAAsC,6BAAApC,QAAA,YAAAtB,MAAA,eAAAmB,KAAAtB,MAAAI,UAAAqD,aAAAZ,OAAA,cAAA7C,MAAAI,UAAA8B,QAAAlC,MAAAI,UAAAzV,aAAA,SAAA,OAAA8L,QAAAgL,QAAA,sCAAAF,QAAAK,KAAAH,QAAA,+BAAAF,OAAAvB,MAAAI,UAAA8B,OAAAN,IAAAL,QAAAD,KAAAtB,MAAAI,UAAAqD,YAAAtD,MAAA,yBACAH,MAAAI,UAAA0D,MAAAC,gBAAAtC,QAAA,sFAAAF,QAAAuB,SAAA,yDAAAL,YAAA,SAAAuB,mBAAAvC,QAAA,yBAAAF,QAAAuB,SAAA,sBAAAM,QAAA,kBAAA,IAAAa,gBAAAC,mBAAAlE,MAAAI,UAAAqD,WAAAU,kBAAAnE,MAAAI,UAAA8B,OAAAkC,WAAApE,MAAAI,UAAA8B,OAAAmC,YAAArE,MAAAI,UAAA8B,OAAA,KAAA,GAAAtN,eAAAqP,eAAA,GAAAA,cAAArP,aAAA,CAAA,GAAAtT,WAAAA,SAAAsT,cAAA6M,QAAA,GAAAzd,QAAA,qBAAA4Q,YAAA,6BAAA,KAAA4M,YAAA,EAAAD,QAAAD,KAAA2C,cAAArP,eAAAoL,MAAAI,UAAAzV,aAAA,OAAA,UAAArJ,SACA0e,MAAAI,UAAAkE,KAAAtE,MAAAI,UAAA92B,OAAA,OAAA64B,SAAA,oBAAAV,QAAA,kBAAAD,YAAA,IAAAoB,QAAAnB,QAAA,8CAAAF,QAAAgB,YAAA,UAAAzpB,UAAA2oB,QAAA,yEAAAF,QAAAgD,SAAA,aAAAzB,SAAA,kDAAAP,YAAA,YAAAgB,SAAA,aAAAvD,MAAAI,UAAAzV,aAAA,OAAA,eAAAqY,WAAAhD,MAAAI,UAAAkE,KAAAtE,cAAAA,MAAAI,UAAAzV,aAAA,OAAA,YAAA4Z,WAAA9C,QAAA,cAAAF,QAAAgB,YAAA,MAAA,aAAAiC,eAAA/C,QAAA,uCAAAD,YAAA,EAAArB,MAAA,cACAH,MAAAI,UAAAqE,IAAAzE,MAAAI,UAAA92B,OAAA,SAAA85B,QAAA,0aAAAsB,SAAA,oBAAAvC,SAAAV,QAAA,yDAAAD,YAAA,KAAAxB,MAAAI,UAAAzV,aAAA,MAAA,cAAAga,iBAAAlD,QAAA,yBAAAD,YAAA,EAAArB,MAAA,aAAAH,MAAAI,UAAAzV,aAAA,MAAA,WAAAia,UAAA,oBAAAL,SAAA,aAAAM,WAAApD,QAAA,kCAAAD,YAAA,EAAAD,QAAAgB,YAAA,SAAAvC,MAAAI,UAAAzV,aAAA,MAAA,YAAAmY,UAAArB,QAAA,YAAAD,YAAA,KAAAxB,MAAAI,UAAA8B,SAAAlC,MAAAY,MAAAl0B,IAAA,mBAAA,SAAArF,GAAA,QAAAA,EAAAo5B,WAAAp5B,EAAAy9B,cAAAz9B,EAAA09B,WAAA19B,EAAAs5B,KAAAt5B,EAAAs5B,KAAAt5B,EAAAs5B,KAAAx2B,QAAA,kCAAA,SAAA1C,GAAA,MAAAJ,GAAAy9B,WAAA/2B,KAAAtG,GAAA,SAAAJ,EAAAy9B,WAAAt9B,OAAA,WAAAw4B,MAAAY,MAAAl0B,IAAA,gBAAA,SAAArF,GAAA,QAAAA,EAAAo5B,WAAAp5B,EAAAs5B,KAAAt5B,EAAA09B,iBAAA19B,GAAA09B,cAAA/E,MAAAY,MAAAl0B,IAAA,kBAAA,SAAArF,GAAA,GAAA,QAAAA,EAAAo5B,SAAA,CAAA,IAAA,GAAAh5B,GAAAe,EAAA,EAAAf,EAAAJ,EAAAy9B,WAAAt8B,GAAAA,IAAAnB,EAAA25B,gBAAA35B,EAAA25B,gBAAA72B,QAAA,UAAA3B,EAAA,GAAA,MAAAw3B,MAAAmB,UAAA15B,EAAAJ,EAAAq5B,QAAA,OAAAr5B,GAAAm5B,QAAArzB,UAAA9F,EAAA25B,mBAAAhB,MAAAY,MAAAl0B,IAAA,OAAA,SAAArF,GAAA,QAAAA,EAAAo5B,UAAA,WAAAp5B,EAAAM,OAAAN,EAAAkzB,QAAAlzB,EAAAkzB,QAAApwB,QAAA,2BAAA,wCAAA61B,MAAAI,UAAAzV,aAAA,MAAA,WAAAuX,QAAAT,QAAA,iBAAAF,OAAAvB,MAAAI,UAAA8B,QAAAuC,IAAA,2BACAzE,MAAAI,UAAA4E,MAAA7C,QAAA,iBAAAP,KAAAH,QAAA,oCAAAF,QAAA0D,IAAAxD,QAAA,0BAAAF,QAAAgB,YAAA,iBAAAa,QAAA,QAAA8B,IAAAzD,QAAA,iBAAAF,QAAAgB,YAAA,OAAAM,QAAApB,QAAA,kBAAAF,QAAAgB,YAAA,kBAAAa,QAAA,WAAAC,UAAA,wBAAAC,OAAA,8CAAAC,SAAA,iDAAA4B,kBAAA1D,QAAA,gGAAAD,YAAA,EAAAD,QAAAgC,SAAA,OAAAT,SAAA,6BAAAP,YAAA,kCAAA6C,OAAA3D,QAAA,UAAAF,OAAAvB,MAAAI,UAAA8B,QCyDA,IAAAmD,WAAAC,eAKAC,QAAAF,SAAAE,QAAA,SAAAC,EAAA9F,GACA,GAAA,kBAAA8F,GAAAD,QACAC,EAAAD,QAAA7F,OACA,CACA,GAAAr3B,GAAAo9B,EAAAD,EAAAh+B,MACA,KAAAa,EAAA,EAAAo9B,EAAAp9B,EAAAA,IACAq3B,EAAA8F,EAAAn9B,GAAAA,EAAAm9B,KAQAE,WAAA,SAAAj9B,GACA,MAAAA,GAAA0B,QAAA,YAAA,IAAAE,cASAg7B,UAAAM,UAAA,SAAAC,GAOA,GAAAC,GACAC,EACAC,EAIAC,EAAA,EAGAC,KACAC,IAOA,IAAA,kBAAAlE,SAAA,mBAAAC,UAAA,kBAAAkE,SAAA,CACA,GAAAC,GAAAD,QAAA,KAEA,IAAAC,EAAA,CAEA,GAAAd,GAAAc,EAAAC,aAAAC,WAAA,KAAA,eAAAp7B,OAAA,SAAA6hB,GACA,OAAAA,EAAAnW,QAAA,SACAjN,IAAA,SAAAojB,GACA,MAAAA,GAAA5iB,QAAA,QAAA,KAGAk7B,UAAAE,QAAAD,EAAA,SAAAiB,GACA,GAAA/mB,GAAAkmB,WAAAa,EACAlB,UAAAC,WAAA9lB,GAAA2mB,QAAA,gBAAAI,MAqFA,GAhFAzyB,KAAA0yB,SAAA,SAAAz5B,GAyEA,MA7DA84B,MACAC,KACAC,KAMAh5B,EAAAA,EAAA5C,QAAA,KAAA,MAKA4C,EAAAA,EAAA5C,QAAA,MAAA,MAGA4C,EAAAA,EAAA5C,QAAA,QAAA,MACA4C,EAAAA,EAAA5C,QAAA,MAAA,MAGA4C,EAAA,OAAAA,EAAA,OAGAA,EAAA05B,EAAA15B,GAMAA,EAAAA,EAAA5C,QAAA,aAAA,IAGAk7B,SAAAE,QAAAU,EAAA,SAAA/uB,GACAnK,EAAA25B,EAAAxvB,EAAAnK,KAKAA,EAAA45B,EAAA55B,GAGAA,EAAA65B,EAAA75B,GAGAA,EAAA85B,EAAA95B,GAEAA,EAAA+5B,EAAA/5B,GAEAA,EAAAg6B,EAAAh6B,GAGAA,EAAAA,EAAA5C,QAAA,MAAA,MAGA4C,EAAAA,EAAA5C,QAAA,MAAA,KAGAk7B,SAAAE,QAAAW,EAAA,SAAAhvB,GACAnK,EAAA25B,EAAAxvB,EAAAnK,KAGAA,GAOA64B,GAAAA,EAAAN,WAAA,CAEA,GAAAxF,GAAAhsB,IAGAuxB,UAAAE,QAAAK,EAAAN,WAAA,SAAA0B,GAOA,GAJA,gBAAAA,KACAA,EAAA3B,SAAAC,WAAAI,WAAAsB,KAGA,kBAAAA,GAgBA,KAAA,cAAAA,EAAA,8EAdA3B,UAAAE,QAAAyB,EAAAlH,GAAA,SAAAyG,GAEAA,EAAA5+B,KACA,aAAA4+B,EAAA5+B,MAAA,SAAA4+B,EAAA5+B,KACAs+B,EAAAl4B,KAAAw4B,GACA,WAAAA,EAAA5+B,MAAA,SAAA4+B,EAAA5+B,MACAu+B,EAAAn4B,KAAAw4B,GAIAL,EAAAn4B,KAAAw4B,OAUA,GAmjBAU,GAnjBAP,EAAA,SAAAH,EAAAx5B,GACA,GAAAw5B,EAAA7C,MAAA,CACA,GAAAwD,GAAA,GAAAljB,QAAAuiB,EAAA7C,MAAA,IACA,OAAA32B,GAAA5C,QAAA+8B,EAAAX,EAAAp8B,SACA,MAAAo8B,GAAAr7B,OACAq7B,EAAAr7B,OAAA6B,GADA,QAKA85B,EAAA,SAAA95B,GAqDA,MAtBAA,IAAA,KAEAA,EAAAA,EAAA5C,QAAA,0GACA,SAAAg9B,EAAAC,EAAAC,EAAAC,EAAAC,GAGA,MAFAH,GAAAA,EAAA/8B,cACAw7B,EAAAuB,GAAAI,EAAAH,GACAC,EAGAA,EAAAC,GACAA,IACAzB,EAAAsB,GAAAG,EAAAp9B,QAAA,KAAA,WAIA,MAKA4C,EAAAA,EAAA5C,QAAA,KAAA,KAMAy8B,EAAA,SAAA75B,GAEAA,EAAAA,EAAA5C,QAAA,MAAA,OAuHA,OAjFA4C,GAAAA,EAAA5C,QAAA,qIAAAs9B,GAoBA16B,EAAAA,EAAA5C,QAAA,2KAAAs9B,GAmBA16B,EAAAA,EAAA5C,QAAA,sDAAAs9B,GAiBA16B,EAAAA,EAAA5C,QAAA,sDAAAs9B,GAqBA16B,EAAAA,EAAA5C,QAAA,2DAAAs9B,GAGA16B,EAAAA,EAAA5C,QAAA,QAAA,OAIAs9B,EAAA,SAAAN,EAAAC,GACA,GAAAM,GAAAN,CAYA,OATAM,GAAAA,EAAAv9B,QAAA,QAAA,MACAu9B,EAAAA,EAAAv9B,QAAA,MAAA,IAGAu9B,EAAAA,EAAAv9B,QAAA,QAAA,IAGAu9B,EAAA,UAAA3B,EAAAh4B,KAAA25B,GAAA,GAAA,SAKAZ,EAAA,SAAA/5B,GAKAA,EAAA46B,EAAA56B,EAGA,IAAA66B,GAAAC,EAAA,SAgBA,OAfA96B,GAAAA,EAAA5C,QAAA,qCAAAy9B,GACA76B,EAAAA,EAAA5C,QAAA,qCAAAy9B,GACA76B,EAAAA,EAAA5C,QAAA,qCAAAy9B,GAEA76B,EAAA+6B,EAAA/6B,GACAA,EAAAg7B,EAAAh7B,GACAA,EAAAi7B,EAAAj7B,GAMAA,EAAA65B,EAAA75B,GACAA,EAAAk7B,EAAAl7B,IAMAm7B,EAAA,SAAAn7B,GAyBA,MAnBAA,GAAAo7B,EAAAp7B,GACAA,EAAAq7B,EAAAr7B,GACAA,EAAAs7B,EAAAt7B,GAIAA,EAAAu7B,EAAAv7B,GACAA,EAAAw7B,EAAAx7B,GAKAA,EAAAy7B,EAAAz7B,GACAA,EAAAy6B,EAAAz6B,GACAA,EAAA07B,EAAA17B,GAGAA,EAAAA,EAAA5C,QAAA,SAAA,cAKAi+B,EAAA,SAAAr7B,GAQA,GAAA22B,GAAA,2DAQA,OANA32B,GAAAA,EAAA5C,QAAAu5B,EAAA,SAAAyD,GACA,GAAAvF,GAAAuF,EAAAh9B,QAAA,qBAAA,MAEA,OADAy3B,GAAA8G,EAAA9G,EAAA,YAOA2G,EAAA,SAAAx7B,GAkFA,MApDAA,GAAAA,EAAA5C,QAAA,mEAAAw+B,GAiCA57B,EAAAA,EAAA5C,QAAA,mGAAAw+B,GAiBA57B,EAAAA,EAAA5C,QAAA,8BAAAw+B,IAKAA,EAAA,SAAAxB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAqB,EAAAC,EAAAC,GACArN,QAAAqN,IAAAA,EAAA,GACA,IAAAC,GAAA3B,EACA4B,EAAA3B,EACA4B,EAAA3B,EAAAj9B,cACAimB,EAAAiX,EACA5E,EAAAmG,CAEA,IAAA,IAAAxY,EAOA,GANA,IAAA2Y,IAEAA,EAAAD,EAAA3+B,cAAAF,QAAA,QAAA,MAEAmmB,EAAA,IAAA2Y,EAEAxN,QAAAoK,EAAAoD,GACA3Y,EAAAuV,EAAAoD,GACAxN,QAAAqK,EAAAmD,KACAtG,EAAAmD,EAAAmD,QAGA,CACA,KAAAF,EAAAG,OAAA,aAAA,IAIA,MAAAH,EAFAzY,GAAA,GAOAA,EAAAoY,EAAApY,EAAA,KACA,IAAAjM,GAAA,YAAAiM,EAAA,GAUA,OARA,IAAAqS,IACAA,EAAAA,EAAAx4B,QAAA,KAAA,UACAw4B,EAAA+F,EAAA/F,EAAA,MACAte,GAAA,WAAAse,EAAA,KAGAte,GAAA,IAAA2kB,EAAA,QAMAV,EAAA,SAAAv7B,GAuDA,MA9BAA,GAAAA,EAAA5C,QAAA,gDAAAg/B,GA4BAp8B,EAAAA,EAAA5C,QAAA,qEAAAg/B,IAKAA,EAAA,SAAAhC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAqB,EAAAC,EAAAC,GACA,GAAAC,GAAA3B,EACAgC,EAAA/B,EACA4B,EAAA3B,EAAAj9B,cACAimB,EAAAiX,EACA5E,EAAAmG,CAIA,IAFAnG,IAAAA,EAAA,IAEA,IAAArS,EAAA,CAOA,GANA,IAAA2Y,IAEAA,EAAAG,EAAA/+B,cAAAF,QAAA,QAAA,MAEAmmB,EAAA,IAAA2Y,EAEAxN,QAAAoK,EAAAoD,GAOA,MAAAF,EANAzY,GAAAuV,EAAAoD,GACAxN,QAAAqK,EAAAmD,KACAtG,EAAAmD,EAAAmD,IAQAG,EAAAA,EAAAj/B,QAAA,KAAA,UACAmmB,EAAAoY,EAAApY,EAAA,KACA,IAAAjM,GAAA,aAAAiM,EAAA,UAAA8Y,EAAA,GAaA,OAPAzG,GAAAA,EAAAx4B,QAAA,KAAA,UACAw4B,EAAA+F,EAAA/F,EAAA,MACAte,GAAA,WAAAse,EAAA,IAGAte,GAAA,OAMAsjB,EAAA,SAAA56B,GAwCA,QAAAs8B,GAAAr0B,GACA,MAAAA,GAAA7K,QAAA,SAAA,IAAAE,cAEA,MAlCA0C,GAAAA,EAAA5C,QAAA,6BACA,SAAAg9B,EAAAC,GAAA,MAAAS,GAAA,WAAAwB,EAAAjC,GAAA,KAAAc,EAAAd,GAAA,WAEAr6B,EAAAA,EAAA5C,QAAA,6BACA,SAAAm/B,EAAAlC,GAAA,MAAAS,GAAA,WAAAwB,EAAAjC,GAAA,KAAAc,EAAAd,GAAA,WAqBAr6B,EAAAA,EAAA5C,QAAA,sCACA,SAAAg9B,EAAAC,EAAAC,GACA,GAAAkC,GAAAnC,EAAA5/B,MACA,OAAAqgC,GAAA,KAAA0B,EAAA,QAAAF,EAAAhC,GAAA,KAAAa,EAAAb,GAAA,MAAAkC,EAAA,QAYAzB,EAAA,SAAA/6B,GAOAA,GAAA,IAyBA,IAAAy8B,GAAA,6FAuCA,OArCAxD,GACAj5B,EAAAA,EAAA5C,QAAAq/B,EAAA,SAAArC,EAAAC,EAAAC,GACA,GAAAoC,GAAArC,EACAsC,EAAArC,EAAA6B,OAAA,UAAA,GAAA,KAAA,IAIAO,GAAAA,EAAAt/B,QAAA,UAAA,SACA,IAAAka,GAAA4iB,EAAAwC,EAQA,OAFAplB,GAAAA,EAAAla,QAAA,OAAA,IACAka,EAAA,IAAAqlB,EAAA,IAAArlB,EAAA,KAAAqlB,EAAA,SAIAF,EAAA,uGACAz8B,EAAAA,EAAA5C,QAAAq/B,EAAA,SAAArC,EAAAC,EAAAC,EAAAC,GACA,GAAAqC,GAAAvC,EACAqC,EAAApC,EAEAqC,EAAApC,EAAA4B,OAAA,UAAA,GAAA,KAAA,KAGAO,EAAAA,EAAAt/B,QAAA,UAAA,UACAka,EAAA4iB,EAAAwC,EAEA,OADAplB,GAAAslB,EAAA,IAAAD,EAAA,MAAArlB,EAAA,KAAAqlB,EAAA,SAMA38B,EAAAA,EAAA5C,QAAA,KAAA,IAKA88B,GAAA,SAAA2C,GAoEA,MA1CA5D,KAGA4D,EAAAA,EAAAz/B,QAAA,UAAA,MAGAy/B,GAAA,KAYAA,EAAAA,EAAAz/B,QAAA,2FACA,SAAAg9B,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAsC,GAAAtC,EACAuC,EAAA1C,CAaA,OAVA0C,IAAAD,EAAAX,OAAA,UAAA,GACAW,EAAA/C,EAAAiD,EAAAF,KAIAA,EAAA/B,EAAAiC,EAAAF,IACAA,EAAAA,EAAA1/B,QAAA,MAAA,IACA0/B,EAAA3B,EAAA2B,IAGA,OAAAA,EAAA,YAKAD,EAAAA,EAAAz/B,QAAA,MAAA,IAEA67B,IACA4D,EAIA,IAAA7B,GAAA,SAAAh7B,GAwCA,MArBAA,IAAA,KAEAA,EAAAA,EAAA5C,QAAA,mEACA,SAAAg9B,EAAAC,EAAAC,GACA,GAAA2C,GAAA5C,EACA6C,EAAA5C,CASA,OAPA2C,GAAAE,EAAAH,EAAAC,IACAA,EAAAvD,EAAAuD,GACAA,EAAAA,EAAA7/B,QAAA,QAAA,IACA6/B,EAAAA,EAAA7/B,QAAA,QAAA,IAEA6/B,EAAA,cAAAA,EAAA,kBAEAnC,EAAAmC,GAAAC,IAKAl9B,EAAAA,EAAA5C,QAAA,KAAA,KAKAw8B,EAAA,SAAA55B,GAkCA,MArBAA,IAAA,KAEAA,EAAAA,EAAA5C,QAAA,oCACA,SAAAg9B,EAAAC,EAAAC,GACA,GAAA5G,GAAA2G,EACA4C,EAAA3C,CASA,OAPA2C,GAAAE,EAAAF,GACAA,EAAAvD,EAAAuD,GACAA,EAAAA,EAAA7/B,QAAA,QAAA,IACA6/B,EAAAA,EAAA7/B,QAAA,QAAA,IAEA6/B,EAAA,cAAAvJ,EAAA,oBAAAA,EAAA,IAAA,IAAA,IAAAuJ,EAAA,kBAEAnC,EAAAmC,KAKAj9B,EAAAA,EAAA5C,QAAA,KAAA,KAKA09B,EAAA,SAAA96B,GAEA,MADAA,GAAAA,EAAA5C,QAAA,eAAA,IACA,UAAA47B,EAAAh4B,KAAAhB,GAAA,GAAA,SAGAo7B,EAAA,SAAAp7B,GAgDA,MATAA,GAAAA,EAAA5C,QAAA,sCACA,SAAAg9B,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAt+B,GAAAq+B,CAIA,OAHAr+B,GAAAA,EAAAkB,QAAA,aAAA,IACAlB,EAAAA,EAAAkB,QAAA,WAAA,IACAlB,EAAAihC,EAAAjhC,GACAm+B,EAAA,SAAAn+B,EAAA,aAMAihC,EAAA,SAAAn9B,GA2BA,MAnBAA,GAAAA,EAAA5C,QAAA,KAAA,SAGA4C,EAAAA,EAAA5C,QAAA,KAAA,QACA4C,EAAAA,EAAA5C,QAAA,KAAA,QAGA4C,EAAA27B,EAAA37B,EAAA,YAAA,IAgBA07B,EAAA,SAAA17B,GASA,MANAA,GAAAA,EAAA5C,QAAA,6CACA,uBAEA4C,EAAAA,EAAA5C,QAAA,qCACA,gBAMA69B,EAAA,SAAAj7B,GA4CA,MA7BAA,GAAAA,EAAA5C,QAAA,sCACA,SAAAg9B,EAAAC,GACA,GAAA+C,GAAA/C,CAyBA,OApBA+C,GAAAA,EAAAhgC,QAAA,mBAAA,MAGAggC,EAAAA,EAAAhgC,QAAA,MAAA,IAEAggC,EAAAA,EAAAhgC,QAAA,aAAA,IACAggC,EAAArD,EAAAqD,GAEAA,EAAAA,EAAAhgC,QAAA,UAAA,QAEAggC,EAAAA,EAAAhgC,QACA,6BACA,SAAAg9B,EAAAC,GACA,GAAAgD,GAAAhD,CAIA,OAFAgD,GAAAA,EAAAjgC,QAAA,QAAA,MACAigC,EAAAA,EAAAjgC,QAAA,MAAA,MAIA09B,EAAA,iBAAAsC,EAAA,sBAMAlC,EAAA,SAAAl7B,GAOAA,EAAAA,EAAA5C,QAAA,QAAA,IACA4C,EAAAA,EAAA5C,QAAA,QAAA,GASA,KAAA,GAPAkgC,GAAAt9B,EAAAnD,MAAA,WACA0gC,KAKAt0B,EAAAq0B,EAAA7iC,OACAa,EAAA,EAAA2N,EAAA3N,EAAAA,IAAA,CACA,GAAAkiC,GAAAF,EAAAhiC,EAGAkiC,GAAArB,OAAA,cAAA,EACAoB,EAAAv8B,KAAAw8B,GAEAA,EAAArB,OAAA,OAAA,IACAqB,EAAArC,EAAAqC,GACAA,EAAAA,EAAApgC,QAAA,aAAA,OACAogC,GAAA,OACAD,EAAAv8B,KAAAw8B,IAQAv0B,EAAAs0B,EAAA9iC,MACA,KAAA,GAAAa,GAAA,EAAA2N,EAAA3N,EAAAA,IAEA,KAAAiiC,EAAAjiC,GAAA6gC,OAAA,aAAA,GAAA,CACA,GAAAxB,GAAA3B,EAAA/hB,OAAAyO,GACAiV,GAAAA,EAAAv9B,QAAA,MAAA,QACAmgC,EAAAjiC,GAAAiiC,EAAAjiC,GAAA8B,QAAA,SAAAu9B,GAIA,MAAA4C,GAAAzmB,KAAA,SAIA2jB,EAAA,SAAAz6B,GAUA,MALAA,GAAAA,EAAA5C,QAAA,qCAAA,SAGA4C,EAAAA,EAAA5C,QAAA,qBAAA,SAMAk+B,EAAA,SAAAt7B,GAkBA,MAFAA,GAAAA,EAAA5C,QAAA,UAAAqgC,GACAz9B,EAAAA,EAAA5C,QAAA,2BAAAqgC,IAKAhC,EAAA,SAAAz7B,GAwBA,MAtBAA,GAAAA,EAAA5C,QAAA,oCAAA,uBAgBA4C,EAAAA,EAAA5C,QAAA,+DACA,SAAAg9B,EAAAC,GACA,MAAAqD,GAAA1D,EAAAK,OAQAqD,EAAA,SAAAC,GAgBA,GAAAxK,IACA,SAAAyK,GAAA,MAAA,KAAAA,EAAAC,WAAA,GAAA,KACA,SAAAD,GAAA,MAAA,MAAAA,EAAAC,WAAA,GAAA/zB,SAAA,IAAA,KACA,SAAA8zB,GAAA,MAAAA,IAyBA,OAtBAD,GAAA,UAAAA,EAEAA,EAAAA,EAAAvgC,QAAA,KAAA,SAAAwgC,GACA,GAAA,KAAAA,EAEAA,EAAAzK,EAAAlxB,KAAA67B,MAAA,EAAA77B,KAAAkQ,WAAAyrB,OACA,IAAA,KAAAA,EAAA,CAEA,GAAAviC,GAAA4G,KAAAkQ,QAEAyrB,GACAviC,EAAA,GAAA83B,EAAA,GAAAyK,GACAviC,EAAA,IAAA83B,EAAA,GAAAyK,GACAzK,EAAA,GAAAyK,GAGA,MAAAA,KAGAD,EAAA,YAAAA,EAAA,KAAAA,EAAA,OACAA,EAAAA,EAAAvgC,QAAA,SAAA,OAMA48B,EAAA,SAAAh6B,GAUA,MANAA,GAAAA,EAAA5C,QAAA,YACA,SAAAg9B,EAAAC,GACA,GAAA0D,GAAAtoB,SAAA4kB,EACA,OAAAhd,QAAAC,aAAAygB,MAOAf,EAAA,SAAAh9B,GAaA,MALAA,GAAAA,EAAA5C,QAAA,mBAAA,MAGA4C,EAAAA,EAAA5C,QAAA,MAAA,KAKAs8B,EAAA,SAAA15B,GA4BA,MAtBAA,GAAAA,EAAA5C,QAAA,YAAA,QAGA4C,EAAAA,EAAA5C,QAAA,MAAA,QAGA4C,EAAAA,EAAA5C,QAAA,aACA,SAAAg9B,EAAAC,EAAAC,GAKA,IAAA,GAJA0D,GAAA3D,EACA4D,EAAA,EAAAD,EAAAvjC,OAAA,EAGAa,EAAA,EAAA2iC,EAAA3iC,EAAAA,IAAA0iC,GAAA,GAEA,OAAAA,KAKAh+B,EAAAA,EAAA5C,QAAA,MAAA,QACA4C,EAAAA,EAAA5C,QAAA,MAAA,KAWAu+B,EAAA,SAAA37B,EAAAk+B,EAAAC,GAGA,GAAAC,GAAA,KAAAF,EAAA9gC,QAAA,cAAA,QAAA,IAEA+gC,KACAC,EAAA,OAAAA,EAGA,IAAAzH,GAAA,GAAA1f,QAAAmnB,EAAA,IAGA,OAFAp+B,GAAAA,EAAA5C,QAAAu5B,EAAA8G,IAMAA,EAAA,SAAArD,EAAAC,GACA,GAAAgE,GAAAhE,EAAAwD,WAAA,EACA,OAAA,KAAAQ,EAAA,MAOA,mBAAApJ,UAAAA,OAAAC,QAAAoD,UAKA,kBAAA5K,SAAAA,OAAAC,KACAD,OAAA,WAAA,WACA,MAAA4K;;;;;ACr6CA,SAAAx7B,GAkoBA,QAAAwhC,GAAAhlC,GACA,GAAAilC,GAAA,iBACA,OAAAzhC,GAAAxD,GAAAkS,KAAA,QAAA+yB,EAAA,KAAAzd,UAAA1c,WAAAjG,OAAA,WACA,MAAA,IAAA4I,KAAAjM,UAAA,IAAAgC,EAAAiK,MAAA4Z,QAAA4d,GAAA9jC,SAKA,QAAA+jC,GAAA/iC,GAOA,MAFAA,GAAAA,EAAA2B,QAAA,UAAA,KACA3B,EAAAA,EAAA2B,QAAA,MAAA,KA/oBA,GAAA83B,GAAAnuB,KAyBA03B,EAAAvJ,EAAAuJ,UAOAA,GAAAv4B,IAAA,SAAAqO,GACAzX,EAAA,WAAA,GAAA2hC,GAAAC,OAAAnqB,GAAArO,SAUAu4B,EAAAze,KAAA,SAAAuD,GACA,QAAAob,GAAAC,EAAAC,EAAAlM,GACA,IAAAiM,EAAAnkC,OAAAk4B,EAAA,KAAAkM,GAEA/hC,EAAAqP,IAAAyyB,EAAAt6B,SACAoD,KAAA,SAAApN,GACAq4B,EAAAr4B,EAAA,QAEAkN,KAAA,SAAAvL,GACA4iC,EAAApkC,OAAA,IAAAokC,GAAA,QACAA,GAAA5iC,EACA0iC,EAAAC,EAAAC,EAAAlM,KAIA,MAAA,UAAAA,GACAgM,EAAApb,YAAArW,OACAqW,GAAAA,GAAA,GAAAoP,KAiBA8L,EAAAK,OAAA,SAAAv4B,GACA,gBAAAA,KACAA,GACAw4B,KAAAxyB,UAAA,GACAyyB,SAAAzyB,UAAA,IAGA,IAAAgX,EAEAA,GADAhd,EAAAy4B,SACA,gCAAAz4B,EAAAw4B,KAAA,aAAAx4B,EAAAy4B,SAEA,gCAAAz4B,EAAAw4B,KAAA,SAEA,IAAA9iC,KAOA,OANAsK,GAAA04B,QACAhjC,EAAAijC,aAAA34B,EAAA04B,OAEA14B,EAAA44B,MACAljC,EAAAkjC,IAAA54B,EAAA44B,KAEA,SAAAxM,GACA71B,EAAAqP,IAAAoX,EAAAtnB,GACAyL,KAAA,SAAApN,GAAAq4B,EAAAr4B,EAAA,QACAkN,KAAA,SAAAvL,GACA,GAAAmjC,GAAAlK,EAAAmK,OAAAC,OAAArjC,EAAAuxB,QACAmF,GAAA,KAAAyM,OA0BAX,EAAAc,UAAA,SAAAh5B,GACA,gBAAAA,KACAA,GACAw4B,KAAAxyB,UAAA,GACAyyB,SAAAzyB,UAAA,GACAizB,OAAAjzB,UAAA,KAGAhG,EAAAy4B,WAAAz4B,EAAAy4B,SAAA,aACAz4B,EAAAi5B,SAAAj5B,EAAAi5B,OAAA,UAEA,IAAAjc,GAAA,8CAAAhd,EAAAw4B,KAAA,QAAAx4B,EAAAi5B,OAAA,IAAAj5B,EAAAy4B,QAEA,OAAA,UAAArM,GACA71B,EAAAwmB,MACAC,IAAAA,EACA3e,SAAA,QACAG,MAAA,SAAA0lB,EAAA/B,EAAA3jB,GACA06B,MAAA16B,IAEAwiB,QAAA,SAAAsX,GACA,GAAAO,GAAAP,EAAA5iC,IACA02B,GAAA,KAAAyM,OAqBA,IAAAM,GAAAjB,EAAAkB,SAsCAD,GAAAjyB,MAAA,SAAArD,EAAAgqB,GAEAwE,UAAA,GAAAN,UAAAM,WAAAL,YAAA,QAAA,aAAA,SAAA,WAEA,IAAAnV,GAAAtmB,EAAA,QAAA87B,UAAAa,SAAArvB,IACAw1B,EAAAxc,EAAA5X,KAAA,MAAAiB,GAAA,GACAmpB,EAAAgK,EAAA5/B,MAGA6/B,GAAAC,OAAA1c,EACA,IAAA2c,GAAAF,EAAAG,QAAA5c,EAIA,QAAAwS,MAAAA,EAAApI,QAAApK,EAAA2c,KAAAA,GAeA,IAAAF,GAAApB,EAAAwB,cAQAJ,GAAAC,OAAA,SAAAI,GACAn5B,KAAAo5B,OAAAD,GACAn5B,KAAAq5B,UAAAF,GACAn5B,KAAAs5B,YAAAH,IAOAL,EAAAM,OAAA,SAAAD,GACA,GAAAI,IAAA,GAAA,GAAA,GACAJ,GAAA10B,KAAA,cAAAvQ,KAAA,WACA,GAAAslC,GAAAzjC,EAAAiK,MACAy5B,EAAA/qB,SAAA1O,KAAAlH,SAAA,IACAG,EAAAugC,EAAAvgC,OACAygC,EAAAhC,EAAAiC,QAAA1gC,EACAwgC,GAAA,IAAAC,EAAAH,EAAAE,EAAA,GAAA,IAAAC,GACAH,EAAA7lC,OAAA+lC,EAAA,EACAF,EAAAA,EAAA3jC,QAAA8jC,EAAAA,IACAF,EAAA50B,KAAA,KAAA80B,MAgBAZ,EAAAG,QAAA,SAAAE,GAIA,QAAAS,GAAAC,GACA7kC,EAAAtB,OAAAmmC,EAAA,CACA,IAAAnI,GAAA18B,EAAA6kC,EACA,KAAAnI,EAAA,CACA,GAAA/Y,GAAAkhB,EAAA,EAAAD,EAAAC,EAAA,GAAArhB,CACAkZ,IAAAoI,SAAAD,MAAAA,GACA7kC,EAAAA,EAAAY,QAAA87B,EAAAA,IACA/Y,EAAAmhB,MAAA7/B,KAAAy3B,GAEA,MAAAA,GAZA,GAAAlZ,IAAAshB,SAAAh1B,GAAA,GAAA+0B,MAAA,GACA7kC,GAAAwjB,EAyBA,OAXA2gB,GAAA10B,KAAA,cAAAvQ,KAAA,WACA,GAAAslC,GAAAzjC,EAAAiK,MACA65B,GAAA75B,KAAAlH,SAAAihC,OAAA,GAEAphB,EAAAihB,EAAAC,EAAA,GAEAnI,GAAAsI,QAAAR,EAAAvgC,OAAA6gC,SAAAD,MAAAA,EAAA/0B,GAAA00B,EAAA50B,KAAA,MACA+T,GAAAmhB,MAAA7/B,KAAAy3B,GACA18B,EAAA6kC,GAAAnI,IAGAlZ,GAOAsgB,EAAAO,UAAA,SAAAF,GACAA,EAAA10B,KAAA,KAAAvQ,KAAA,WACA,GAAA+lC,GAAAlkC,EAAAiK,MAEAkB,EAAA+4B,EAAAhhC,OAAA9E,MAAA,WACA+M,IAAA+4B,EAAAhhC,KAAAiI,EAAA,IAAA6L,SAAA,aASA+rB,EAAAQ,YAAA,SAAAH,GAEA,IAAA,GADAe,GAAA3C,EAAA4B,GAAAxH,EAAAuI,EAAAxmC,OACAa,EAAA,EAAAo9B,EAAAp9B,EAAAA,IAAA,CACA,GAAA4lC,GAAAD,EAAA3lC,EACA4lC,GAAAxiB,UAAA8f,EAAA0C,EAAAxiB,YAgBA,IAAAyiB,GAAA1C,EAAA2C,eAQAD,GAAAE,GAAAF,EAAAzK,WAAA,SAAA9C,GACA,GAAA0N,MACA1N,EAAAA,EACAx2B,QAAA,aAAA,SAAAlC,EAAAk6B,EAAArI,EAAA+I,GAEA,MADAwL,GAAAtgC,KAAA,2BAAAo0B,EAAA,WACA,6BAAAkM,EAAA7mC,OAAA,GAAA,OAEA2C,QAAA,iBAAA,SAAAlC,EAAAk6B,EAAArI,EAAA+I,GAEA,MADAwL,GAAAtgC,KAAA,2BAAAo0B,EAAA,aACA,6BAAAkM,EAAA7mC,OAAA,GAAA,OAEA2C,QAAA,KAAA,QACAA,QAAA,KAAA,QACAA,QAAA,eAAA,kCACAA,QAAA,eAAA,kCAEAA,QAAA,mBAAA,kCACAA,QAAA,cAAA,kCACAA,QAAA,6BAAA,iEACAA,QAAA,uFAAA,mCACAA,QAAA,+CAAA,gCAOA,OAJAkkC,GAAA9I,QAAA,SAAAyG,EAAA3jC,GACAs4B,EAAAA,EAAAx2B,QAAA,4BAAA9B,EAAA,KAAA2jC,KAGArL,GAGAuN,EAAA/d,KAAA,SAAAwQ,GACA,GAAA0N,MACA1N,EAAAA,EACAx2B,QAAA,2CAAA,SAAAlC,EAAA25B,EAAAnjB,EAAA8b,EAAA+T,EAAAxU,EAAA+I,GAEA,MADAwL,GAAAtgC,KAAAmgC,EAAAE,GAAA7T,IACAqH,EAAA,sBAAAyM,EAAA7mC,OAAA,GAAA,KAAA8mC,IAOAnkC,QAAA,KAAA,QACAA,QAAA,KAAA,QACAA,QAAA,yBAAA,oEAEAA,QAAA,eAAA,kCACAA,QAAA,qBAAA,gDACAA,QAAA,qBAAA,qCAUA,OAPAkkC,GAAA9I,QAAA,SAAAyG,EAAA3jC,GACAs4B,EAAAA,EAAAx2B,QAAA,qBAAA9B,EAAA,KAAA2jC,KAMArL,GAGAuN,EAAAK,QAAA,SAAA5N,GACA,MAAAA,GACAx2B,QAAA,KAAA,QACAA,QAAA,KAAA,QACAA,QAAA,eAAA,kCACAA,QAAA,eAAA,kCACAA,QAAA,iBAAA,qCACAA,QAAA,eAAA,kCACAA,QAAA,UAAA,kCAOA,IAAAqkC,GAAAhD,EAAAiD,SAAA,SAAA3B,GAGA,QAAA4B,GAAAT,EAAAU,GACA,GAAA/1B,GAAAq1B,EAAAr1B,IAAA,OAEAg2B,EAAA/kC,EAAA,QACA6O,KAAA,KAAAE,EAAA,SACAiI,SAAA,SAAAotB,EAAAN,OACA39B,SAAA2+B,EAEA,IAAAV,EAAAH,QACA,CAAAjkC,EAAA,OACAsmB,KAAA8d,EAAAH,SACAp1B,KAAA,KAAAE,EAAA,SACAF,KAAA,OAAA,IAAAu1B,EAAAr1B,IACAiI,SAAA,SAAAotB,EAAAN,OACA39B,SAAA4+B,GAGA,GAAAX,EAAAL,MAAApmC,OAAA,EAAA,CACA,GAAAqnC,GAAAhlC,EAAA,QACAgX,SAAA,UAAAotB,EAAAN,MAAA,IACAj1B,KAAA,KAAAE,EAAA,SACA5I,SAAA4+B,EAEAX,GAAAL,MAAArI,QAAA,SAAAsE,GACA6E,EAAA7E,EAAAgF,MA1BA,GAAAvB,GAAAzjC,EAAA,OAgCA,OADA6kC,GAAA5B,EAAAQ,GACAA,GAmBAwB,EAAAtD,EAAAC,OAAA,SAAAnqB,GACAxN,KAAAi7B,WAAAztB,GAGAwtB,GAAA54B,UAAAoW,KAAA,oBACAwiB,EAAA54B,UAAA42B,KAAA,yBACAgC,EAAA54B,UAAAysB,MAAA,0BACAmM,EAAA54B,UAAAqkB,QAAA,4BAEAuU,EAAA54B,UAAA64B,WAAA,SAAAztB,GACAzX,EAAAP,OAAAwK,KAAAwN,IAkBAwtB,EAAA54B,UAAAirB,UAAA,SAAAR,EAAAvU,GAGA,GAAAsU,EACA,QAAAtU,GACA,IAAA,OACA,IAAA,SACAsU,EAAAV,MAAAI,UAAA8B,MACA,MAEA,KAAA,KACA,IAAA,OACA,IAAA,aACAxB,EAAAV,MAAAI,UAAAqD,UACA,MAEA,KAAA,MACA/C,EAAAV,MAAAI,UAAA5xB,GACA,MAEA,KAAA,QACAkyB,EAAAV,MAAAI,UAAA8C,KACA,MAEA,KAAA,OACAxC,EAAAV,MAAAI,UAAA0D,IACA,MAEA,KAAA,OACApD,EAAAV,MAAAI,UAAAkE,IACA,MAEA,KAAA,MACA5D,EAAAV,MAAAI,UAAAqE,GACA,MAEA,KAAA,OACA/D,EAAAV,MAAAI,UAAA4E,KAIA,GAAAvJ,SAAAiF,EACA,MAAAV,OAAAmB,UAAAR,EAAAD,EAEA,IAAAzpB,GAAAu0B,EAAA2C,aAAA/hB,IAAAof,EAAA2C,aAAAI,OACA,OAAAt3B,GAAA0pB,IASAmO,EAAA54B,UAAAjD,IAAA,WACA,GAAAuoB,GAAA1nB,IACAjK,GAAA2xB,EAAAlP,MAAAvS,QAAA,mBACAyhB,EAAAwT,QAAA,SAAAC,EAAA9C,GACA,GAAA8C,EAEA,WADAC,SAAAp9B,MAAA,2CAAAm9B,EAGA,IAAAjmC,GAAAwiC,EAAAkB,OAAAlyB,MAAA2xB,EAAA3Q,EAAA2F,UACA3F,GAAA2T,UAAAnmC,EAAAwyB,EACA,IAAA5iB,GAAAjC,SAAA0V,KAAAwhB,OAAA,EACA,IAAAj1B,EAAA,CACA,GAAAvS,GAAAU,SAAA4R,eAAAC,EACAvS,KACAA,EAAA+oC,gBAAA,GACAh9B,WAAA,WACAvL,OAAAwoC,SAAA,GACA,MAGAxlC,EAAA2xB,EAAAlP,MAAAvS,QAAA,oBAQA+0B,EAAA54B,UAAAi5B,UAAA,SAAAnmC,GACA,GAAA2xB,GAAA7mB,IAEA6mB,GAAAt0B,GAAA,SAAA8pB,KAAAnnB,EAAA25B,OACAhI,EAAAt0B,GAAA,WAAA8pB,KAAAnnB,EAAAuxB,QAAAhiB,KAAA,OACAoiB,EAAAt0B,GAAA,QAAA8pB,KAAAqe,EAAAxlC,EAAA8jC,OAEAh5B,KAAAw7B,oBAGAR,EAAA54B,UAAAo5B,iBAAA,WAEA,GAAAC,GAAA1lC,EAAA,6BACAi2B,EAAAhsB,IAEAy7B,GAAAvnC,KAAA,SAAAK,EAAAmnC,GACA,GAAA3N,GAAA2N,EAAAzyB,UAAAnT,MAAA,MAEAi4B,GAAA0D,QAAA,SAAA/lB,GACA,GAAAxK,GAAAwK,EAAAvX,MAAA,kBACA+M,IACAnL,EAAA2lC,GAAArf,KAAA2P,EAAAqB,UAAAt3B,EAAA,UAAAsmB,KAAAtmB,EAAA2lC,GAAArf,QAAApjB,OAAAiI,EAAA,UAeA85B,EAAA54B,UAAA7P,GAAA,SAAAopC,GACA,MAAA5lC,GAAAiK,KAAA27B,GAAA37B,KAAAwY,QA0BA/lB;;;;;AAUA,WAAA,QAAAc,GAAAA,GAAAyM,KAAAu6B,UAAAv6B,KAAAu6B,OAAApR,SAAAnpB,KAAAwN,QAAAja,GAAAmB,EAAAknC,SAAA57B,KAAA8oB,MAAAt1B,EAAAqoC,OAAA77B,KAAAwN,QAAAsuB,MAAA97B,KAAAwN,QAAAuuB,OAAA/7B,KAAA8oB,MAAAt1B,EAAAuoC,OAAA/7B,KAAA8oB,MAAAt1B,EAAAsoC,KAAA,QAAAnnC,GAAAnB,EAAAD,GAAA,GAAAyM,KAAAwN,QAAAja,GAAAmB,EAAAknC,SAAA57B,KAAAmpB,MAAA31B,EAAAwM,KAAA8oB,MAAAn1B,EAAAkoC,QAAA77B,KAAAmpB,MAAA,KAAA,IAAA5iB,OAAA,4CAAAvG,MAAAwN,QAAAsuB,IAAA97B,KAAAwN,QAAAwuB,OAAAh8B,KAAA8oB,MAAAn1B,EAAAqoC,OAAAh8B,KAAA8oB,MAAAn1B,EAAAmoC,IAAA97B,KAAAwN,QAAAyuB,WAAAj8B,KAAA8oB,MAAAn1B,EAAAsoC,UAAA,QAAA1nC,GAAAf,GAAAwM,KAAAu6B,UAAAv6B,KAAAk4B,MAAA,KAAAl4B,KAAAwN,QAAAha,GAAAkB,EAAAknC,SAAA,QAAAtnC,GAAAd,EAAAD,GAAA,MAAAC,GAAA6C,QAAA9C,EAAA,KAAA,eAAA,SAAA8C,QAAA,KAAA,QAAAA,QAAA,KAAA,QAAAA,QAAA,KAAA,UAAAA,QAAA,KAAA,SAAA,QAAAvB,GAAAtB,EAAAD,GAAA,MAAAC,GAAAA,EAAA6P,OAAA9P,EAAAA,GAAA,GAAA,QAAAI,GAAAgB,EAAAJ,GAAA,MAAAI,IAAAJ,EAAAA,EAAA8O,QAAA9O,EAAAA,EAAAA,EAAA8B,QAAA,eAAA,MAAA7C,EAAAA,EAAA6C,QAAA1B,EAAAJ,GAAAZ,GAAA,GAAAuc,QAAA1c,EAAAD,IAAA,QAAAkB,MAAA,QAAAuM,GAAAxN,GAAA,IAAA,GAAAG,GAAAgB,EAAApB,EAAA,EAAAA,EAAAiS,UAAA9R,OAAAH,IAAA,CAAAI,EAAA6R,UAAAjS,EAAA,KAAAoB,IAAAhB,GAAAyT,OAAAhF,UAAAa,eAAA/L,KAAAvD,EAAAgB,KAAAnB,EAAAmB,GAAAhB,EAAAgB,IAAA,MAAAnB,GAAA,QAAAkB,GAAAlB,EAAAG,EAAAgB,GAAA,GAAAA,GAAA,kBAAAhB,GAAA,CAAAgB,IAAAA,EAAAhB,EAAAA,EAAA,MAAAA,IAAAA,EAAAqN,KAAAtM,EAAAknC,SAAAjoC,GAAA,IAAAmB,GAAAvB,EAAA2oC,IAAApnC,EAAAnB,GAAAc,EAAAd,EAAA05B,UAAAx4B,EAAA,EAAAE,EAAAD,EAAApB,OAAAuN,EAAA,CAAA,KAAAxM,GAAAA,EAAAf,OAAA,EAAA,MAAAiB,GAAA,KAAAJ,EAAAmS,MAAA5R,EAAAnB,GAAA,KAAA,GAAAwB,GAAA,iBAAAxB,GAAA05B,SAAA,IAAA75B,GAAAe,EAAAmS,MAAA5R,EAAAnB,EAAA,OAAAA,GAAA05B,UAAA54B,EAAAE,EAAA,KAAAnB,IAAAuB,EAAAkM,EAAAA,KAAA,SAAAzN,GAAA,MAAA,SAAAA,EAAAK,MAAAgB,IAAAJ,EAAAjB,EAAAyF,KAAAzF,EAAA8kB,KAAA,SAAA/kB,EAAAI,GAAA,MAAA,OAAAA,GAAAA,IAAAH,EAAAyF,OAAApE,GAAAM,KAAA3B,EAAAyF,KAAAtF,EAAAH,EAAA2oC,SAAA,SAAAtnC,GAAAM,SAAA,QAAAL,EAAAmM,QAAA,KAAA,MAAAtN,KAAAA,EAAAqN,KAAAtM,EAAAknC,SAAAjoC,IAAAY,EAAAmS,MAAAnT,EAAA2oC,IAAA1oC,EAAAG,GAAAA,GAAA,MAAAsB,GAAA,GAAAA,EAAAmnC,SAAA,2DAAAzoC,GAAAe,EAAAknC,UAAAS,OAAA,MAAA,gCAAA/nC,EAAAW,EAAAmnC,QAAA,IAAA,GAAA,QAAA,MAAAnnC,IAAA,GAAAzB,IAAA8oC,QAAA,OAAAzP,KAAA,oBAAA0P,OAAA9nC,EAAA+nC,GAAA,4BAAAC,QAAA,wCAAAC,QAAAjoC,EAAAkoC,SAAA,8BAAAC,WAAA,8BAAAjH,KAAA,4DAAAtZ,KAAA,iDAAAwgB,IAAA,oEAAAC,MAAAroC,EAAAsoC,UAAA,iEAAA9jC,KAAA,UAAAzF,GAAAwpC,OAAA,kBAAAxpC,EAAAuiC,KAAA,6CAAAviC,EAAAuiC,KAAAjhC,EAAAtB,EAAAuiC,KAAA,MAAA,QAAAviC,EAAAwpC,UAAAxpC,EAAAmiC,KAAA7gC,EAAAtB,EAAAmiC,MAAA,QAAAniC,EAAAwpC,QAAA,KAAA,uCAAAxpC,EAAAypC,KAAA,0JAAAzpC,EAAA6oB,KAAAvnB,EAAAtB,EAAA6oB,MAAA,UAAA,mBAAA,SAAA,wBAAA,UAAA,qCAAA,OAAA7oB,EAAAypC,QAAAzpC,EAAAupC,UAAAjoC,EAAAtB,EAAAupC,WAAA,KAAAvpC,EAAAgpC,IAAA,UAAAhpC,EAAAipC,SAAA,WAAAjpC,EAAAmpC,UAAA,aAAAnpC,EAAAopC,YAAA,MAAA,IAAAppC,EAAAypC,MAAA,MAAAzpC,EAAAqpC,OAAArpC,EAAAqoC,OAAA76B,KAAAxN,GAAAA,EAAAsoC,IAAA96B,KAAAxN,EAAAqoC,QAAAU,OAAA,yDAAAQ,UAAA,MAAAvpC,EAAAsoC,IAAAiB,UAAAjoC,EAAAtB,EAAAupC,WAAA,MAAA,MAAAvpC,EAAAsoC,IAAAS,OAAAl5B,OAAAhN,QAAA,MAAA,OAAA,OAAA7C,EAAAuoC,OAAA/6B,KAAAxN,EAAAsoC,KAAAY,QAAA,gEAAAI,MAAA,8DAAAvpC,EAAAu1B,MAAAt1B,EAAAD,EAAA2oC,IAAA,SAAA1oC,EAAAG,GAAA,GAAAgB,GAAA,GAAApB,GAAAI,EAAA,OAAAgB,GAAAunC,IAAA1oC,IAAAD,EAAA6O,UAAA85B,IAAA,SAAA1oC,GAAA,MAAAA,GAAAA,EAAA6C,QAAA,WAAA,MAAAA,QAAA,MAAA,QAAAA,QAAA,UAAA,KAAAA,QAAA,UAAA,MAAA2J,KAAAk4B,MAAA1kC,GAAA,IAAAD,EAAA6O,UAAA81B,MAAA,SAAA3kC,EAAAI,GAAA,IAAA,GAAAgB,GAAAJ,EAAAD,EAAAQ,EAAAL,EAAAuM,EAAAtM,EAAAG,EAAAE,EAAAxB,EAAAA,EAAA8C,QAAA,SAAA,IAAA9C,GAAA,IAAAe,EAAA0L,KAAA8oB,MAAAwT,QAAAnkC,KAAA5E,MAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAY,EAAA,GAAAZ,OAAA,GAAAsM,KAAAu6B,OAAAtgC,MAAApG,KAAA,WAAAS,EAAA0L,KAAA8oB,MAAA+D,KAAA10B,KAAA5E,GAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAY,EAAAA,EAAA,GAAA+B,QAAA,UAAA,IAAA2J,KAAAu6B,OAAAtgC,MAAApG,KAAA,OAAAoF,KAAA+G,KAAAwN,QAAAyuB,SAAA3nC,EAAAA,EAAA+B,QAAA,OAAA,UAAA,IAAA/B,EAAA0L,KAAA8oB,MAAAyT,OAAApkC,KAAA5E,GAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsM,KAAAu6B,OAAAtgC,MAAApG,KAAA,OAAAykB,KAAAhkB,EAAA,GAAA2E,KAAA3E,EAAA,SAAA,IAAAA,EAAA0L,KAAA8oB,MAAA2T,QAAAtkC,KAAA5E,GAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsM,KAAAu6B,OAAAtgC,MAAApG,KAAA,UAAAqpC,MAAA5oC,EAAA,GAAAZ,OAAAuF,KAAA3E,EAAA,SAAA,IAAAX,IAAAW,EAAA0L,KAAA8oB,MAAA4T,QAAAvkC,KAAA5E,IAAA,CAAA,IAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsN,GAAAnN,KAAA,QAAA+kB,OAAAtkB,EAAA,GAAA+B,QAAA,eAAA,IAAAP,MAAA,UAAAqnC,MAAA7oC,EAAA,GAAA+B,QAAA,aAAA,IAAAP,MAAA,UAAAsnC,MAAA9oC,EAAA,GAAA+B,QAAA,MAAA,IAAAP,MAAA,OAAAjB,EAAA,EAAAA,EAAAmM,EAAAm8B,MAAAzpC,OAAAmB,IAAA,YAAA6B,KAAAsK,EAAAm8B,MAAAtoC,IAAAmM,EAAAm8B,MAAAtoC,GAAA,QAAA,aAAA6B,KAAAsK,EAAAm8B,MAAAtoC,IAAAmM,EAAAm8B,MAAAtoC,GAAA,SAAA,YAAA6B,KAAAsK,EAAAm8B,MAAAtoC,IAAAmM,EAAAm8B,MAAAtoC,GAAA,OAAAmM,EAAAm8B,MAAAtoC,GAAA,IAAA,KAAAA,EAAA,EAAAA,EAAAmM,EAAAo8B,MAAA1pC,OAAAmB,IAAAmM,EAAAo8B,MAAAvoC,GAAAmM,EAAAo8B,MAAAvoC,GAAAiB,MAAA,SAAAkK,MAAAu6B,OAAAtgC,KAAA+G,OAAA,IAAA1M,EAAA0L,KAAA8oB,MAAA6T,SAAAxkC,KAAA5E,GAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsM,KAAAu6B,OAAAtgC,MAAApG,KAAA,UAAAqpC,MAAA,MAAA5oC,EAAA,GAAA,EAAA,EAAA2E,KAAA3E,EAAA,SAAA,IAAAA,EAAA0L,KAAA8oB,MAAA0T,GAAArkC,KAAA5E,GAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsM,KAAAu6B,OAAAtgC,MAAApG,KAAA,WAAA,IAAAS,EAAA0L,KAAA8oB,MAAA8T,WAAAzkC,KAAA5E,GAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsM,KAAAu6B,OAAAtgC,MAAApG,KAAA,qBAAAS,EAAAA,EAAA,GAAA+B,QAAA,WAAA,IAAA2J,KAAAk4B,MAAA5jC,EAAAX,GAAAqM,KAAAu6B,OAAAtgC,MAAApG,KAAA,uBAAA,IAAAS,EAAA0L,KAAA8oB,MAAA6M,KAAAx9B,KAAA5E,GAAA,CAAA,IAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAoB,EAAAR,EAAA,GAAA0L,KAAAu6B,OAAAtgC,MAAApG,KAAA,aAAAwpC,QAAAvoC,EAAApB,OAAA,IAAAY,EAAAA,EAAA,GAAAH,MAAA6L,KAAA8oB,MAAAiN,MAAAphC,GAAA,EAAAI,EAAAT,EAAAZ,OAAAmB,EAAA,EAAAE,EAAAF,EAAAA,IAAAmM,EAAA1M,EAAAO,GAAAH,EAAAsM,EAAAtN,OAAAsN,EAAAA,EAAA3K,QAAA,qBAAA,KAAA2K,EAAA8B,QAAA,SAAApO,GAAAsM,EAAAtN,OAAAsN,EAAAhB,KAAAwN,QAAAyuB,SAAAj7B,EAAA3K,QAAA,YAAA,IAAA2K,EAAA3K,QAAA,GAAA6Z,QAAA,QAAAxb,EAAA,IAAA,MAAA,KAAAsL,KAAAwN,QAAA8vB,YAAAzoC,IAAAE,EAAA,IAAAN,EAAAjB,EAAAwpC,OAAA7kC,KAAA7D,EAAAO,EAAA,IAAA,GAAAC,IAAAL,GAAAK,EAAApB,OAAA,GAAAe,EAAAf,OAAA,IAAAH,EAAAe,EAAAiG,MAAA1F,EAAA,GAAAkb,KAAA,MAAAxc,EAAAsB,EAAAE,EAAA,IAAAR,EAAAI,GAAA,eAAA+B,KAAAsK,GAAAnM,IAAAE,EAAA,IAAAJ,EAAA,OAAAqM,EAAAA,EAAAtN,OAAA,GAAAa,IAAAA,EAAAI,IAAAqL,KAAAu6B,OAAAtgC,MAAApG,KAAAU,EAAA,mBAAA,oBAAAyL,KAAAk4B,MAAAl3B,GAAA,GAAAhB,KAAAu6B,OAAAtgC,MAAApG,KAAA,iBAAAmM,MAAAu6B,OAAAtgC,MAAApG,KAAA,iBAAA,IAAAS,EAAA0L,KAAA8oB,MAAAzM,KAAAlkB,KAAA5E,GAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsM,KAAAu6B,OAAAtgC,MAAApG,KAAAmM,KAAAwN,QAAA+vB,SAAA,YAAA,OAAAjH,IAAA,QAAAhiC,EAAA,IAAA,WAAAA,EAAA,GAAA2E,KAAA3E,EAAA,SAAA,IAAAX,IAAAW,EAAA0L,KAAA8oB,MAAA+T,IAAA1kC,KAAA5E,IAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsM,KAAAu6B,OAAApR,MAAA70B,EAAA,GAAAiC,gBAAAoY,KAAAra,EAAA,GAAAu6B,MAAAv6B,EAAA,QAAA,IAAAX,IAAAW,EAAA0L,KAAA8oB,MAAAgU,MAAA3kC,KAAA5E,IAAA,CAAA,IAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsN,GAAAnN,KAAA,QAAA+kB,OAAAtkB,EAAA,GAAA+B,QAAA,eAAA,IAAAP,MAAA,UAAAqnC,MAAA7oC,EAAA,GAAA+B,QAAA,aAAA,IAAAP,MAAA,UAAAsnC,MAAA9oC,EAAA,GAAA+B,QAAA,iBAAA,IAAAP,MAAA,OAAAjB,EAAA,EAAAA,EAAAmM,EAAAm8B,MAAAzpC,OAAAmB,IAAA,YAAA6B,KAAAsK,EAAAm8B,MAAAtoC,IAAAmM,EAAAm8B,MAAAtoC,GAAA,QAAA,aAAA6B,KAAAsK,EAAAm8B,MAAAtoC,IAAAmM,EAAAm8B,MAAAtoC,GAAA,SAAA,YAAA6B,KAAAsK,EAAAm8B,MAAAtoC,IAAAmM,EAAAm8B,MAAAtoC,GAAA,OAAAmM,EAAAm8B,MAAAtoC,GAAA,IAAA,KAAAA,EAAA,EAAAA,EAAAmM,EAAAo8B,MAAA1pC,OAAAmB,IAAAmM,EAAAo8B,MAAAvoC,GAAAmM,EAAAo8B,MAAAvoC,GAAAwB,QAAA,mBAAA,IAAAP,MAAA,SAAAkK,MAAAu6B,OAAAtgC,KAAA+G,OAAA,IAAArN,IAAAW,EAAA0L,KAAA8oB,MAAAiU,UAAA5kC,KAAA5E,IAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsM,KAAAu6B,OAAAtgC,MAAApG,KAAA,YAAAoF,KAAA,OAAA3E,EAAA,GAAAA,EAAA,GAAAZ,OAAA,GAAAY,EAAA,GAAAiG,MAAA,EAAA,IAAAjG,EAAA,SAAA,IAAAA,EAAA0L,KAAA8oB,MAAA7vB,KAAAd,KAAA5E,GAAAA,EAAAA,EAAA22B,UAAA51B,EAAA,GAAAZ,QAAAsM,KAAAu6B,OAAAtgC,MAAApG,KAAA,OAAAoF,KAAA3E,EAAA,SAAA,IAAAf,EAAA,KAAA,IAAAgT,OAAA,0BAAAhT,EAAAujC,WAAA,GAAA,OAAA92B,MAAAu6B,OAAA,IAAA5mC,IAAA6pC,OAAA,8BAAAC,SAAA,2BAAAjhB,IAAA/nB,EAAAq5B,IAAA,yDAAA4P,KAAA,0BAAAC,QAAA,iCAAAC,OAAA,mCAAAC,OAAA,iDAAAnS,GAAA,0DAAAmB,KAAA,mCAAAiR,GAAA,mBAAAC,IAAAtpC,EAAAwE,KAAA,qCAAAtF,GAAAqqC,QAAA,uCAAArqC,EAAAsqC,MAAA,gDAAAtqC,EAAA+pC,KAAA5oC,EAAAnB,EAAA+pC,MAAA,SAAA/pC,EAAAqqC,SAAA,OAAArqC,EAAAsqC,SAAAtqC,EAAAgqC,QAAA7oC,EAAAnB,EAAAgqC,SAAA,SAAAhqC,EAAAqqC,WAAArqC,EAAAkoC,OAAA76B,KAAArN,GAAAA,EAAAsoC,SAAAj7B,KAAArN,EAAAkoC,QAAAgC,OAAA,iEAAAnS,GAAA,6DAAA/3B,EAAAmoC,IAAA96B,KAAArN,EAAAkoC,QAAA2B,OAAA1oC,EAAAnB,EAAA6pC,QAAA,KAAA,UAAAhhB,IAAA,uCAAAuhB,IAAA,0BAAA9kC,KAAAnE,EAAAnB,EAAAsF,MAAA,KAAA,OAAA,IAAA,mBAAAtF,EAAAqoC,OAAAh7B,KAAArN,EAAAmoC,KAAAgC,GAAAhpC,EAAAnB,EAAAmqC,IAAA,OAAA,OAAA7kC,KAAAnE,EAAAnB,EAAAmoC,IAAA7iC,MAAA,OAAA,SAAAtE,EAAAm0B,MAAAn1B,EAAAgB,EAAAupC,OAAA,SAAA1qC,EAAAD,EAAAI,GAAA,GAAAY,GAAA,GAAAI,GAAApB,EAAAI,EAAA,OAAAY,GAAA2pC,OAAA1qC,IAAAmB,EAAAyN,UAAA87B,OAAA,SAAA1qC,GAAA,IAAA,GAAAG,GAAAgB,EAAAJ,EAAAO,EAAAvB,EAAA,GAAAC,GAAA,GAAAsB,EAAAkL,KAAA8oB,MAAA0U,OAAArlC,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAH,GAAAuB,EAAA,OAAA,IAAAA,EAAAkL,KAAA8oB,MAAA2U,SAAAtlC,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAA,MAAAoB,EAAA,IAAAH,EAAA,MAAAG,EAAA,GAAA,GAAAkL,KAAA+4B,OAAAjkC,EAAA,GAAAo1B,UAAA,IAAAlqB,KAAA+4B,OAAAjkC,EAAA,IAAAP,EAAAyL,KAAA+4B,OAAA,WAAApkC,IAAAA,EAAAL,EAAAQ,EAAA,IAAAP,EAAAI,GAAApB,GAAA,YAAAgB,EAAA,KAAAI,EAAA,WAAA,IAAAG,EAAAkL,KAAA8oB,MAAAtM,IAAArkB,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAiB,EAAAL,EAAAQ,EAAA,IAAAP,EAAAI,EAAApB,GAAA,YAAAgB,EAAA,KAAAI,EAAA,WAAA,IAAAG,EAAAkL,KAAA8oB,MAAAgF,IAAA31B,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAH,GAAAyM,KAAAwN,QAAA+vB,SAAAjpC,EAAAQ,EAAA,IAAAA,EAAA,OAAA,IAAAA,EAAAkL,KAAA8oB,MAAA4U,KAAAvlC,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAH,GAAAyM,KAAAm+B,WAAArpC,GAAA6Z,KAAA7Z,EAAA,GAAA+5B,MAAA/5B,EAAA,SAAA,KAAAA,EAAAkL,KAAA8oB,MAAA6U,QAAAxlC,KAAA3E,MAAAsB,EAAAkL,KAAA8oB,MAAA8U,OAAAzlC,KAAA3E,IAAA,CAAA,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAC,GAAAmB,EAAA,IAAAA,EAAA,IAAAuB,QAAA,OAAA,KAAA1C,EAAAqM,KAAAmpB,MAAAx1B,EAAA4C,gBAAA5C,IAAAA,EAAAgb,KAAA,CAAApb,GAAAuB,EAAA,GAAA,GAAAtB,EAAAsB,EAAA,GAAAo1B,UAAA,GAAA12B,CAAA,UAAAD,GAAAyM,KAAAm+B,WAAArpC,EAAAnB,OAAA,IAAAmB,EAAAkL,KAAA8oB,MAAA+U,OAAA1lC,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAH,GAAA,WAAAyM,KAAAk+B,OAAAppC,EAAA,IAAAA,EAAA,IAAA,gBAAA,IAAAA,EAAAkL,KAAA8oB,MAAA4C,GAAAvzB,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAH,GAAA,OAAAyM,KAAAk+B,OAAAppC,EAAA,IAAAA,EAAA,IAAA,YAAA,IAAAA,EAAAkL,KAAA8oB,MAAA+D,KAAA10B,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAH,GAAA,SAAAe,EAAAQ,EAAA,IAAA,GAAA,cAAA,IAAAA,EAAAkL,KAAA8oB,MAAAgV,GAAA3lC,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAH,GAAA,WAAA,IAAAuB,EAAAkL,KAAA8oB,MAAAiV,IAAA5lC,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAH,GAAA,QAAAyM,KAAAk+B,OAAAppC,EAAA,IAAA,aAAA,IAAAA,EAAAkL,KAAA8oB,MAAA7vB,KAAAd,KAAA3E,GAAAA,EAAAA,EAAA02B,UAAAp1B,EAAA,GAAApB,QAAAH,GAAAe,EAAAQ,EAAA,QAAA,IAAAtB,EAAA,KAAA,IAAA+S,OAAA,0BAAA/S,EAAAsjC,WAAA,GAAA,OAAAvjC,IAAAoB,EAAAyN,UAAA+7B,WAAA,SAAA3qC,EAAAD,GAAA,MAAA,MAAAC,EAAA,GAAA,GAAA,YAAAc,EAAAf,EAAAob,MAAA,KAAApb,EAAAs7B,MAAA,WAAAv6B,EAAAf,EAAAs7B,OAAA,IAAA,IAAA,IAAA7uB,KAAAk+B,OAAA1qC,EAAA,IAAA,OAAA,aAAAc,EAAAf,EAAAob,MAAA,UAAAra,EAAAd,EAAA,IAAA,KAAAD,EAAAs7B,MAAA,WAAAv6B,EAAAf,EAAAs7B,OAAA,IAAA,IAAA,KAAAl6B,EAAAyN,UAAAg8B,YAAA,SAAA5qC,GAAA,MAAAwM,MAAAwN,QAAA4wB,YAAA5qC,EAAA6C,QAAA,MAAA,KAAAA,QAAA,SAAA,KAAA7C,GAAAmB,EAAAyN,UAAA22B,OAAA,SAAAvlC,GAAA,IAAA,GAAAe,GAAAhB,EAAA,GAAAI,EAAAH,EAAAE,OAAAiB,EAAA,EAAAhB,EAAAgB,EAAAA,IAAAJ,EAAAf,EAAAsjC,WAAAniC,GAAAuG,KAAAkQ,SAAA,KAAA7W,EAAA,IAAAA,EAAAwO,SAAA,KAAAxP,GAAA,KAAAgB,EAAA,GAAA,OAAAhB,IAAAgB,EAAAmS,MAAA,SAAAlT,EAAAD,GAAA,GAAAI,GAAA,GAAAY,GAAAhB,EAAA,OAAAI,GAAA+S,MAAAlT,IAAAe,EAAA6N,UAAAsE,MAAA,SAAAlT,GAAAwM,KAAAq+B,OAAA,GAAA1pC,GAAAnB,EAAA21B,MAAAnpB,KAAAwN,SAAAxN,KAAAu6B,OAAA/mC,EAAA+mB,SAAA,KAAA,GAAAhnB,GAAA,GAAAyM,KAAAyZ,QAAAlmB,GAAAyM,KAAAs+B,KAAA,OAAA/qC,IAAAgB,EAAA6N,UAAAqX,KAAA,WAAA,MAAAzZ,MAAAk4B,MAAAl4B,KAAAu6B,OAAAnlC,OAAAb,EAAA6N,UAAAm8B,KAAA,WAAA,MAAAv+B,MAAAu6B,OAAAv6B,KAAAu6B,OAAA7mC,OAAA,IAAA,GAAAa,EAAA6N,UAAAo8B,UAAA,WAAA,IAAA,GAAAhrC,GAAAwM,KAAAk4B,MAAAj/B,KAAA,SAAA+G,KAAAu+B,OAAA1qC,MAAAL,GAAA,KAAAwM,KAAAyZ,OAAAxgB,IAAA,OAAA+G,MAAAq+B,OAAAH,OAAA1qC,IAAAe,EAAA6N,UAAAk8B,IAAA,WAAA,OAAAt+B,KAAAk4B,MAAArkC,MAAA,IAAA,QAAA,MAAA,EAAA,KAAA,KAAA,MAAA,QAAA,KAAA,UAAA,MAAA,KAAAmM,KAAAk4B,MAAAgF,MAAA,IAAAl9B,KAAAq+B,OAAAH,OAAAl+B,KAAAk4B,MAAAj/B,MAAA,MAAA+G,KAAAk4B,MAAAgF,MAAA,KAAA,KAAA,OAAA,GAAAl9B,KAAAwN,QAAA6f,UAAA,CAAA,GAAA75B,GAAAwM,KAAAwN,QAAA6f,UAAArtB,KAAAk4B,MAAAj/B,KAAA+G,KAAAk4B,MAAA5f,KAAA,OAAA9kB,GAAAA,IAAAwM,KAAAk4B,MAAAj/B,OAAA+G,KAAAk4B,MAAAiE,SAAA,EAAAn8B,KAAAk4B,MAAAj/B,KAAAzF,GAAA,MAAAwM,MAAAk4B,MAAAiE,UAAAn8B,KAAAk4B,MAAAj/B,KAAA3E,EAAA0L,KAAAk4B,MAAAj/B,MAAA,IAAA,cAAA+G,KAAAk4B,MAAA5f,KAAA,WAAAtY,KAAAwN,QAAAixB,WAAAz+B,KAAAk4B,MAAA5f,KAAA,IAAA,IAAA,IAAAtY,KAAAk4B,MAAAj/B,KAAA,iBAAA,KAAA,QAAA,GAAAtF,GAAAgB,EAAAJ,EAAAO,EAAAL,EAAAlB,EAAA,EAAA,KAAAA,GAAA,kBAAAoB,EAAA,EAAAA,EAAAqL,KAAAk4B,MAAAtf,OAAAllB,OAAAiB,IAAAhB,EAAAqM,KAAAq+B,OAAAH,OAAAl+B,KAAAk4B,MAAAtf,OAAAjkB,IAAApB,GAAAyM,KAAAk4B,MAAAiF,MAAAxoC,GAAA,cAAAqL,KAAAk4B,MAAAiF,MAAAxoC,GAAA,KAAAhB,EAAA,UAAA,OAAAA,EAAA,SAAA,KAAAJ,GAAA,oBAAAA,GAAA,YAAAoB,EAAA,EAAAA,EAAAqL,KAAAk4B,MAAAkF,MAAA1pC,OAAAiB,IAAA,CAAA,IAAAJ,EAAAyL,KAAAk4B,MAAAkF,MAAAzoC,GAAApB,GAAA,SAAAkB,EAAA,EAAAA,EAAAF,EAAAb,OAAAe,IAAAK,EAAAkL,KAAAq+B,OAAAH,OAAA3pC,EAAAE,IAAAlB,GAAAyM,KAAAk4B,MAAAiF,MAAA1oC,GAAA,cAAAuL,KAAAk4B,MAAAiF,MAAA1oC,GAAA,KAAAK,EAAA,UAAA,OAAAA,EAAA,SAAAvB,IAAA,UAAA,MAAAA,IAAA,aAAA,YAAAA,EAAA,YAAA,KAAA,mBAAA,IAAA,GAAAA,GAAA,GAAA,mBAAAyM,KAAAyZ,OAAA5lB,MAAAN,GAAAyM,KAAAs+B,KAAA,OAAA,iBAAA/qC,EAAA,iBAAA,KAAA,aAAA,IAAA,GAAAyN,GAAAhB,KAAAk4B,MAAAmF,QAAA,KAAA,KAAA9pC,EAAA,GAAA,aAAAyM,KAAAyZ,OAAA5lB,MAAAN,GAAAyM,KAAAs+B,KAAA,OAAA,IAAAt9B,EAAA,MAAAzN,EAAA,KAAAyN,EAAA,KAAA,KAAA,kBAAA,IAAA,GAAAzN,GAAA,GAAA,kBAAAyM,KAAAyZ,OAAA5lB,MAAAN,GAAA,SAAAyM,KAAAk4B,MAAArkC,KAAAmM,KAAAw+B,YAAAx+B,KAAAs+B,KAAA,OAAA,OAAA/qC,EAAA,SAAA,KAAA,mBAAA,IAAA,GAAAA,GAAA,GAAA,kBAAAyM,KAAAyZ,OAAA5lB,MAAAN,GAAAyM,KAAAs+B,KAAA,OAAA,OAAA/qC,EAAA,SAAA,KAAA,OAAA,MAAAyM,MAAAk4B,MAAA5B,KAAAt2B,KAAAwN,QAAAyuB,SAAAj8B,KAAAk4B,MAAAj/B,KAAA+G,KAAAq+B,OAAAH,OAAAl+B,KAAAk4B,MAAAj/B,KAAA,KAAA,YAAA,MAAA,MAAA+G,KAAAq+B,OAAAH,OAAAl+B,KAAAk4B,MAAAj/B,MAAA,QAAA,KAAA,OAAA,MAAA,MAAA+G,KAAAw+B,YAAA,WAAA/pC,EAAA0D,KAAA1D,EAAAC,EAAA8Y,QAAA9Y,EAAAgqC,WAAA,SAAAlrC,GAAA,MAAAwN,GAAAtM,EAAAknC,SAAApoC,GAAAkB,GAAAA,EAAAknC,UAAAE,KAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAsB,UAAA,EAAAD,YAAA,EAAAjB,QAAA,EAAAhP,UAAA,KAAAoR,WAAA,SAAA/pC,EAAAikC,OAAApkC,EAAAG,EAAAkkC,OAAArkC,EAAAmS,MAAAhS,EAAAiqC,MAAAprC,EAAAmB,EAAAkqC,MAAArrC,EAAA2oC,IAAAxnC,EAAAmqC,YAAAlqC,EAAAD,EAAAoqC,YAAAnqC,EAAAupC,OAAAxpC,EAAAgS,MAAAhS,EAAA,gBAAAy5B,SAAAD,OAAAC,QAAAz5B,EAAA,kBAAAiyB,SAAAA,OAAAC,IAAAD,OAAA,WAAA,MAAAjyB,KAAAsL,KAAA++B,OAAArqC,GAAAwC,KAAA,WAAA,MAAA8I,QAAA,mBAAAjN,QAAAA,OAAAqc;;;;AAOA,SAAA9a,GAAA,YAAA,KAAAA,EAAAgkC,OAAA,CAAA,GAAA9kC,GAAAD,EAAA,OAAA,oBAAA26B,SAAAA,OAAAC,UAAA36B,EAAA6+B,QAAA,UAAA2M,OAAA,IAAArrC,GAAA,mEAAAe,EAAA,SAAAJ,GAAA,IAAA,GAAAf,MAAAC,EAAA,EAAAG,EAAAW,EAAAZ,OAAAC,EAAAH,EAAAA,IAAAD,EAAAe,EAAA+F,OAAA7G,IAAAA,CAAA,OAAAD,IAAAI,GAAAc,EAAA6hB,OAAAC,aAAA1hB,EAAA,SAAAP,GAAA,GAAAA,EAAAZ,OAAA,EAAA,CAAA,GAAAH,GAAAe,EAAAwiC,WAAA,EAAA,OAAA,KAAAvjC,EAAAe,EAAA,KAAAf,EAAAkB,EAAA,IAAAlB,IAAA,GAAAkB,EAAA,IAAA,GAAAlB,GAAAkB,EAAA,IAAAlB,IAAA,GAAA,IAAAkB,EAAA,IAAAlB,IAAA,EAAA,IAAAkB,EAAA,IAAA,GAAAlB,GAAA,GAAAA,GAAA,MAAA,MAAAe,EAAAwiC,WAAA,GAAA,QAAAxiC,EAAAwiC,WAAA,GAAA,MAAA,OAAAriC,GAAA,IAAAlB,IAAA,GAAA,GAAAkB,EAAA,IAAAlB,IAAA,GAAA,IAAAkB,EAAA,IAAAlB,IAAA,EAAA,IAAAkB,EAAA,IAAA,GAAAlB,IAAA4B,EAAA,gDAAAZ,EAAA,SAAAD,GAAA,MAAAA,GAAA+B,QAAAlB,EAAAN,IAAAI,EAAA,SAAAX,GAAA,GAAAf,IAAA,EAAA,EAAA,GAAAe,EAAAZ,OAAA,GAAAF,EAAAc,EAAAwiC,WAAA,IAAA,IAAAxiC,EAAAZ,OAAA,EAAAY,EAAAwiC,WAAA,GAAA,IAAA,GAAAxiC,EAAAZ,OAAA,EAAAY,EAAAwiC,WAAA,GAAA,GAAApiC,GAAAf,EAAA0G,OAAA7G,IAAA,IAAAG,EAAA0G,OAAA7G,IAAA,GAAA,IAAAD,GAAA,EAAA,IAAAI,EAAA0G,OAAA7G,IAAA,EAAA,IAAAD,GAAA,EAAA,IAAAI,EAAA0G,OAAA,GAAA7G,GAAA,OAAAkB,GAAAqb,KAAA,KAAA/O,EAAA1M,EAAA2qC,MAAA,SAAA3qC,GAAA,MAAAA,GAAA+B,QAAA,eAAApB,IAAA8L,EAAAvN,EAAA,SAAAc,GAAA,MAAA,IAAAd,GAAAc,GAAAyO,SAAA,WAAA,SAAAzO,GAAA,MAAA0M,GAAAzM,EAAAD,KAAA4O,EAAA,SAAA5O,EAAAf,GAAA,MAAAA,GAAAwN,EAAAzM,GAAA+B,QAAA,SAAA,SAAA/B,GAAA,MAAA,KAAAA,EAAA,IAAA,MAAA+B,QAAA,KAAA,IAAA0K,EAAAzM,IAAA2M,EAAA,SAAA3M,GAAA,MAAA4O,GAAA5O,GAAA,IAAAQ,EAAA,GAAAob,SAAA,aAAA,gBAAA,iBAAAH,KAAA,KAAA,KAAAnM,EAAA,SAAAtP,GAAA,OAAAA,EAAAZ,QAAA,IAAA,GAAA,GAAAH,IAAA,EAAAe,EAAAwiC,WAAA,KAAA,IAAA,GAAAxiC,EAAAwiC,WAAA,KAAA,IAAA,GAAAxiC,EAAAwiC,WAAA,KAAA,EAAA,GAAAxiC,EAAAwiC,WAAA,GAAAtjC,EAAAD,EAAA,KAAA,OAAAkB,IAAAjB,IAAA,IAAA,OAAAiB,GAAA,KAAAjB,GAAA,MAAA,KAAA,GAAA,MAAAiB,IAAA,GAAAH,EAAAwiC,WAAA,KAAA,IAAA,GAAAxiC,EAAAwiC,WAAA,KAAA,EAAA,GAAAxiC,EAAAwiC,WAAA,GAAA,SAAA,MAAAriC,IAAA,GAAAH,EAAAwiC,WAAA,KAAA,EAAA,GAAAxiC,EAAAwiC,WAAA,MAAAniC,EAAA,SAAAL,GAAA,MAAAA,GAAA+B,QAAAvB,EAAA8O,IAAA7O,EAAA,SAAAT,GAAA,GAAAf,GAAAe,EAAAZ,OAAAF,EAAAD,EAAA,EAAAI,GAAAJ,EAAA,EAAAmB,EAAAJ,EAAA+F,OAAA,KAAA,GAAA,IAAA9G,EAAA,EAAAmB,EAAAJ,EAAA+F,OAAA,KAAA,GAAA,IAAA9G,EAAA,EAAAmB,EAAAJ,EAAA+F,OAAA,KAAA,EAAA,IAAA9G,EAAA,EAAAmB,EAAAJ,EAAA+F,OAAA,IAAA,GAAAxF,GAAAJ,EAAAd,IAAA,IAAAc,EAAAd,IAAA,EAAA,KAAAc,EAAA,IAAAd,GAAA,OAAAkB,GAAAnB,SAAA,EAAA,EAAA,EAAA,GAAAF,GAAAqB,EAAAkb,KAAA,KAAAvM,EAAAlP,EAAA4qC,MAAA,SAAA5qC,GAAA,MAAAA,GAAA+B,QAAA,eAAAtB,IAAAnB,EAAAJ,EAAA,SAAAc,GAAA,MAAA,IAAAd,GAAAc,EAAA,UAAAyO,YAAA,SAAAzO,GAAA,MAAAK,GAAA6O,EAAAlP,KAAAgC,EAAA,SAAAhC,GAAA,MAAAV,GAAAU,EAAA+B,QAAA,QAAA,SAAA/B,GAAA,MAAA,KAAAA,EAAA,IAAA,MAAA+B,QAAA,oBAAA,KAAA,IAAA/B,EAAAgkC,QAAA6G,QAAA5rC,EAAA2rC,KAAA17B,EAAAy7B,KAAAj+B,EAAAo+B,WAAA9oC,EAAA+oC,SAAAn8B,EAAAo8B,KAAA/qC,EAAA63B,OAAAlpB,EAAAq8B,UAAAt+B,EAAAu+B,KAAA7qC,EAAA4jC,OAAAjiC,GAAA,kBAAA8Q,QAAAq4B,eAAA,CAAA,GAAA97B,GAAA,SAAArP,GAAA,OAAAoF,MAAApF,EAAAorC,YAAA,EAAAC,UAAA,EAAAC,cAAA,GAAAtrC,GAAAgkC,OAAAuH,aAAA,WAAAz4B,OAAAq4B,eAAAnpB,OAAAlU,UAAA,aAAAuB,EAAA,WAAA,MAAArN,GAAA0J,SAAAoH,OAAAq4B,eAAAnpB,OAAAlU,UAAA,WAAAuB,EAAA,SAAArP,GAAA,MAAA4O,GAAAlD,KAAA1L,MAAA8S,OAAAq4B,eAAAnpB,OAAAlU,UAAA,cAAAuB,EAAA,WAAA,MAAAT,GAAAlD,MAAA,UAAAA;;;;;AAQA,SAAA1L,GAAA,GAAAwrtG,IAAA,IAAAjC,IAAA,IAAAsD,IAAA,IAAAjC,IAAA,IAAA2B,IAAA,IAAAjC,IAAA,IAAAyH,IAAA,IAAAC,IAAA,KAAAC,GAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,GAAAC,IAAA,IAAAC,IAAA,GAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,KAAAC,IAAA,GAAAC,IAAA,IAAAC,IAAA,GAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,MAAAC,GAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,IAAAC,IAAA,KAAAC,IAAA,KAAAC,GAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,GAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAjM,IAAA,IAAAkM,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAA1O,IAAA,IAAA2O,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAAAC,GAAAC,IAAA,IAAApC,IAAA,IAAAqC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAArC,IAAA,IAAAsC,IAAA,IAAAnC,IAAA,IAAAoC,IAAA,IAAAnC,IAAA,IAAAoC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAApC,IAAA,IAAAqC,IAAA,IAAAlC,IAAA,KAAAmC,EAAA,GAAA9qC,MAAA8qC,GAAA,GAAAnR,EAAAmR,EAAA,GAAAhN,EAAAgN,EAAA,GAAA9M,EAAA8M,EAAA,GAAAxI,EAAAwI,EAAA,GAAAjI,EAAAiI,EAAA,GAAA9D,EAAA8D,EAAA,GAAArD,EAAAqD,EAAA,GAAAlC,EAAAkC,EAAA,GAAAjB,CAAA,IAAAkB,GAAA,GAAA9pC,OAAA8pC,GAAAC,WAAA,WAAA,IAAAD,EAAAr7C,IAAA,CAAAq7C,EAAAr7C,OAAAq7C,EAAAE,MAAA,EAAA,KAAA,GAAA78C,KAAA08C,GAAA,CAAA,GAAAI,GAAAJ,EAAA18C,EAAA,KAAA,GAAAY,KAAAk8C,GAAAH,EAAAr7C,IAAAV,GAAAk8C,EAAAl8C,GAAA+7C,EAAAE,OAAAj8C,EAAA+7C,EAAAthB,MAAA,GAAA1f,QAAA,IAAAghC,EAAAE,MAAA,OAAAF,EAAAE,MAAA,KAAA,OAAAE,SAAA,SAAA5X,GAAAwX,EAAAC,YAAA,IAAAI,GAAA,GAAAC,EAAA9X,EAAAvlC,MAAA+8C,EAAAthB,MAAA,IAAA4hB,EAAA,IAAA,GAAAj9C,GAAA,EAAAA,EAAAi9C,EAAA99C,OAAAa,IAAA,CAAA,GAAA,GAAAi9C,EAAAj9C,GAAAb,OAAA,CAAA,GAAA+9C,GAAAP,EAAAr7C,IAAA27C,EAAAj9C,GAAA,IAAA,MAAAk9C,EAAA,CAAAF,GAAAE,CAAA,WAAAF,GAAAC,EAAAj9C,OAAAg9C,GAAA7X,CAAA,OAAA6X,IAAA7Z,QAAAiC,QAAA,SAAAhlC,EAAA+8C,GAAA,MAAA/8C,GAAA28C,SAAA38C,GAAAA,EAAAA,EAAA0B,QAAA,YAAA,IAAA1B,EAAAA,EAAA0B,QAAA,aAAA,IAAA1B,EAAAA,EAAA0B,QAAA,UAAA,KAAA1B,EAAAA,EAAA4B,cAAA5B,EAAAu1B,UAAA,EAAAwnB,OC9qBA,WACA,GAAA3Z,GAAA,SAAAlG,GACA,QAIAh+B,KAAA,OACA+7B,MAAA,wBACAv5B,QAAA,SAAAlC,EAAAw9C,EAAAlrB,EAAAmrB,GACA,MAAA,QAAAnrB,EAAA,YAOA,oBAAA1zB,SAAAA,OAAAw+B,UAAAx+B,OAAAw+B,SAAAC,aAAAz+B,OAAAw+B,SAAAC,WAAAuG,OAAAA,GAEA,mBAAA7J,UAAAA,OAAAC,QAAA4J,MCRA,WACA,GAAA+E,GAAA,SAAAjL,GACA,GAAAz6B,GAAA2kC,KAAAlhC,EAAA,kBAyEA,OAxEAkhC,GAAAvgB,GAAA,SAAA5C,GACA,GAAA,KAAAA,EAAAtf,OAAA,MAAA,EACA,IAAAwL,GAAA8T,EAAAtf,OAAAjD,QAAA,KAAA,KAAAE,aACA,OAAA,WAAAuO,EAAA,YAAAjK,EAAA,KAAA+d,EAAA,SAEAmjB,EAAA9gB,GAAA,SAAA42B,GACA,MAAA,cAAAh3C,EAAA,KAAAg3B,EAAAa,SAAAmf,GAAA,SAEA9V,EAAA+V,IAAA,WACA,GAAAC,GAAA,GAAAx9C,EAAA,EAAAy9C,KAAAz3C,MAAAgL,MAAAC,UACA,KAAAjR,EAAAA,EAAAy9C,EAAAt+C,OAAAa,GAAA,EACAw9C,GAAAhW,EAAAvgB,GAAAw2B,EAAAz9C,IAAA,IAEA,OAAAw9C,IAEAhW,EAAAkW,IAAA,WACA,GAAAF,GAAA,GAAAx9C,EAAA,EAAA29C,KAAA33C,MAAAgL,MAAAC,UACA,KAAAjR,EAAAA,EAAA29C,EAAAx+C,OAAAa,GAAA,EACAw9C,GAAAhW,EAAA9gB,GAAAi3B,EAAA39C,IAAA,IAEA,OAAAw9C,IAEAhW,EAAAhhB,MAAA,WACA,GAAAg3B,GAAAC,KAAAz3C,MAAAgL,MAAAC,UAMA,OALAusC,GAAA,YACAA,GAAA,SACAA,GAAAhW,EAAA+V,IAAAvsC,MAAAvF,KAAAgyC,GACAD,GAAA,UACAA,GAAA,cAGAhW,EAAA77B,GAAA,WACA,GAAA6xC,GAAAI,KAAA53C,MAAAgL,MAAAC,UAIA,OAHAusC,GAAA,SACAA,GAAAhW,EAAAkW,IAAA1sC,MAAAvF,KAAAmyC,GACAJ,GAAA,WAGA36C,EAAA,SAAA6B,GACA,GAAAm5C,GAAAJ,EAAAz9C,EAAA,EAAA89C,EAAAp5C,EAAAnD,MAAA,MAAAw8C,KAAAP,IACA,KAAAx9C,EAAAA,EAAA89C,EAAA3+C,OAAAa,GAAA,EAAA,CAGA,GAFA69C,EAAAC,EAAA99C,GAEA69C,EAAA94C,OAAAnF,MAAA,oBAAA,CAMA,GALAi+C,EAAAA,EAAA94C,OACAg5C,EAAAr4C,KAAA,WACA+3C,EAAAI,EAAAloB,UAAA,EAAAkoB,EAAA1+C,OAAA,GAAAoC,MAAA,KACAw8C,EAAAr4C,KAAA8hC,EAAAhhB,MAAAxV,MAAAvF,KAAAgyC,IACAI,EAAAC,IAAA99C,GACA69C,EAAA94C,OAAAnF,MAAA,yBAIA,CAGA,IAFAi+C,EAAAC,IAAA99C,GACA+9C,EAAAr4C,KAAA,WACAm4C,EAAA94C,OAAAnF,MAAA,qBACAi+C,EAAAA,EAAA94C,OACAg5C,EAAAr4C,KAAA8hC,EAAA77B,GAAAqF,MAAAvF,KAAAoyC,EAAAloB,UAAA,EAAAkoB,EAAA1+C,OAAA,GAAAoC,MAAA,OACAs8C,EAAAC,IAAA99C,EAEA+9C,GAAAr4C,KAAA,YACAq4C,EAAAr4C,KAAA,YAEA83C,EAAA93C,KAAAq4C,EAAAviC,KAAA,MACA,UAdAqiC,EAAAC,IAAA99C,GAiBAw9C,EAAA93C,KAAAm4C,GAEA,MAAAL,GAAAhiC,KAAA,SAIAlc,KAAA,OACAuD,OAAAA,IAMA,oBAAArE,SAAAA,OAAAw+B,UAAAx+B,OAAAw+B,SAAAC,aAAAz+B,OAAAw+B,SAAAC,WAAAsL,MAAAA,GAEA,mBAAA5O,UACAA,OAAAC,QAAA2O,MC3EA,WAEA,GAAAyV,GAAA,SAAA1gB,GACA,QAIAh+B,KAAA,OACAuD,OAAA,SAAA6B,GAEA,GAAAu5C,GAAA,EACAC,EAAA,EACA7kB,EAAA,EACA8kB,EAAA,EACAC,IAEA15C,GAAA5C,QAAA,+BAAA,SAAAlC,EAAAy+C,EAAAC,EAAA7sB,EAAA+I,GACA,GAAA+jB,GAAAN,EAAAC,EAAA,GAAAzsB,CACAwsB,GAAAxsB,EACAysB,EAAAt+C,EAAAT,MAMA,KAAA,GAHAq/C,GAAA5+C,EAAAkC,QAAA,KAAA,IAAAP,MAAA,QACAs4B,EAAA,GAEA75B,EAAA,EAAAA,EAAAw+C,EAAAr/C,OAAAa,IAEA65B,GADA,GAAA75B,EACA,OAAAs9B,EAAAa,SAAAqgB,EAAAx+C,IAAA,QAEA,OAAAs9B,EAAAa,SAAAqgB,EAAAx+C,IAAA,OAKAu+C,IACAH,EAAA/kB,IAAAQ,EACAukB,EAAAD,GAAA,KAEAC,EAAAD,GAAAtkB,EACAR,EAAA8kB,GAGAA,KAKA,IAAAM,GAAA,CAiBA,OAhBAL,GAAAj/C,OAAA,IAEAuF,EAAAA,EAAA5C,QAAA,+BAAA,SAAAlC,EAAAy+C,EAAAC,EAAA7sB,EAAA+I,GAIA,MAAA4jB,GAAAK,GAAAt/C,OAAA,EACA,OAAA,iBAAAi/C,EAAAK,GAAAjZ,OAAA,EAAA,IAAA,sBAAA,IAAA,IAAA4Y,EAAAK,KAAA,SAEAA,IACA,OAMA/5C,KAQA,oBAAAlG,SAAAA,OAAAw+B,UAAAx+B,OAAAw+B,SAAAC,aAAAz+B,OAAAw+B,SAAAC,WAAAyhB,WAAAV,GAEA,mBAAArkB,UAAAA,OAAAC,QAAAokB,MCnGA,WAEA,GAAAW,GAAA,SAAArhB,GACA,QAGAh+B,KAAA,OAAA+7B,MAAA,2CAAAv5B,QAAA,SAAAlC,EAAAg/C,EAAAC,EAAAC,GAEA,MAAA,OAAAF,EACAh/C,EAEA,sBAAAk/C,EAAA,KAAAD,EAAA,aAQA,oBAAArgD,SAAAA,OAAAw+B,UAAAx+B,OAAAw+B,SAAAC,aAAAz+B,OAAAw+B,SAAAC,WAAA0hB,OAAAA,GAEA,mBAAAhlB,UAAAA,OAAAC,QAAA+kB,MTLA,SAAAn9C,GAQA,QAAAu9C,KACA9gD,IAAAF,oBAAAihD,EAAA/gD,IAAAA,EAAA0a,SAAA,UACA1a,EAAAiyB,SAAAlS,UAAA/f,EAAA+f,aAAAghC,EAAAl2B,WAAAzqB,IAAAmD,EAAAhD,QAAAwP,SAAA,IAAA,WAEAixC,EAAA,OAXA,GAAAC,GAAA19C,EAAAhD,QACA2gD,EAAA39C,EAAA9C,UACAT,EAAA,KAEAghD,EAAA,KACAD,EAAA,IAgBAG,GAAA14C,GAAA,gBAAA,WACAjF,EAAA,cAAA49C,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACAF,GACA99C,EAAA,WAAA89C,EAAA,MAAA7mC,YAAA,UAEA4mC,IACAL,EAAAx9C,EAAA,WAAA69C,EAAA,MAAA7mC,SAAA,UAEAymC,GACAznC,aAAAynC,GAIAA,EAAAl1C,WAAAg1C,EAAA,SAMA9gD,EAAAwI,GAAA,SAAA,WACAw4C,GACAznC,aAAAynC,KAMA,IAAAz9C,EAAA,QAAAhD,OAAA8P,SAAA0V,KAAAliB,QAAA,KAAA,IAAA,KAAA3C,SACAX,OAAAwoC,SAAA,KAQAmY,EAAA14C,GAAA,gBAAA,WACAjF,EAAA,WAAAi+C,eAOAj+C,EAAA,WACA,GAAAk+C,GAAAl+C,EAAA,cACA,IAAAk+C,EAAAvgD,OAAA,CAEA,GAAAwgD,GAAAn+C,EAAA,WACAo+C,EAAAD,EAAAxgD,OAAAwgD,EAAAE,cAAA,CAEAX,GACAz4C,GAAA,oBAAA,WACA,GAAAq5C,GAAAZ,EAAAhxC,OAEA,IAAA,IAAA4xC,EACAJ,EAAAv5C,IAAA,SAAA,QACA,CACA,GAAA6H,GAAAkxC,EAAAlxC,QACA0xC,GAAAv5C,IAAA,SAAA6H,EAAA4xC,MAGAluC,QAAA,wBAOA0hB,SAAA50B,OAAAuhD,WAAAvhD,OAAAuhD,aAAA,GACAv+C,EAAA,WACA,GAAAw+C,EACA/hD,GAAAuD,EAAA,YACA09C,EACAz4C,GAAA,mBAAA,WACAxI,EAAAwa,YAAA,SACAunC,EAAA/hD,EAAAwzB,SAAApzB,IACA6gD,EAAAxtC,QAAA,sBAEAjL,GAAA,mBAAA,WACA,GAAAw5C,GAAAf,EAAAlhC,WACA/f,GAAAya,YAAA,QAAAunC,GAAAD,KAEAtuC,QAAA,uBAIAxT;;AAmBA,SAAAsD,GAGA0+C,MAAA1+C,EAAA,aAEAA,EAAAoN,GAAAwwC,YAAA,SAAAnmC,EAAAoe,GAEA,mBAAAA,KACAA,EAAApe,EACAA,KAGA,IAAAknC,GAAA3+C,EAAAiK,MACA66B,EAAArtB,EAAAmL,QAAA5iB,EAAAhD,QAGA4hD,IACAD,GAAAxgD,KAAA,SAAAK,GACA,GAAAyxB,GAAAjwB,EAAAiK,MAAA4E,KAAA,sBACA8J,SAAA3Y,EAAAiK,MAAA4E,KAAA,sBAAA,IACA4I,EAAAwY,QAAA,CAEA2uB,GAAA16C,MACA6K,GAAA/O,EAAAiK,MAAA4E,KAAA,MACA2M,MAAAhd,EACAhC,GAAAyN,KACAgmB,OAAAA,KAKA,IAAA4uB,GAAA,KACAryC,EAAA,KACAsyC,EAAA,IA2CA,OAvCA9+C,GAAAhD,QAAAiI,GAAA,SAAA,WACAuH,EAAAs4B,EAAAt4B,SACAsyC,EAAA9+C,EAAA9C,UAAAsP,WAIAs4B,EAAA7/B,GAAA,SAAA,SAAAzH,GACA,GAAAyP,GAAA63B,EAAAtoB,WACAvP,IAAAT,GAAA,GAAA,GAAArH,KAAA45C,IAAA9xC,EAAA6xC,EAAA,GAEA,IAAAE,GAAA,IAEA,KAAA,GAAAxgD,KAAAogD,GACA,GAAAA,EAAA1xC,eAAA1O,GAAA,CACA,GAAAyxB,GAAA2uB,EAAApgD,EACAwB,GAAAiwB,EAAAzzB,IAAAyzB,SAAApzB,IAAAozB,EAAAA,OAAAhjB,IAAA+xC,EAAA/uB,IAIA+uB,GAAAH,GAAAG,EAAAxjC,QAAAqjC,EAAArjC,QACAqa,EAAA10B,KAAAw9C,EACAK,EAAAA,EAAAjwC,GAAA,KACA8vC,EAAAA,EAAA9vC,GAAA,KACAiwC,EAAAA,EAAAxiD,GAAA,KACAqiD,EAAAA,EAAAriD,GAAA,MACAqiD,EAAAG,EAIAhiD,OAAAiiD,QAAAC,WAAAliD,OAAAwoC,WAAA,GACAxoC,OAAAiiD,QAAAC,UAAA,KAAA,KAAA,KAAAL,EAAA9vC,GAAA8vC,EAAA9vC,GAAA,QAMA/O,EAAAhD,QAAAkT,QAAA,UACA40B,EAAA50B,QAAA,UAEAjG,OAGAvN;;AAqBA,SAAAsD,GACA,GAAA6lC,IACAjX,MAAA,IACAqB,OAAA,EACAlY,MAAA,KACA6K,OAAA,KAGA5iB,GAAAoN,GAAA6wC,WAAA,SAAAxmC,GASA,QAAA0nC,GAAA3hD,GACA,GAAA0mC,GAAAlkC,EAAAxC,EAAAid,QAAAoJ,QAAA,IACA,MAAArmB,EAAA4hD,SAAA5hD,EAAAqe,SAAAre,EAAA6hD,QAAAnb,EAAAr1B,KAAA,WAAA,CAEArR,EAAAod,gBACA,IAAAhC,GAAAsrB,EAAAr1B,KAAA,OAEA7O,GAAAi+C,WAAArlC,EAAAnB,IAfAA,EAAAzX,EAAAP,UAAAomC,EAAApuB,GAEAA,EAAA,OACAxN,KAAAhF,GAAA,QAAAwS,EAAA,OAAA0nC,GAEAl1C,KAAAhF,GAAA,QAAAk6C,IAeAn/C,EAAAi+C,WAAA,SAAArlC,EAAAnB,GACAA,EAAAzX,EAAAP,UAAAomC,EAAApuB,EAEA,IAAA5a,GAAA,CACA,IAAA,KAAA+b,EAAA,CACA,GAAA0mC,GAAAt/C,EAAA4Y,EAEA,IAAAnB,EAAAmL,OAAA,CACA,GAAAkiB,GAAAwa,EAAAz7B,QAAApM,EAAAmL,OACAkiB,GAAAnnC,SAAA2hD,EAAAxa,GAEA,IAAAwa,EAAA3hD,OAAA,MAGA,IAAAsyB,GACAqvB,EAAAzwC,KAAA,sBACA8J,SAAA2mC,EAAAzwC,KAAA,sBAAA,IACA4I,EAAAwY,MAEApzB,GAAAsI,KAAAC,IAAA,EAAAk6C,EAAArvB,SAAApzB,IAAAozB,GAGAjzB,OAAAwoC,SAAA,EACAxlC,EAAA,cAAA0uB,SAAAlS,UAAA3f,GAAA4a,EAAAmX,MAAA,WACA5xB,OAAAwoC,SAAA,IAEAxlC,EAAA,QAAAkQ,QAAA,SAAA0I,GAGA5b,OAAAiiD,QAAAC,WACAliD,OAAAiiD,QAAAC,WAAAtmC,KAAAA,GAAA,GAAAA,KAGAlc,SU7SA,SAAAk1B,GAOA,QAAAtlB,KACArC,KAAAs1C,WACAt1C,KAAAu1C,OACAC,EAAAt+C,KAAA8I,KAAAA,KAAAu1C,OAIA,QAAAC,GAAAC,GACAA,IAEAz1C,KAAAu1C,MAAAE,EAEAA,EAAA3kB,YAAA9wB,KAAA8wB,UAAA2kB,EAAA3kB,WACA2kB,EAAAC,eAAA11C,KAAAs1C,QAAAI,aAAAD,EAAAC,cACAD,EAAAE,WAAA31C,KAAA21C,SAAAF,EAAAE,UACAF,EAAAG,cAAA51C,KAAA41C,YAAAH,EAAAG,aAEA51C,KAAA21C,WACA31C,KAAA61C,kBAKA,QAAAC,GAAAL,GACAz1C,KAAAs1C,WACAt1C,KAAA41C,aAAA,EACAJ,EAAAt+C,KAAA8I,KAAAy1C,GAQA,QAAAM,GAAA9kC,EAAApd,EAAAmiD,EAAAzhD,GACA,IAAAyhD,EACA,QAEA,IAAAC,GAAAtkB,EAAA8G,EAAAyd,EAAAC,EAAAC,EAAAC,EAAAC,KACAC,EAAA1iD,EAAAH,OAAA8iD,EAAA3iD,EAAAU,GAAAkiD,EAAA5iD,EAAAU,EAAA,EACA,IAAAA,IAAAgiD,GAAAP,EAAAU,WAAA,CAKA,GAAA,kBAAAV,GAAAU,WAEA,MADAzlC,IAAAA,EAAAhX,KAAA+7C,EAAAU,aACAV,EAEA,KAAAC,EAAA,EAAAtkB,EAAAqkB,EAAAU,WAAAhjD,OAAAi+B,EAAAskB,EAAAA,IACAhlC,GAAAA,EAAAhX,KAAA+7C,EAAAU,WAAAT,GAEA,QAAAD,GAIA,GAAA,MAAAQ,GAAA,OAAAA,GAAAR,EAAAQ,GAAA,CAKA,GAAA,MAAAA,EAAA,CACA,IAAA/d,IAAAud,GACA,eAAAvd,GAAAud,EAAA/yC,eAAAw1B,KACA6d,EAAAA,EAAA1gD,OAAAmgD,EAAA9kC,EAAApd,EAAAmiD,EAAAvd,GAAAlkC,EAAA,IAGA,OAAA+hD,GACA,GAAA,OAAAE,EAAA,CACAH,EAAA9hD,EAAA,IAAAgiD,GAAAhiD,EAAA,IAAAgiD,GAAA,MAAAE,EACAJ,GAAAL,EAAAU,aAEAJ,EAAAA,EAAA1gD,OAAAmgD,EAAA9kC,EAAApd,EAAAmiD,EAAAO,IAGA,KAAA9d,IAAAud,GACA,eAAAvd,GAAAud,EAAA/yC,eAAAw1B,KACA,MAAAA,GAAA,OAAAA,GACAud,EAAAvd,GAAAie,aAAAL,IACAC,EAAAA,EAAA1gD,OAAAmgD,EAAA9kC,EAAApd,EAAAmiD,EAAAvd,GAAA8d,KAEAD,EAAAA,EAAA1gD,OAAAmgD,EAAA9kC,EAAApd,EAAAmiD,EAAAvd,GAAAlkC,KAEA+hD,EADA7d,IAAAge,EACAH,EAAA1gD,OAAAmgD,EAAA9kC,EAAApd,EAAAmiD,EAAAvd,GAAAlkC,EAAA,IAGA+hD,EAAA1gD,OAAAmgD,EAAA9kC,EAAApd,EAAAmiD,EAAAvd,GAAAlkC,IAIA,OAAA+hD,GAGAA,EAAAA,EAAA1gD,OAAAmgD,EAAA9kC,EAAApd,EAAAmiD,EAAAQ,GAAAjiD,EAAA,IAaA,GAVA2hD,EAAAF,EAAA,KACAE,GAKAH,EAAA9kC,EAAApd,EAAAqiD,EAAA3hD,EAAA,GAGA4hD,EAAAH,EAAA,MAEA,GAAAO,EAAAhiD,EAAA,CACA4hD,EAAAO,YAEAX,EAAA9kC,EAAApd,EAAAsiD,EAAAI,EAIA,KAAA9d,IAAA0d,GACA,eAAA1d,GAAA0d,EAAAlzC,eAAAw1B,KACAA,IAAAge,EAEAV,EAAA9kC,EAAApd,EAAAsiD,EAAA1d,GAAAlkC,EAAA,GACAkkC,IAAA+d,EAEAT,EAAA9kC,EAAApd,EAAAsiD,EAAA1d,GAAAlkC,EAAA,IAEA6hD,KACAA,EAAA3d,GAAA0d,EAAA1d,GACAsd,EAAA9kC,EAAApd,GAAA8iD,KAAAP,GAAA7hD,EAAA,SAIA4hD,GAAAO,WAEAX,EAAA9kC,EAAApd,EAAAsiD,EAAAI,GACAJ,EAAA,MAAAA,EAAA,KAAAO,YACAX,EAAA9kC,EAAApd,EAAAsiD,EAAA,KAAAI,EAIA,OAAAD,GAGA,QAAAM,GAAA/iD,EAAAgjD,GAEAhjD,EAAA,gBAAAA,GAAAA,EAAAiC,MAAAkK,KAAA8wB,WAAAj9B,EAAA0G,OAKA,KAAA,GAAAhG,GAAA,EAAAo9B,EAAA99B,EAAAH,OAAAi+B,EAAAp9B,EAAA,EAAAA,IACA,GAAA,OAAAV,EAAAU,IAAA,OAAAV,EAAAU,EAAA,GACA,MAOA,KAHA,GAAAyhD,GAAAh2C,KAAA61C,aACAnqC,EAAA7X,EAAA0J,QAEAmO,GAAA,CAQA,GANAsqC,EAAAtqC,KACAsqC,EAAAtqC,OAGAsqC,EAAAA,EAAAtqC,GAEA,IAAA7X,EAAAH,OAAA,CAEA,GAAAsiD,EAAAU,YAGA,GAAA,kBAAAV,GAAAU,WACAV,EAAAU,YAAAV,EAAAU,WAAAG,OAEA,IAAAlhD,EAAAqgD,EAAAU,cAEAV,EAAAU,WAAAz8C,KAAA48C,IAEAb,EAAAU,WAAAI,QAAA,CAEA,GAAA51C,GAAA61C,CAEA,oBAAA/2C,MAAAs1C,QAAAI,eACAx0C,EAAAlB,KAAAs1C,QAAAI,cAGAx0C,EAAA,GAAA80C,EAAAU,WAAAhjD,OAAAwN,IAEA80C,EAAAU,WAAAI,QAAA,EACA1b,QAAAp9B,MAAA,mIAGAg4C,EAAAU,WAAAhjD,QACA0nC,QAAA4b,OACA5b,QAAA4b,cAzBAhB,GAAAU,WAAAG,CA8BA,QAAA,EAEAnrC,EAAA7X,EAAA0J,QAEA,OAAA,EA9MA,GAAA5H,GAAAwQ,MAAAxQ,QAAAwQ,MAAAxQ,QAAA,SAAA+7B,GACA,MAAA,mBAAAtqB,OAAAhF,UAAAW,SAAA7L,KAAAw6B,IAEAqlB,EAAA,EAqNAjB,GAAA1zC,UAAA0uB,UAAA,IAEAglB,EAAA1zC,UAAA60C,gBAAA,SAAAtjD,GACAqM,KAAAs1C,SAAAjzC,EAAAnL,KAAA8I,MACAA,KAAAs1C,QAAAI,aAAA/hD,EACAqM,KAAAu1C,QAAAv1C,KAAAu1C,UACAv1C,KAAAu1C,MAAAG,aAAA/hD,GAGAmiD,EAAA1zC,UAAAzJ,MAAA,GAEAm9C,EAAA1zC,UAAAyF,KAAA,SAAAlP,EAAAwK,GAEA,MADAnD,MAAAk3C,KAAAv+C,EAAA,EAAAwK,GACAnD,MAGA81C,EAAA1zC,UAAA80C,KAAA,SAAAv+C,EAAAw+C,EAAAh0C,GAOA,QAAA0zC,KACA,MAAAM,GACAnrB,EAAA9lB,IAAAvN,EAAAk+C,GAEA1zC,EAAAoC,MAAAvF,KAAAwF,WAVA,GAAAwmB,GAAAhsB,IAEA,IAAA,kBAAAmD,GACA,KAAA,IAAAoD,OAAA,0CAcA,OAJAswC,GAAAO,QAAAj0C,EAEAnD,KAAAhF,GAAArC,EAAAk+C,GAEA7qB,GAGA8pB,EAAA1zC,UAAAi1C,KAAA,WAEAr3C,KAAAs1C,SAAAjzC,EAAAnL,KAAA8I,KAEA,IAAAnM,GAAA2R,UAAA,EAEA,IAAA,gBAAA3R,IAAAmM,KAAA41C,cACA51C,KAAAs1C,QAAAM,YAAA,OAAA,CAIA,IAAA51C,KAAAs3C,KAAA,CAGA,IAAA,GAFAxiD,GAAA0Q,UAAA9R,OACA6jD,EAAA,GAAApxC,OAAArR,EAAA,GACAP,EAAA,EAAAO,EAAAP,EAAAA,IAAAgjD,EAAAhjD,EAAA,GAAAiR,UAAAjR,EACA,KAAAA,EAAA,EAAAO,EAAAkL,KAAAs3C,KAAA5jD,OAAAoB,EAAAP,EAAAA,IACAyL,KAAArH,MAAA9E,EACAmM,KAAAs3C,KAAA/iD,GAAAgR,MAAAvF,KAAAu3C,GAKA,GAAA,UAAA1jD,KAEAmM,KAAAs3C,MACAt3C,KAAAs1C,QAAAt3C,OACAgC,KAAA21C,UAAA31C,KAAA61C,aAAA73C,OAEA,KAAAwH,WAAA,YAAAe,OACAf,UAAA,GAEA,GAAAe,OAAA,uCAMA,IAAA8I,EAEA,IAAArP,KAAA21C,SAAA,CACAtmC,IACA,IAAAmoC,GAAA,gBAAA3jD,GAAAA,EAAAiC,MAAAkK,KAAA8wB,WAAAj9B,EAAA0G,OACAw7C,GAAA7+C,KAAA8I,KAAAqP,EAAAmoC,EAAAx3C,KAAA61C,aAAA,OAGAxmC,GAAArP,KAAAs1C,QAAAzhD,EAGA,IAAA,kBAAAwb,GAAA,CAEA,GADArP,KAAArH,MAAA9E,EACA,IAAA2R,UAAA9R,OACA2b,EAAAnY,KAAA8I,UAEA,IAAAwF,UAAA9R,OAAA,EACA,OAAA8R,UAAA9R,QACA,IAAA,GACA2b,EAAAnY,KAAA8I,KAAAwF,UAAA,GACA,MACA,KAAA,GACA6J,EAAAnY,KAAA8I,KAAAwF,UAAA,GAAAA,UAAA,GACA,MAEA,SAGA,IAAA,GAFA1Q,GAAA0Q,UAAA9R,OACA6jD,EAAA,GAAApxC,OAAArR,EAAA,GACAP,EAAA,EAAAO,EAAAP,EAAAA,IAAAgjD,EAAAhjD,EAAA,GAAAiR,UAAAjR,EACA8a,GAAA9J,MAAAvF,KAAAu3C,GAEA,OAAA,EAEA,GAAAloC,EAAA,CAGA,IAAA,GAFAva,GAAA0Q,UAAA9R,OACA6jD,EAAA,GAAApxC,OAAArR,EAAA,GACAP,EAAA,EAAAO,EAAAP,EAAAA,IAAAgjD,EAAAhjD,EAAA,GAAAiR,UAAAjR,EAGA,KAAA,GADA+hD,GAAAjnC,EAAA9U,QACAhG,EAAA,EAAAO,EAAAwhD,EAAA5iD,OAAAoB,EAAAP,EAAAA,IACAyL,KAAArH,MAAA9E,EACAyiD,EAAA/hD,GAAAgR,MAAAvF,KAAAu3C,EAEA,OAAAjB,GAAA5iD,OAAA,KAAAsM,KAAAs3C,KAGA,QAAAt3C,KAAAs3C,MAKAxB,EAAA1zC,UAAApH,GAAA,SAAAnH,EAAAgjD,GAEA,GAAA,kBAAAhjD,GAEA,MADAmM,MAAAy3C,MAAA5jD,GACAmM,IAGA,IAAA,kBAAA62C,GACA,KAAA,IAAAtwC,OAAA,wCAQA,IANAvG,KAAAs1C,SAAAjzC,EAAAnL,KAAA8I,MAIAA,KAAAq3C,KAAA,cAAAxjD,EAAAgjD,GAEA72C,KAAA21C,SAEA,MADAiB,GAAA1/C,KAAA8I,KAAAnM,EAAAgjD,GACA72C,IAGA,IAAAA,KAAAs1C,QAAAzhD,IAIA,GAAA,kBAAAmM,MAAAs1C,QAAAzhD,GAEAmM,KAAAs1C,QAAAzhD,IAAAmM,KAAAs1C,QAAAzhD,GAAAgjD,OAEA,IAAAlhD,EAAAqK,KAAAs1C,QAAAzhD,MAEAmM,KAAAs1C,QAAAzhD,GAAAoG,KAAA48C,IAGA72C,KAAAs1C,QAAAzhD,GAAAijD,QAAA,CAEA,GAAA51C,GAAA61C,CAEA,oBAAA/2C,MAAAs1C,QAAAI,eACAx0C,EAAAlB,KAAAs1C,QAAAI,cAGAx0C,EAAA,GAAAlB,KAAAs1C,QAAAzhD,GAAAH,OAAAwN,IAEAlB,KAAAs1C,QAAAzhD,GAAAijD,QAAA,EACA1b,QAAAp9B,MAAA,mIAGAgC,KAAAs1C,QAAAzhD,GAAAH,QACA0nC,QAAA4b,OACA5b,QAAA4b,cA3BAh3C,MAAAs1C,QAAAzhD,GAAAgjD,CAgCA,OAAA72C,OAGA81C,EAAA1zC,UAAAq1C,MAAA,SAAAt0C,GAEA,GAAA,kBAAAA,GACA,KAAA,IAAAoD,OAAA,2CASA,OANAvG,MAAAs3C,OACAt3C,KAAAs3C,SAIAt3C,KAAAs3C,KAAAr9C,KAAAkJ,GACAnD,MAGA81C,EAAA1zC,UAAAs1C,YAAA5B,EAAA1zC,UAAApH,GAEA86C,EAAA1zC,UAAA8D,IAAA,SAAArS,EAAAgjD,GAmEA,QAAAc,GAAAn/B,GACA,GAAAA,IAAAmP,EAAA,CAGA,GAAAiwB,GAAAxwC,OAAAwwC,KAAAp/B,EACA,KAAA,GAAAjkB,KAAAqjD,GAAA,CACA,GAAA9jB,GAAA8jB,EAAArjD,GACAm9B,EAAAlZ,EAAAsb,EACApC,aAAA/qB,WAAA,gBAAA+qB,KAEAtqB,OAAAwwC,KAAAlmB,GAAAh+B,OAAA,GACAikD,EAAAn/B,EAAAsb,IAEA,IAAA1sB,OAAAwwC,KAAAlmB,GAAAh+B,cACA8kB,GAAAsb,MAhFA,GAAA,kBAAA+iB,GACA,KAAA,IAAAtwC,OAAA,kDAGA,IAAA0K,GAAA4mC,IAEA,IAAA73C,KAAA21C,SAAA,CACA,GAAA6B,GAAA,gBAAA3jD,GAAAA,EAAAiC,MAAAkK,KAAA8wB,WAAAj9B,EAAA0G,OACAs9C,GAAA9B,EAAA7+C,KAAA8I,KAAA,KAAAw3C,EAAAx3C,KAAA61C,aAAA,OAEA,CAEA,IAAA71C,KAAAs1C,QAAAzhD,GAAA,MAAAmM,KACAiR,GAAAjR,KAAAs1C,QAAAzhD,GACAgkD,EAAA59C,MAAAy8C,WAAAzlC,IAGA,IAAA,GAAA6mC,GAAA,EAAAA,EAAAD,EAAAnkD,OAAAokD,IAAA,CACA,GAAA7B,GAAA4B,EAAAC,EAEA,IADA7mC,EAAAglC,EAAAS,WACA/gD,EAAAsb,GAAA,CAIA,IAAA,GAFAoM,GAAA,GAEA9oB,EAAA,EAAAb,EAAAud,EAAAvd,OAAAA,EAAAa,EAAAA,IACA,GAAA0c,EAAA1c,KAAAsiD,GACA5lC,EAAA1c,GAAAsiD,UAAA5lC,EAAA1c,GAAAsiD,WAAAA,GACA5lC,EAAA1c,GAAA6iD,SAAAnmC,EAAA1c,GAAA6iD,UAAAP,EAAA,CACAx5B,EAAA9oB,CACA,OAIA,GAAA,EAAA8oB,EACA,QAkBA,OAfArd,MAAA21C,SACAM,EAAAS,WAAA54C,OAAAuf,EAAA,GAGArd,KAAAs1C,QAAAzhD,GAAAiK,OAAAuf,EAAA,GAGA,IAAApM,EAAAvd,SACAsM,KAAA21C,eACAM,GAAAS,iBAGA12C,MAAAs1C,QAAAzhD,IAGAmM,MAEAiR,IAAA4lC,GACA5lC,EAAA4lC,UAAA5lC,EAAA4lC,WAAAA,GACA5lC,EAAAmmC,SAAAnmC,EAAAmmC,UAAAP,KACA72C,KAAA21C,eACAM,GAAAS,iBAGA12C,MAAAs1C,QAAAzhD,IAyBA,MAFA8jD,GAAA33C,KAAA61C,cAEA71C,MAGA81C,EAAA1zC,UAAA21C,OAAA,SAAA50C,GACA,GAAA60C,GAAAzjD,EAAA,EAAAO,EAAA,CACA,IAAAqO,GAAAnD,KAAAs3C,MAAAt3C,KAAAs3C,KAAA5jD,OAAA,GAEA,IADAskD,EAAAh4C,KAAAs3C,KACA/iD,EAAA,EAAAO,EAAAkjD,EAAAtkD,OAAAoB,EAAAP,EAAAA,IACA,GAAA4O,IAAA60C,EAAAzjD,GAEA,MADAyjD,GAAAl6C,OAAAvJ,EAAA,GACAyL,SAIAA,MAAAs3C,OAEA,OAAAt3C,OAGA81C,EAAA1zC,UAAA61C,eAAAnC,EAAA1zC,UAAA8D,IAEA4vC,EAAA1zC,UAAA81C,mBAAA,SAAArkD,GACA,GAAA,IAAA2R,UAAA9R,OAEA,OADAsM,KAAAs1C,SAAAjzC,EAAAnL,KAAA8I,MACAA,IAGA,IAAAA,KAAA21C,SAIA,IAAA,GAHA6B,GAAA,gBAAA3jD,GAAAA,EAAAiC,MAAAkK,KAAA8wB,WAAAj9B,EAAA0G,QACAs9C,EAAA9B,EAAA7+C,KAAA8I,KAAA,KAAAw3C,EAAAx3C,KAAA61C,aAAA,GAEAiC,EAAA,EAAAA,EAAAD,EAAAnkD,OAAAokD,IAAA,CACA,GAAA7B,GAAA4B,EAAAC,EACA7B,GAAAS,WAAA,SAGA,CACA,IAAA12C,KAAAs1C,QAAAzhD,GAAA,MAAAmM,KACAA,MAAAs1C,QAAAzhD,GAAA,KAEA,MAAAmM,OAGA81C,EAAA1zC,UAAAk0C,UAAA,SAAAziD,GACA,GAAAmM,KAAA21C,SAAA,CACA,GAAA1kC,MACAumC,EAAA,gBAAA3jD,GAAAA,EAAAiC,MAAAkK,KAAA8wB,WAAAj9B,EAAA0G,OAEA,OADAw7C,GAAA7+C,KAAA8I,KAAAiR,EAAAumC,EAAAx3C,KAAA61C,aAAA,GACA5kC,EASA,MANAjR,MAAAs1C,SAAAjzC,EAAAnL,KAAA8I,MAEAA,KAAAs1C,QAAAzhD,KAAAmM,KAAAs1C,QAAAzhD,OACA8B,EAAAqK,KAAAs1C,QAAAzhD,MACAmM,KAAAs1C,QAAAzhD,IAAAmM,KAAAs1C,QAAAzhD,KAEAmM,KAAAs1C,QAAAzhD,IAGAiiD,EAAA1zC,UAAA+1C,aAAA,WAEA,MAAAn4C,MAAAs3C,KACAt3C,KAAAs3C,SAQA,kBAAA3wB,SAAAA,OAAAC,IAEAD,OAAA,WACA,MAAAmvB,KAEA,gBAAA3nB,SAEAA,QAAAiqB,cAAAtC,EAIA/iD,OAAAqlD,cAAAtC","file":"docs-build.min.js","sourcesContent":["\nfunction isElementInViewport (el, $sidebar) {\n\n    //special bonus for those using jQuery\n    if (typeof jQuery === \"function\" && el instanceof jQuery) {\n        el = el[0];\n    }\n\n    var rect = el.getBoundingClientRect();\n\n    return (\n        rect.top >= 0 &&\n        rect.left >= 0 &&\n        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && /*or $(window).height() */\n        rect.right <= (window.innerWidth || document.documentElement.clientWidth) /*or $(window).width() */\n    );\n}\n\n(function($) {\n    var $window = $(window);\n    var $document = $(document);\n    var $sidebar = null;\n    //var animating = false;\n    var sidebarCatchup = null,\n        sidebarCatchupEl = null;\n\n    function putSideBarHeaderIntoView() {\n        if ($sidebar && !isElementInViewport(sidebarCatchupEl, $sidebar) && $sidebar.hasClass('fixed')) {\n            $sidebar.animate({scrollTop: $sidebar.scrollTop() + (sidebarCatchupEl.position().top - ($(window).height() / 2)) }, function () {\n                //animating = false;\n                sidebarCatchup = null;\n            });\n        }\n    }\n\n\n    /*\n     * Scrollspy.\n     */\n\n    $document.on('flatdoc:ready', function() {\n        $(\"h1, h2, h3\").scrollagent(function(cid, pid, currentElement, previousElement) {\n            if (pid) {\n                $(\"[href='#\"+pid+\"']\").removeClass('active');\n            }\n            if (cid) {\n                sidebarCatchupEl = $(\"[href='#\"+cid+\"']\").addClass('active');\n\n                if (sidebarCatchup) {\n                    clearTimeout(sidebarCatchup);\n                }\n\n                // Make sure the outline element is in view if\n                sidebarCatchup = setTimeout(putSideBarHeaderIntoView, 1250);\n\n            }\n        });\n\n        // if you're scrolling the sidebar, and move the page as result, then don't jump around all weird\n        $sidebar.on('scroll', function() {\n            if (sidebarCatchup) {\n                clearTimeout(sidebarCatchup);\n            }\n            //console.log('currentTop', $sidebar.scrollTop())\n        });\n\n        // If that anchor is crap, we're not jumping\n        if ($('*[id='+window.location.hash.replace(/^#/, '')+']').length === 0) {\n            window.jumping = false;\n        }\n    });\n\n    /*\n     * Anchor jump links.\n     */\n\n    $document.on('flatdoc:ready', function() {\n        $('.menu a').anchorjump();\n    });\n\n    /*\n     * Title card.\n     */\n\n    $(function() {\n        var $card = $('.title-card');\n        if (!$card.length) return;\n\n        var $header = $('.header');\n        var headerHeight = $header.length ? $header.outerHeight() : 0;\n\n        $window\n            .on('resize.title-card', function() {\n                var windowWidth = $window.width();\n\n                if (windowWidth < 480) {\n                    $card.css('height', '');\n                } else {\n                    var height = $window.height();\n                    $card.css('height', height - headerHeight);\n                }\n            })\n            .trigger('resize.title-card');\n    });\n\n    /*\n     * Sidebar stick.\n     */\n\n    if (window.sideStick === undefined || window.sideStick === true) {\n        $(function () {\n            var elTop;\n            $sidebar = $('.menubar');\n            $window\n                .on('resize.sidestick', function () {\n                    $sidebar.removeClass('fixed');\n                    elTop = $sidebar.offset().top;\n                    $window.trigger('scroll.sidestick');\n                })\n                .on('scroll.sidestick', function () {\n                    var scrollY = $window.scrollTop();\n                    $sidebar.toggleClass('fixed', (scrollY >= elTop));\n                })\n                .trigger('resize.sidestick');\n        });\n    }\n\n})(jQuery);\n/*! jQuery.scrollagent (c) 2012, Rico Sta. Cruz. MIT License.\n *  https://github.com/rstacruz/jquery-stuff/tree/master/scrollagent */\n\n// Call $(...).scrollagent() with a callback function.\n//\n// The callback will be called everytime the focus changes.\n//\n// Example:\n//\n//      $(\"h2\").scrollagent(function(cid, pid, currentElement, previousElement) {\n//        if (pid) {\n//          $(\"[href='#\"+pid+\"']\").removeClass('active');\n//        }\n//        if (cid) {\n//          $(\"[href='#\"+cid+\"']\").addClass('active');\n//        }\n//      });\n\n(function($) {\n\n\n    $body = $('html,body');\n\n    $.fn.scrollagent = function(options, callback) {\n        // Account for $.scrollspy(function)\n        if (typeof callback === 'undefined') {\n            callback = options;\n            options = {};\n        }\n\n        var $sections = $(this);\n        var $parent = options.parent || $(window);\n\n        // Find the top offsets of each section\n        var offsets = [];\n        $sections.each(function(i) {\n            var offset = $(this).attr('data-anchor-offset') ?\n                parseInt($(this).attr('data-anchor-offset'), 10) :\n                (options.offset || 0);\n\n            offsets.push({\n                id: $(this).attr('id'),\n                index: i,\n                el: this,\n                offset: offset\n            });\n        });\n\n        // State\n        var current = null;\n        var height = null;\n        var range = null;\n\n        // Save the height. Do this only whenever the window is resized so we don't\n        // recalculate often.\n        $(window).on('resize', function() {\n            height = $parent.height();\n            range = $(document).height();\n        });\n\n        // Find the current active section every scroll tick.\n        $parent.on('scroll', function(e) {\n            var y = $parent.scrollTop();\n            y += height * (0.3 + 0.7 * Math.pow(y/range, 2));\n\n            var latest = null;\n\n            for (var i in offsets) {\n                if (offsets.hasOwnProperty(i)) {\n                    var offset = offsets[i];\n                    if ($(offset.el).offset().top + offset.offset < y) latest = offset;\n                }\n            }\n\n            if (latest && (!current || (latest.index !== current.index))) {\n                callback.call($sections,\n                    latest ? latest.id : null,\n                    current ? current.id : null,\n                    latest ? latest.el : null,\n                    current ? current.el : null);\n                current = latest;\n\n\n\n                if (window.history.pushState && window.jumping === false) {\n                    window.history.pushState(null,null,'#'+(current.id ? current.id : ''));\n                }\n\n            }\n        });\n\n        $(window).trigger('resize');\n        $parent.trigger('scroll');\n\n        return this;\n    };\n\n})(jQuery);\n/*! Anchorjump (c) 2012, Rico Sta. Cruz. MIT License.\n *   http://github.com/rstacruz/jquery-stuff/tree/master/anchorjump */\n\n// Makes anchor jumps happen with smooth scrolling.\n//\n//    $(\"#menu a\").anchorjump();\n//    $(\"#menu a\").anchorjump({ offset: -30 });\n//\n//    // Via delegate:\n//    $(\"#menu\").anchorjump({ for: 'a', offset: -30 });\n//\n// You may specify a parent. This makes it scroll down to the parent.\n// Great for tabbed views.\n//\n//     $('#menu a').anchorjump({ parent: '.anchor' });\n//\n// You can jump to a given area.\n//\n//     $.anchorjump('#bank-deposit', options);\n\n(function($) {\n    var defaults = {\n        'speed': 500,\n        'offset': 0,\n        'for': null,\n        'parent': null\n    };\n\n    $.fn.anchorjump = function(options) {\n        options = $.extend({}, defaults, options);\n\n        if (options['for']) {\n            this.on('click', options['for'], onClick);\n        } else {\n            this.on('click', onClick);\n        }\n\n        function onClick(e) {\n            var $a = $(e.target).closest('a');\n            if (e.ctrlKey || e.metaKey || e.altKey || $a.attr('target')) return;\n\n            e.preventDefault();\n            var href = $a.attr('href');\n\n            $.anchorjump(href, options);\n        }\n    };\n\n    // Jump to a given area.\n    $.anchorjump = function(href, options) {\n        options = $.extend({}, defaults, options);\n\n        var top = 0;\n        if (href != '#') {\n            var $area = $(href);\n            // Find the parent\n            if (options.parent) {\n                var $parent = $area.closest(options.parent);\n                if ($parent.length) { $area = $parent; }\n            }\n            if (!$area.length) { return; }\n\n            // Determine the pixel offset; use the default if not available\n            var offset =\n                $area.attr('data-anchor-offset') ?\n                    parseInt($area.attr('data-anchor-offset'), 10) :\n                    options.offset;\n\n            top = Math.max(0, $area.offset().top + offset);\n        }\n\n        window.jumping = true;\n        $('html, body').animate({ scrollTop: top }, options.speed, function() {\n            window.jumping = false;\n        });\n        $('body').trigger('anchor', href);\n\n        // Add the location hash via pushState.\n        if (window.history.pushState) {\n            window.history.pushState({ href: href }, \"\", href);\n        }\n    };\n})(jQuery);","/*! jQuery v1.9.1 | (c) 2005, 2012 jQuery Foundation, Inc. | jquery.org/license\n //@ sourceMappingURL=jquery.min.map\n */(function(e,t){var n,r,i=typeof t,o=e.document,a=e.location,s=e.jQuery,u=e.$,l={},c=[],p=\"1.9.1\",f=c.concat,d=c.push,h=c.slice,g=c.indexOf,m=l.toString,y=l.hasOwnProperty,v=p.trim,b=function(e,t){return new b.fn.init(e,t,r)},x=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,w=/\\S+/g,T=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,N=/^(?:(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,C=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,k=/^[\\],:{}\\s]*$/,E=/(?:^|:|,)(?:\\s*\\[)+/g,S=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,A=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,j=/^-ms-/,D=/-([\\da-z])/gi,L=function(e,t){return t.toUpperCase()},H=function(e){(o.addEventListener||\"load\"===e.type||\"complete\"===o.readyState)&&(q(),b.ready())},q=function(){o.addEventListener?(o.removeEventListener(\"DOMContentLoaded\",H,!1),e.removeEventListener(\"load\",H,!1)):(o.detachEvent(\"onreadystatechange\",H),e.detachEvent(\"onload\",H))};b.fn=b.prototype={jquery:p,constructor:b,init:function(e,n,r){var i,a;if(!e)return this;if(\"string\"==typeof e){if(i=\"<\"===e.charAt(0)&&\">\"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof b?n[0]:n,b.merge(this,b.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:o,!0)),C.test(i[1])&&b.isPlainObject(n))for(i in n)b.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(a=o.getElementById(i[2]),a&&a.parentNode){if(a.id!==i[2])return r.find(e);this.length=1,this[0]=a}return this.context=o,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):b.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),b.makeArray(e,this))},selector:\"\",length:0,size:function(){return this.length},toArray:function(){return h.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=b.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return b.each(this,e,t)},ready:function(e){return b.ready.promise().done(e),this},slice:function(){return this.pushStack(h.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(b.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:d,sort:[].sort,splice:[].splice},b.fn.init.prototype=b.fn,b.extend=b.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},u=1,l=arguments.length,c=!1;for(\"boolean\"==typeof s&&(c=s,s=arguments[1]||{},u=2),\"object\"==typeof s||b.isFunction(s)||(s={}),l===u&&(s=this,--u);l>u;u++)if(null!=(o=arguments[u]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(b.isPlainObject(r)||(n=b.isArray(r)))?(n?(n=!1,a=e&&b.isArray(e)?e:[]):a=e&&b.isPlainObject(e)?e:{},s[i]=b.extend(c,a,r)):r!==t&&(s[i]=r));return s},b.extend({noConflict:function(t){return e.$===b&&(e.$=u),t&&e.jQuery===b&&(e.jQuery=s),b},isReady:!1,readyWait:1,holdReady:function(e){e?b.readyWait++:b.ready(!0)},ready:function(e){if(e===!0?!--b.readyWait:!b.isReady){if(!o.body)return setTimeout(b.ready);b.isReady=!0,e!==!0&&--b.readyWait>0||(n.resolveWith(o,[b]),b.fn.trigger&&b(o).trigger(\"ready\").off(\"ready\"))}},isFunction:function(e){return\"function\"===b.type(e)},isArray:Array.isArray||function(e){return\"array\"===b.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?l[m.call(e)]||\"object\":typeof e},isPlainObject:function(e){if(!e||\"object\"!==b.type(e)||e.nodeType||b.isWindow(e))return!1;try{if(e.constructor&&!y.call(e,\"constructor\")&&!y.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(n){return!1}var r;for(r in e);return r===t||y.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||\"string\"!=typeof e)return null;\"boolean\"==typeof t&&(n=t,t=!1),t=t||o;var r=C.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=b.buildFragment([e],t,i),i&&b(i).remove(),b.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:\"string\"==typeof n&&(n=b.trim(n),n&&k.test(n.replace(S,\"@\").replace(A,\"]\").replace(E,\"\")))?Function(\"return \"+n)():(b.error(\"Invalid JSON: \"+n),t)},parseXML:function(n){var r,i;if(!n||\"string\"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,\"text/xml\")):(r=new ActiveXObject(\"Microsoft.XMLDOM\"),r.async=\"false\",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName(\"parsererror\").length||b.error(\"Invalid XML: \"+n),r},noop:function(){},globalEval:function(t){t&&b.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(j,\"ms-\").replace(D,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:v&&!v.call(\"\\ufeff\\u00a0\")?function(e){return null==e?\"\":v.call(e)}:function(e){return null==e?\"\":(e+\"\").replace(T,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?b.merge(n,\"string\"==typeof e?[e]:e):d.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(g)return g.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if(\"number\"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return f.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return\"string\"==typeof n&&(o=e[n],n=e,e=o),b.isFunction(e)?(r=h.call(arguments,2),i=function(){return e.apply(n||this,r.concat(h.call(arguments)))},i.guid=e.guid=e.guid||b.guid++,i):t},access:function(e,n,r,i,o,a,s){var u=0,l=e.length,c=null==r;if(\"object\"===b.type(r)){o=!0;for(u in r)b.access(e,n,u,r[u],!0,a,s)}else if(i!==t&&(o=!0,b.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(b(e),n)})),n))for(;l>u;u++)n(e[u],r,s?i:i.call(e[u],u,n(e[u],r)));return o?e:c?n.call(e):l?n(e[0],r):a},now:function(){return(new Date).getTime()}}),b.ready.promise=function(t){if(!n)if(n=b.Deferred(),\"complete\"===o.readyState)setTimeout(b.ready);else if(o.addEventListener)o.addEventListener(\"DOMContentLoaded\",H,!1),e.addEventListener(\"load\",H,!1);else{o.attachEvent(\"onreadystatechange\",H),e.attachEvent(\"onload\",H);var r=!1;try{r=null==e.frameElement&&o.documentElement}catch(i){}r&&r.doScroll&&function a(){if(!b.isReady){try{r.doScroll(\"left\")}catch(e){return setTimeout(a,50)}q(),b.ready()}}()}return n.promise(t)},b.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(e,t){l[\"[object \"+t+\"]\"]=t.toLowerCase()});function M(e){var t=e.length,n=b.type(e);return b.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===n||\"function\"!==n&&(0===t||\"number\"==typeof t&&t>0&&t-1 in e)}r=b(o);var _={};function F(e){var t=_[e]={};return b.each(e.match(w)||[],function(e,n){t[n]=!0}),t}b.Callbacks=function(e){e=\"string\"==typeof e?_[e]||F(e):b.extend({},e);var n,r,i,o,a,s,u=[],l=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=u.length,n=!0;u&&o>a;a++)if(u[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,u&&(l?l.length&&c(l.shift()):r?u=[]:p.disable())},p={add:function(){if(u){var t=u.length;(function i(t){b.each(t,function(t,n){var r=b.type(n);\"function\"===r?e.unique&&p.has(n)||u.push(n):n&&n.length&&\"string\"!==r&&i(n)})})(arguments),n?o=u.length:r&&(s=t,c(r))}return this},remove:function(){return u&&b.each(arguments,function(e,t){var r;while((r=b.inArray(t,u,r))>-1)u.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?b.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return u=[],this},disable:function(){return u=l=r=t,this},disabled:function(){return!u},lock:function(){return l=t,r||p.disable(),this},locked:function(){return!l},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],!u||i&&!l||(n?l.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},b.extend({Deferred:function(e){var t=[[\"resolve\",\"done\",b.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",b.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",b.Callbacks(\"memory\")]],n=\"pending\",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return b.Deferred(function(n){b.each(t,function(t,o){var a=o[0],s=b.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&b.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+\"With\"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?b.extend(e,r):r}},i={};return r.pipe=r.then,b.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+\"With\"](this===i?r:this,arguments),this},i[o[0]+\"With\"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=h.call(arguments),r=n.length,i=1!==r||e&&b.isFunction(e.promise)?r:0,o=1===i?e:b.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?h.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,u,l;if(r>1)for(s=Array(r),u=Array(r),l=Array(r);r>t;t++)n[t]&&b.isFunction(n[t].promise)?n[t].promise().done(a(t,l,n)).fail(o.reject).progress(a(t,u,s)):--i;return i||o.resolveWith(l,n),o.promise()}}),b.support=function(){var t,n,r,a,s,u,l,c,p,f,d=o.createElement(\"div\");if(d.setAttribute(\"className\",\"t\"),d.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",n=d.getElementsByTagName(\"*\"),r=d.getElementsByTagName(\"a\")[0],!n||!r||!n.length)return{};s=o.createElement(\"select\"),l=s.appendChild(o.createElement(\"option\")),a=d.getElementsByTagName(\"input\")[0],r.style.cssText=\"top:1px;float:left;opacity:.5\",t={getSetAttribute:\"t\"!==d.className,leadingWhitespace:3===d.firstChild.nodeType,tbody:!d.getElementsByTagName(\"tbody\").length,htmlSerialize:!!d.getElementsByTagName(\"link\").length,style:/top/.test(r.getAttribute(\"style\")),hrefNormalized:\"/a\"===r.getAttribute(\"href\"),opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:!!a.value,optSelected:l.selected,enctype:!!o.createElement(\"form\").enctype,html5Clone:\"<:nav></:nav>\"!==o.createElement(\"nav\").cloneNode(!0).outerHTML,boxModel:\"CSS1Compat\"===o.compatMode,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},a.checked=!0,t.noCloneChecked=a.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!l.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}a=o.createElement(\"input\"),a.setAttribute(\"value\",\"\"),t.input=\"\"===a.getAttribute(\"value\"),a.value=\"t\",a.setAttribute(\"type\",\"radio\"),t.radioValue=\"t\"===a.value,a.setAttribute(\"checked\",\"t\"),a.setAttribute(\"name\",\"t\"),u=o.createDocumentFragment(),u.appendChild(a),t.appendChecked=a.checked,t.checkClone=u.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent(\"onclick\",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c=\"on\"+f,\"t\"),t[f+\"Bubbles\"]=c in e||d.attributes[c].expando===!1;return d.style.backgroundClip=\"content-box\",d.cloneNode(!0).style.backgroundClip=\"\",t.clearCloneStyle=\"content-box\"===d.style.backgroundClip,b(function(){var n,r,a,s=\"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",u=o.getElementsByTagName(\"body\")[0];u&&(n=o.createElement(\"div\"),n.style.cssText=\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\",u.appendChild(n).appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",a=d.getElementsByTagName(\"td\"),a[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",p=0===a[0].offsetHeight,a[0].style.display=\"\",a[1].style.display=\"none\",t.reliableHiddenOffsets=p&&0===a[0].offsetHeight,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",t.boxSizing=4===d.offsetWidth,t.doesNotIncludeMarginInBodyOffset=1!==u.offsetTop,e.getComputedStyle&&(t.pixelPosition=\"1%\"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable=\"4px\"===(e.getComputedStyle(d,null)||{width:\"4px\"}).width,r=d.appendChild(o.createElement(\"div\")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width=\"0\",d.style.width=\"1px\",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML=\"\",d.style.cssText=s+\"width:1px;padding:1px;display:inline;zoom:1\",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display=\"block\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(u.style.zoom=1)),u.removeChild(n),n=d=a=r=null)}),n=s=u=l=r=a=null,t}();var O=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,B=/([A-Z])/g;function P(e,n,r,i){if(b.acceptData(e)){var o,a,s=b.expando,u=\"string\"==typeof n,l=e.nodeType,p=l?b.cache:e,f=l?e[s]:e[s]&&s;if(f&&p[f]&&(i||p[f].data)||!u||r!==t)return f||(l?e[s]=f=c.pop()||b.guid++:f=s),p[f]||(p[f]={},l||(p[f].toJSON=b.noop)),(\"object\"==typeof n||\"function\"==typeof n)&&(i?p[f]=b.extend(p[f],n):p[f].data=b.extend(p[f].data,n)),o=p[f],i||(o.data||(o.data={}),o=o.data),r!==t&&(o[b.camelCase(n)]=r),u?(a=o[n],null==a&&(a=o[b.camelCase(n)])):a=o,a}}function R(e,t,n){if(b.acceptData(e)){var r,i,o,a=e.nodeType,s=a?b.cache:e,u=a?e[b.expando]:b.expando;if(s[u]){if(t&&(o=n?s[u]:s[u].data)){b.isArray(t)?t=t.concat(b.map(t,b.camelCase)):t in o?t=[t]:(t=b.camelCase(t),t=t in o?[t]:t.split(\" \"));for(r=0,i=t.length;i>r;r++)delete o[t[r]];if(!(n?$:b.isEmptyObject)(o))return}(n||(delete s[u].data,$(s[u])))&&(a?b.cleanData([e],!0):b.support.deleteExpando||s!=s.window?delete s[u]:s[u]=null)}}}b.extend({cache:{},expando:\"jQuery\"+(p+Math.random()).replace(/\\D/g,\"\"),noData:{embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",applet:!0},hasData:function(e){return e=e.nodeType?b.cache[e[b.expando]]:e[b.expando],!!e&&!$(e)},data:function(e,t,n){return P(e,t,n)},removeData:function(e,t){return R(e,t)},_data:function(e,t,n){return P(e,t,n,!0)},_removeData:function(e,t){return R(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&b.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute(\"classid\")===t}}),b.fn.extend({data:function(e,n){var r,i,o=this[0],a=0,s=null;if(e===t){if(this.length&&(s=b.data(o),1===o.nodeType&&!b._data(o,\"parsedAttrs\"))){for(r=o.attributes;r.length>a;a++)i=r[a].name,i.indexOf(\"data-\")||(i=b.camelCase(i.slice(5)),W(o,i,s[i]));b._data(o,\"parsedAttrs\",!0)}return s}return\"object\"==typeof e?this.each(function(){b.data(this,e)}):b.access(this,function(n){return n===t?o?W(o,e,b.data(o,e)):null:(this.each(function(){b.data(this,e,n)}),t)},null,n,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){b.removeData(this,e)})}});function W(e,n,r){if(r===t&&1===e.nodeType){var i=\"data-\"+n.replace(B,\"-$1\").toLowerCase();if(r=e.getAttribute(i),\"string\"==typeof r){try{r=\"true\"===r?!0:\"false\"===r?!1:\"null\"===r?null:+r+\"\"===r?+r:O.test(r)?b.parseJSON(r):r}catch(o){}b.data(e,n,r)}else r=t}return r}function $(e){var t;for(t in e)if((\"data\"!==t||!b.isEmptyObject(e[t]))&&\"toJSON\"!==t)return!1;return!0}b.extend({queue:function(e,n,r){var i;return e?(n=(n||\"fx\")+\"queue\",i=b._data(e,n),r&&(!i||b.isArray(r)?i=b._data(e,n,b.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||\"fx\";var n=b.queue(e,t),r=n.length,i=n.shift(),o=b._queueHooks(e,t),a=function(){b.dequeue(e,t)};\"inprogress\"===i&&(i=n.shift(),r--),o.cur=i,i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return b._data(e,n)||b._data(e,n,{empty:b.Callbacks(\"once memory\").add(function(){b._removeData(e,t+\"queue\"),b._removeData(e,n)})})}}),b.fn.extend({queue:function(e,n){var r=2;return\"string\"!=typeof e&&(n=e,e=\"fx\",r--),r>arguments.length?b.queue(this[0],e):n===t?this:this.each(function(){var t=b.queue(this,e,n);b._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==t[0]&&b.dequeue(this,e)})},dequeue:function(e){return this.each(function(){b.dequeue(this,e)})},delay:function(e,t){return e=b.fx?b.fx.speeds[e]||e:e,t=t||\"fx\",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,n){var r,i=1,o=b.Deferred(),a=this,s=this.length,u=function(){--i||o.resolveWith(a,[a])};\"string\"!=typeof e&&(n=e,e=t),e=e||\"fx\";while(s--)r=b._data(a[s],e+\"queueHooks\"),r&&r.empty&&(i++,r.empty.add(u));return u(),o.promise(n)}});var I,z,X=/[\\t\\r\\n]/g,U=/\\r/g,V=/^(?:input|select|textarea|button|object)$/i,Y=/^(?:a|area)$/i,J=/^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped)$/i,G=/^(?:checked|selected)$/i,Q=b.support.getSetAttribute,K=b.support.input;b.fn.extend({attr:function(e,t){return b.access(this,b.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){b.removeAttr(this,e)})},prop:function(e,t){return b.access(this,b.prop,e,t,arguments.length>1)},removeProp:function(e){return e=b.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=\"string\"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).addClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(X,\" \"):\" \")){o=0;while(i=t[o++])0>r.indexOf(\" \"+i+\" \")&&(r+=i+\" \");n.className=b.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=0===arguments.length||\"string\"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).removeClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(X,\" \"):\"\")){o=0;while(i=t[o++])while(r.indexOf(\" \"+i+\" \")>=0)r=r.replace(\" \"+i+\" \",\" \");n.className=e?b.trim(r):\"\"}return this},toggleClass:function(e,t){var n=typeof e,r=\"boolean\"==typeof t;return b.isFunction(e)?this.each(function(n){b(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(\"string\"===n){var o,a=0,s=b(this),u=t,l=e.match(w)||[];while(o=l[a++])u=r?u:!s.hasClass(o),s[u?\"addClass\":\"removeClass\"](o)}else(n===i||\"boolean\"===n)&&(this.className&&b._data(this,\"__className__\",this.className),this.className=this.className||e===!1?\"\":b._data(this,\"__className__\")||\"\")})},hasClass:function(e){var t=\" \"+e+\" \",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(\" \"+this[n].className+\" \").replace(X,\" \").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=b.isFunction(e),this.each(function(n){var o,a=b(this);1===this.nodeType&&(o=i?e.call(this,n,a.val()):e,null==o?o=\"\":\"number\"==typeof o?o+=\"\":b.isArray(o)&&(o=b.map(o,function(e){return null==e?\"\":e+\"\"})),r=b.valHooks[this.type]||b.valHooks[this.nodeName.toLowerCase()],r&&\"set\"in r&&r.set(this,o,\"value\")!==t||(this.value=o))});if(o)return r=b.valHooks[o.type]||b.valHooks[o.nodeName.toLowerCase()],r&&\"get\"in r&&(n=r.get(o,\"value\"))!==t?n:(n=o.value,\"string\"==typeof n?n.replace(U,\"\"):null==n?\"\":n)}}}),b.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o=\"select-one\"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,u=0>i?s:o?i:0;for(;s>u;u++)if(n=r[u],!(!n.selected&&u!==i||(b.support.optDisabled?n.disabled:null!==n.getAttribute(\"disabled\"))||n.parentNode.disabled&&b.nodeName(n.parentNode,\"optgroup\"))){if(t=b(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n=b.makeArray(t);return b(e).find(\"option\").each(function(){this.selected=b.inArray(b(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attr:function(e,n,r){var o,a,s,u=e.nodeType;if(e&&3!==u&&8!==u&&2!==u)return typeof e.getAttribute===i?b.prop(e,n,r):(a=1!==u||!b.isXMLDoc(e),a&&(n=n.toLowerCase(),o=b.attrHooks[n]||(J.test(n)?z:I)),r===t?o&&a&&\"get\"in o&&null!==(s=o.get(e,n))?s:(typeof e.getAttribute!==i&&(s=e.getAttribute(n)),null==s?t:s):null!==r?o&&a&&\"set\"in o&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+\"\"),r):(b.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(w);if(o&&1===e.nodeType)while(n=o[i++])r=b.propFix[n]||n,J.test(n)?!Q&&G.test(n)?e[b.camelCase(\"default-\"+n)]=e[r]=!1:e[r]=!1:b.attr(e,n,\"\"),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!b.support.radioValue&&\"radio\"===t&&b.nodeName(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},propFix:{tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!b.isXMLDoc(e),a&&(n=b.propFix[n]||n,o=b.propHooks[n]),r!==t?o&&\"set\"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&\"get\"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode(\"tabindex\");return n&&n.specified?parseInt(n.value,10):V.test(e.nodeName)||Y.test(e.nodeName)&&e.href?0:t}}}}),z={get:function(e,n){var r=b.prop(e,n),i=\"boolean\"==typeof r&&e.getAttribute(n),o=\"boolean\"==typeof r?K&&Q?null!=i:G.test(n)?e[b.camelCase(\"default-\"+n)]:!!i:e.getAttributeNode(n);return o&&o.value!==!1?n.toLowerCase():t},set:function(e,t,n){return t===!1?b.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&b.propFix[n]||n,n):e[b.camelCase(\"default-\"+n)]=e[n]=!0,n}},K&&Q||(b.attrHooks.value={get:function(e,n){var r=e.getAttributeNode(n);return b.nodeName(e,\"input\")?e.defaultValue:r&&r.specified?r.value:t},set:function(e,n,r){return b.nodeName(e,\"input\")?(e.defaultValue=n,t):I&&I.set(e,n,r)}}),Q||(I=b.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&(\"id\"===n||\"name\"===n||\"coords\"===n?\"\"!==r.value:r.specified)?r.value:t},set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+=\"\",\"value\"===r||n===e.getAttribute(r)?n:t}},b.attrHooks.contenteditable={get:I.get,set:function(e,t,n){I.set(e,\"\"===t?!1:t,n)}},b.each([\"width\",\"height\"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{set:function(e,r){return\"\"===r?(e.setAttribute(n,\"auto\"),r):t}})})),b.support.hrefNormalized||(b.each([\"href\",\"src\",\"width\",\"height\"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return null==r?t:r}})}),b.each([\"href\",\"src\"],function(e,t){b.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}})),b.support.style||(b.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+\"\"}}),b.support.optSelected||(b.propHooks.selected=b.extend(b.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),b.support.enctype||(b.propFix.enctype=\"encoding\"),b.support.checkOn||b.each([\"radio\",\"checkbox\"],function(){b.valHooks[this]={get:function(e){return null===e.getAttribute(\"value\")?\"on\":e.value}}}),b.each([\"radio\",\"checkbox\"],function(){b.valHooks[this]=b.extend(b.valHooks[this],{set:function(e,n){return b.isArray(n)?e.checked=b.inArray(b(e).val(),n)>=0:t}})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\\.(.+)|)$/;function it(){return!0}function ot(){return!1}b.event={global:{},add:function(e,n,r,o,a){var s,u,l,c,p,f,d,h,g,m,y,v=b._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=b.guid++),(u=v.events)||(u=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof b===i||e&&b.event.triggered===e.type?t:b.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||\"\").match(w)||[\"\"],l=n.length;while(l--)s=rt.exec(n[l])||[],g=y=s[1],m=(s[2]||\"\").split(\".\").sort(),p=b.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=b.event.special[g]||{},d=b.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&b.expr.match.needsContext.test(a),namespace:m.join(\".\")},c),(h=u[g])||(h=u[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent(\"on\"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),b.event.global[g]=!0;e=null}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,p,f,d,h,g,m=b.hasData(e)&&b._data(e);if(m&&(c=m.events)){t=(t||\"\").match(w)||[\"\"],l=t.length;while(l--)if(s=rt.exec(t[l])||[],d=g=s[1],h=(s[2]||\"\").split(\".\").sort(),d){p=b.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),u=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&(\"**\"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));u&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||b.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)b.event.remove(e,d+t[l],n,r,!0);b.isEmptyObject(c)&&(delete m.handle,b._removeData(e,\"events\"))}},trigger:function(n,r,i,a){var s,u,l,c,p,f,d,h=[i||o],g=y.call(n,\"type\")?n.type:n,m=y.call(n,\"namespace\")?n.namespace.split(\".\"):[];if(l=f=i=i||o,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+b.event.triggered)&&(g.indexOf(\".\")>=0&&(m=g.split(\".\"),g=m.shift(),m.sort()),u=0>g.indexOf(\":\")&&\"on\"+g,n=n[b.expando]?n:new b.Event(g,\"object\"==typeof n&&n),n.isTrigger=!0,n.namespace=m.join(\".\"),n.namespace_re=n.namespace?RegExp(\"(^|\\\\.)\"+m.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:b.makeArray(r,[n]),p=b.event.special[g]||{},a||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!a&&!p.noBubble&&!b.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(l=l.parentNode);l;l=l.parentNode)h.push(l),f=l;f===(i.ownerDocument||o)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((l=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(b._data(l,\"events\")||{})[n.type]&&b._data(l,\"handle\"),s&&s.apply(l,r),s=u&&l[u],s&&b.acceptData(l)&&s.apply&&s.apply(l,r)===!1&&n.preventDefault();if(n.type=g,!(a||n.isDefaultPrevented()||p._default&&p._default.apply(i.ownerDocument,r)!==!1||\"click\"===g&&b.nodeName(i,\"a\")||!b.acceptData(i)||!u||!i[g]||b.isWindow(i))){f=i[u],f&&(i[u]=null),b.event.triggered=g;try{i[g]()}catch(v){}b.event.triggered=t,f&&(i[u]=f)}return n.result}},dispatch:function(e){e=b.event.fix(e);var n,r,i,o,a,s=[],u=h.call(arguments),l=(b._data(this,\"events\")||{})[e.type]||[],c=b.event.special[e.type]||{};if(u[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=b.event.handlers.call(this,e,l),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((b.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,u),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],u=n.delegateCount,l=e.target;if(u&&l.nodeType&&(!e.button||\"click\"!==e.type))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||\"click\"!==e.type)){for(o=[],a=0;u>a;a++)i=n[a],r=i.selector+\" \",o[r]===t&&(o[r]=i.needsContext?b(r,this).index(l)>=0:b.find(r,this,null,[l]).length),o[r]&&o.push(i);o.length&&s.push({elem:l,handlers:o})}return n.length>u&&s.push({elem:this,handlers:n.slice(u)}),s},fix:function(e){if(e[b.expando])return e;var t,n,r,i=e.type,a=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new b.Event(a),t=r.length;while(t--)n=r[t],e[n]=a[n];return e.target||(e.target=a.srcElement||o),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,a):e},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(e,n){var r,i,a,s=n.button,u=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||o,a=i.documentElement,r=i.body,e.pageX=n.clientX+(a&&a.scrollLeft||r&&r.scrollLeft||0)-(a&&a.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(a&&a.scrollTop||r&&r.scrollTop||0)-(a&&a.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&u&&(e.relatedTarget=u===e.target?n.toElement:u),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},click:{trigger:function(){return b.nodeName(this,\"input\")&&\"checkbox\"===this.type&&this.click?(this.click(),!1):t}},focus:{trigger:function(){if(this!==o.activeElement&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:\"focusin\"},blur:{trigger:function(){return this===o.activeElement&&this.blur?(this.blur(),!1):t},delegateType:\"focusout\"},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=b.extend(new b.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?b.event.trigger(i,null,t):b.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},b.removeEvent=o.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r=\"on\"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},b.Event=function(e,n){return this instanceof b.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&b.extend(this,n),this.timeStamp=e&&e.timeStamp||b.now(),this[b.expando]=!0,t):new b.Event(e,n)},b.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},b.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(e,t){b.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;\n    return(!i||i!==r&&!b.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),b.support.submitBubbles||(b.event.special.submit={setup:function(){return b.nodeName(this,\"form\")?!1:(b.event.add(this,\"click._submit keypress._submit\",function(e){var n=e.target,r=b.nodeName(n,\"input\")||b.nodeName(n,\"button\")?n.form:t;r&&!b._data(r,\"submitBubbles\")&&(b.event.add(r,\"submit._submit\",function(e){e._submit_bubble=!0}),b._data(r,\"submitBubbles\",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&b.event.simulate(\"submit\",this.parentNode,e,!0))},teardown:function(){return b.nodeName(this,\"form\")?!1:(b.event.remove(this,\"._submit\"),t)}}),b.support.changeBubbles||(b.event.special.change={setup:function(){return Z.test(this.nodeName)?((\"checkbox\"===this.type||\"radio\"===this.type)&&(b.event.add(this,\"propertychange._change\",function(e){\"checked\"===e.originalEvent.propertyName&&(this._just_changed=!0)}),b.event.add(this,\"click._change\",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),b.event.simulate(\"change\",this,e,!0)})),!1):(b.event.add(this,\"beforeactivate._change\",function(e){var t=e.target;Z.test(t.nodeName)&&!b._data(t,\"changeBubbles\")&&(b.event.add(t,\"change._change\",function(e){!this.parentNode||e.isSimulated||e.isTrigger||b.event.simulate(\"change\",this.parentNode,e,!0)}),b._data(t,\"changeBubbles\",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||\"radio\"!==n.type&&\"checkbox\"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return b.event.remove(this,\"._change\"),!Z.test(this.nodeName)}}),b.support.focusinBubbles||b.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var n=0,r=function(e){b.event.simulate(t,e.target,b.event.fix(e),!0)};b.event.special[t]={setup:function(){0===n++&&o.addEventListener(e,r,!0)},teardown:function(){0===--n&&o.removeEventListener(e,r,!0)}}}),b.fn.extend({on:function(e,n,r,i,o){var a,s;if(\"object\"==typeof e){\"string\"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&(\"string\"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return b().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=b.guid++)),this.each(function(){b.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,b(e.delegateTarget).off(i.namespace?i.origType+\".\"+i.namespace:i.origType,i.selector,i.handler),this;if(\"object\"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||\"function\"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){b.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)},trigger:function(e,t){return this.each(function(){b.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?b.event.trigger(e,n,r,!0):t}}),function(e,t){var n,r,i,o,a,s,u,l,c,p,f,d,h,g,m,y,v,x=\"sizzle\"+-new Date,w=e.document,T={},N=0,C=0,k=it(),E=it(),S=it(),A=typeof t,j=1<<31,D=[],L=D.pop,H=D.push,q=D.slice,M=D.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},_=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",F=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",O=F.replace(\"w\",\"w#\"),B=\"([*^$|!~]?=)\",P=\"\\\\[\"+_+\"*(\"+F+\")\"+_+\"*(?:\"+B+_+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+O+\")|)|)\"+_+\"*\\\\]\",R=\":(\"+F+\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+P.replace(3,8)+\")*)|.*)\\\\)|)\",W=RegExp(\"^\"+_+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+_+\"+$\",\"g\"),$=RegExp(\"^\"+_+\"*,\"+_+\"*\"),I=RegExp(\"^\"+_+\"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\"+_+\"*\"),z=RegExp(R),X=RegExp(\"^\"+O+\"$\"),U={ID:RegExp(\"^#(\"+F+\")\"),CLASS:RegExp(\"^\\\\.(\"+F+\")\"),NAME:RegExp(\"^\\\\[name=['\\\"]?(\"+F+\")['\\\"]?\\\\]\"),TAG:RegExp(\"^(\"+F.replace(\"w\",\"w*\")+\")\"),ATTR:RegExp(\"^\"+P),PSEUDO:RegExp(\"^\"+R),CHILD:RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+_+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+_+\"*(?:([+-]|)\"+_+\"*(\\\\d+)|))\"+_+\"*\\\\)|)\",\"i\"),needsContext:RegExp(\"^\"+_+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+_+\"*((?:-\\\\d)?\\\\d*)\"+_+\"*\\\\)|)(?=[^-]|$)\",\"i\")},V=/[\\x20\\t\\r\\n\\f]*[+~]/,Y=/^[^{]+\\{\\s*\\[native code/,J=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,G=/^(?:input|select|textarea|button)$/i,Q=/^h\\d$/i,K=/'|\\\\/g,Z=/\\=[\\x20\\t\\r\\n\\f]*([^'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,et=/\\\\([\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|.)/g,tt=function(e,t){var n=\"0x\"+t-65536;return n!==n?t:0>n?String.fromCharCode(n+65536):String.fromCharCode(55296|n>>10,56320|1023&n)};try{q.call(w.documentElement.childNodes,0)[0].nodeType}catch(nt){q=function(e){var t,n=[];while(t=this[e++])n.push(t);return n}}function rt(e){return Y.test(e+\"\")}function it(){var e,t=[];return e=function(n,r){return t.push(n+=\" \")>i.cacheLength&&delete e[t.shift()],e[n]=r}}function ot(e){return e[x]=!0,e}function at(e){var t=p.createElement(\"div\");try{return e(t)}catch(n){return!1}finally{t=null}}function st(e,t,n,r){var i,o,a,s,u,l,f,g,m,v;if((t?t.ownerDocument||t:w)!==p&&c(t),t=t||p,n=n||[],!e||\"string\"!=typeof e)return n;if(1!==(s=t.nodeType)&&9!==s)return[];if(!d&&!r){if(i=J.exec(e))if(a=i[1]){if(9===s){if(o=t.getElementById(a),!o||!o.parentNode)return n;if(o.id===a)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(a))&&y(t,o)&&o.id===a)return n.push(o),n}else{if(i[2])return H.apply(n,q.call(t.getElementsByTagName(e),0)),n;if((a=i[3])&&T.getByClassName&&t.getElementsByClassName)return H.apply(n,q.call(t.getElementsByClassName(a),0)),n}if(T.qsa&&!h.test(e)){if(f=!0,g=x,m=t,v=9===s&&e,1===s&&\"object\"!==t.nodeName.toLowerCase()){l=ft(e),(f=t.getAttribute(\"id\"))?g=f.replace(K,\"\\\\$&\"):t.setAttribute(\"id\",g),g=\"[id='\"+g+\"'] \",u=l.length;while(u--)l[u]=g+dt(l[u]);m=V.test(e)&&t.parentNode||t,v=l.join(\",\")}if(v)try{return H.apply(n,q.call(m.querySelectorAll(v),0)),n}catch(b){}finally{f||t.removeAttribute(\"id\")}}}return wt(e.replace(W,\"$1\"),t,n,r)}a=st.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?\"HTML\"!==t.nodeName:!1},c=st.setDocument=function(e){var n=e?e.ownerDocument||e:w;return n!==p&&9===n.nodeType&&n.documentElement?(p=n,f=n.documentElement,d=a(n),T.tagNameNoComments=at(function(e){return e.appendChild(n.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),T.attributes=at(function(e){e.innerHTML=\"<select></select>\";var t=typeof e.lastChild.getAttribute(\"multiple\");return\"boolean\"!==t&&\"string\"!==t}),T.getByClassName=at(function(e){return e.innerHTML=\"<div class='hidden e'></div><div class='hidden'></div>\",e.getElementsByClassName&&e.getElementsByClassName(\"e\").length?(e.lastChild.className=\"e\",2===e.getElementsByClassName(\"e\").length):!1}),T.getByName=at(function(e){e.id=x+0,e.innerHTML=\"<a name='\"+x+\"'></a><div name='\"+x+\"'></div>\",f.insertBefore(e,f.firstChild);var t=n.getElementsByName&&n.getElementsByName(x).length===2+n.getElementsByName(x+0).length;return T.getIdNotName=!n.getElementById(x),f.removeChild(e),t}),i.attrHandle=at(function(e){return e.innerHTML=\"<a href='#'></a>\",e.firstChild&&typeof e.firstChild.getAttribute!==A&&\"#\"===e.firstChild.getAttribute(\"href\")})?{}:{href:function(e){return e.getAttribute(\"href\",2)},type:function(e){return e.getAttribute(\"type\")}},T.getIdNotName?(i.find.ID=function(e,t){if(typeof t.getElementById!==A&&!d){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){return e.getAttribute(\"id\")===t}}):(i.find.ID=function(e,n){if(typeof n.getElementById!==A&&!d){var r=n.getElementById(e);return r?r.id===e||typeof r.getAttributeNode!==A&&r.getAttributeNode(\"id\").value===e?[r]:t:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){var n=typeof e.getAttributeNode!==A&&e.getAttributeNode(\"id\");return n&&n.value===t}}),i.find.TAG=T.tagNameNoComments?function(e,n){return typeof n.getElementsByTagName!==A?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},i.find.NAME=T.getByName&&function(e,n){return typeof n.getElementsByName!==A?n.getElementsByName(name):t},i.find.CLASS=T.getByClassName&&function(e,n){return typeof n.getElementsByClassName===A||d?t:n.getElementsByClassName(e)},g=[],h=[\":focus\"],(T.qsa=rt(n.querySelectorAll))&&(at(function(e){e.innerHTML=\"<select><option selected=''></option></select>\",e.querySelectorAll(\"[selected]\").length||h.push(\"\\\\[\"+_+\"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\"),e.querySelectorAll(\":checked\").length||h.push(\":checked\")}),at(function(e){e.innerHTML=\"<input type='hidden' i=''/>\",e.querySelectorAll(\"[i^='']\").length&&h.push(\"[*^$]=\"+_+\"*(?:\\\"\\\"|'')\"),e.querySelectorAll(\":enabled\").length||h.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),h.push(\",.*:\")})),(T.matchesSelector=rt(m=f.matchesSelector||f.mozMatchesSelector||f.webkitMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&at(function(e){T.disconnectedMatch=m.call(e,\"div\"),m.call(e,\"[s!='']:x\"),g.push(\"!=\",R)}),h=RegExp(h.join(\"|\")),g=RegExp(g.join(\"|\")),y=rt(f.contains)||f.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},v=f.compareDocumentPosition?function(e,t){var r;return e===t?(u=!0,0):(r=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t))?1&r||e.parentNode&&11===e.parentNode.nodeType?e===n||y(w,e)?-1:t===n||y(w,t)?1:0:4&r?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return u=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:0;if(o===a)return ut(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?ut(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},u=!1,[0,0].sort(v),T.detectDuplicates=u,p):p},st.matches=function(e,t){return st(e,null,null,t)},st.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&c(e),t=t.replace(Z,\"='$1']\"),!(!T.matchesSelector||d||g&&g.test(t)||h.test(t)))try{var n=m.call(e,t);if(n||T.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(r){}return st(t,p,null,[e]).length>0},st.contains=function(e,t){return(e.ownerDocument||e)!==p&&c(e),y(e,t)},st.attr=function(e,t){var n;return(e.ownerDocument||e)!==p&&c(e),d||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):d||T.attributes?e.getAttribute(t):((n=e.getAttributeNode(t))||e.getAttribute(t))&&e[t]===!0?t:n&&n.specified?n.value:null},st.error=function(e){throw Error(\"Syntax error, unrecognized expression: \"+e)},st.uniqueSort=function(e){var t,n=[],r=1,i=0;if(u=!T.detectDuplicates,e.sort(v),u){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e};function ut(e,t){var n=t&&e,r=n&&(~t.sourceIndex||j)-(~e.sourceIndex||j);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function lt(e){return function(t){var n=t.nodeName.toLowerCase();return\"input\"===n&&t.type===e}}function ct(e){return function(t){var n=t.nodeName.toLowerCase();return(\"input\"===n||\"button\"===n)&&t.type===e}}function pt(e){return ot(function(t){return t=+t,ot(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}o=st.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=o(t);return n},i=st.selectors={cacheLength:50,createPseudo:ot,match:U,find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(et,tt),e[3]=(e[4]||e[5]||\"\").replace(et,tt),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||st.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&st.error(e[0]),e},PSEUDO:function(e){var t,n=!e[5]&&e[2];return U.CHILD.test(e[0])?null:(e[4]?e[2]=e[4]:n&&z.test(n)&&(t=ft(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){return\"*\"===e?function(){return!0}:(e=e.replace(et,tt).toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[e+\" \"];return t||(t=RegExp(\"(^|\"+_+\")\"+e+\"(\"+_+\"|$)\"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==A&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,n){return function(r){var i=st.attr(r,e);return null==i?\"!=\"===t:t?(i+=\"\",\"=\"===t?i===n:\"!=\"===t?i!==n:\"^=\"===t?n&&0===i.indexOf(n):\"*=\"===t?n&&i.indexOf(n)>-1:\"$=\"===t?n&&i.slice(-n.length)===n:\"~=\"===t?(\" \"+i+\" \").indexOf(n)>-1:\"|=\"===t?i===n||i.slice(0,n.length+1)===n+\"-\":!1):!0}},CHILD:function(e,t,n,r,i){var o=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,p,f,d,h,g=o!==a?\"nextSibling\":\"previousSibling\",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!u&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g=\"only\"===e&&!h&&\"nextSibling\"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[x]||(m[x]={}),l=c[e]||[],d=l[0]===N&&l[1],f=l[0]===N&&l[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[N,d,f];break}}else if(v&&(l=(t[x]||(t[x]={}))[e])&&l[0]===N)f=l[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[x]||(p[x]={}))[e]=[N,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||st.error(\"unsupported pseudo: \"+e);return r[x]?r(t):r.length>1?(n=[e,e,\"\",t],i.setFilters.hasOwnProperty(e.toLowerCase())?ot(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=M.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:ot(function(e){var t=[],n=[],r=s(e.replace(W,\"$1\"));return r[x]?ot(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:ot(function(e){return function(t){return st(e,t).length>0}}),contains:ot(function(e){return function(t){return(t.textContent||t.innerText||o(t)).indexOf(e)>-1}}),lang:ot(function(e){return X.test(e||\"\")||st.error(\"unsupported lang: \"+e),e=e.replace(et,tt).toLowerCase(),function(t){var n;do if(n=d?t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"):t.lang)return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>\"@\"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!i.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return G.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||t.toLowerCase()===e.type)},first:pt(function(){return[0]}),last:pt(function(e,t){return[t-1]}),eq:pt(function(e,t,n){return[0>n?n+t:n]}),even:pt(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:pt(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:pt(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:pt(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}};for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[n]=lt(n);for(n in{submit:!0,reset:!0})i.pseudos[n]=ct(n);function ft(e,t){var n,r,o,a,s,u,l,c=E[e+\" \"];if(c)return t?0:c.slice(0);s=e,u=[],l=i.preFilter;while(s){(!n||(r=$.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),u.push(o=[])),n=!1,(r=I.exec(s))&&(n=r.shift(),o.push({value:n,type:r[0].replace(W,\" \")}),s=s.slice(n.length));for(a in i.filter)!(r=U[a].exec(s))||l[a]&&!(r=l[a](r))||(n=r.shift(),o.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?st.error(e):E(e,u).slice(0)}function dt(e){var t=0,n=e.length,r=\"\";for(;n>t;t++)r+=e[t].value;return r}function ht(e,t,n){var i=t.dir,o=n&&\"parentNode\"===i,a=C++;return t.first?function(t,n,r){while(t=t[i])if(1===t.nodeType||o)return e(t,n,r)}:function(t,n,s){var u,l,c,p=N+\" \"+a;if(s){while(t=t[i])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[i])if(1===t.nodeType||o)if(c=t[x]||(t[x]={}),(l=c[i])&&l[0]===p){if((u=l[1])===!0||u===r)return u===!0}else if(l=c[i]=[p],l[1]=e(t,n,s)||r,l[1]===!0)return!0}}function gt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function mt(e,t,n,r,i){var o,a=[],s=0,u=e.length,l=null!=t;for(;u>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),l&&t.push(s));return a}function yt(e,t,n,r,i,o){return r&&!r[x]&&(r=yt(r)),i&&!i[x]&&(i=yt(i,o)),ot(function(o,a,s,u){var l,c,p,f=[],d=[],h=a.length,g=o||xt(t||\"*\",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:mt(g,f,e,s,u),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,u),r){l=mt(y,d),r(l,[],s,u),c=l.length;while(c--)(p=l[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){l=[],c=y.length;while(c--)(p=y[c])&&l.push(m[c]=p);i(null,y=[],l,u)}c=y.length;while(c--)(p=y[c])&&(l=i?M.call(o,p):f[c])>-1&&(o[l]=!(a[l]=p))}}else y=mt(y===a?y.splice(h,y.length):y),i?i(null,a,y,u):H.apply(a,y)})}function vt(e){var t,n,r,o=e.length,a=i.relative[e[0].type],s=a||i.relative[\" \"],u=a?1:0,c=ht(function(e){return e===t},s,!0),p=ht(function(e){return M.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==l)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;o>u;u++)if(n=i.relative[e[u].type])f=[ht(gt(f),n)];else{if(n=i.filter[e[u].type].apply(null,e[u].matches),n[x]){for(r=++u;o>r;r++)if(i.relative[e[r].type])break;return yt(u>1&&gt(f),u>1&&dt(e.slice(0,u-1)).replace(W,\"$1\"),n,r>u&&vt(e.slice(u,r)),o>r&&vt(e=e.slice(r)),o>r&&dt(e))}f.push(n)}return gt(f)}function bt(e,t){var n=0,o=t.length>0,a=e.length>0,s=function(s,u,c,f,d){var h,g,m,y=[],v=0,b=\"0\",x=s&&[],w=null!=d,T=l,C=s||a&&i.find.TAG(\"*\",d&&u.parentNode||u),k=N+=null==T?1:Math.random()||.1;for(w&&(l=u!==p&&u,r=n);null!=(h=C[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,u,c)){f.push(h);break}w&&(N=k,r=++n)}o&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,o&&b!==v){g=0;while(m=t[g++])m(x,y,u,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=L.call(f));y=mt(y)}H.apply(f,y),w&&!s&&y.length>0&&v+t.length>1&&st.uniqueSort(f)}return w&&(N=k,l=T),x};return o?ot(s):s}s=st.compile=function(e,t){var n,r=[],i=[],o=S[e+\" \"];if(!o){t||(t=ft(e)),n=t.length;while(n--)o=vt(t[n]),o[x]?r.push(o):i.push(o);o=S(e,bt(i,r))}return o};function xt(e,t,n){var r=0,i=t.length;for(;i>r;r++)st(e,t[r],n);return n}function wt(e,t,n,r){var o,a,u,l,c,p=ft(e);if(!r&&1===p.length){if(a=p[0]=p[0].slice(0),a.length>2&&\"ID\"===(u=a[0]).type&&9===t.nodeType&&!d&&i.relative[a[1].type]){if(t=i.find.ID(u.matches[0].replace(et,tt),t)[0],!t)return n;e=e.slice(a.shift().value.length)}o=U.needsContext.test(e)?0:a.length;while(o--){if(u=a[o],i.relative[l=u.type])break;if((c=i.find[l])&&(r=c(u.matches[0].replace(et,tt),V.test(a[0].type)&&t.parentNode||t))){if(a.splice(o,1),e=r.length&&dt(a),!e)return H.apply(n,q.call(r,0)),n;break}}}return s(e,p)(r,t,d,n,V.test(e)),n}i.pseudos.nth=i.pseudos.eq;function Tt(){}i.filters=Tt.prototype=i.pseudos,i.setFilters=new Tt,c(),st.attr=b.attr,b.find=st,b.expr=st.selectors,b.expr[\":\"]=b.expr.pseudos,b.unique=st.uniqueSort,b.text=st.getText,b.isXMLDoc=st.isXML,b.contains=st.contains}(e);var at=/Until$/,st=/^(?:parents|prev(?:Until|All))/,ut=/^.[^:#\\[\\.,]*$/,lt=b.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};b.fn.extend({find:function(e){var t,n,r,i=this.length;if(\"string\"!=typeof e)return r=this,this.pushStack(b(e).filter(function(){for(t=0;i>t;t++)if(b.contains(r[t],this))return!0}));for(n=[],t=0;i>t;t++)b.find(e,this[t],n);return n=this.pushStack(i>1?b.unique(n):n),n.selector=(this.selector?this.selector+\" \":\"\")+e,n},has:function(e){var t,n=b(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(b.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1))},filter:function(e){return this.pushStack(ft(this,e,!0))},is:function(e){return!!e&&(\"string\"==typeof e?lt.test(e)?b(e,this.context).index(this[0])>=0:b.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,o=[],a=lt.test(e)||\"string\"!=typeof e?b(e,t||this.context):0;for(;i>r;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&11!==n.nodeType){if(a?a.index(n)>-1:b.find.matchesSelector(n,e)){o.push(n);break}n=n.parentNode}}return this.pushStack(o.length>1?b.unique(o):o)},index:function(e){return e?\"string\"==typeof e?b.inArray(this[0],b(e)):b.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n=\"string\"==typeof e?b(e,t):b.makeArray(e&&e.nodeType?[e]:e),r=b.merge(this.get(),n);return this.pushStack(b.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),b.fn.andSelf=b.fn.addBack;function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}b.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return b.dir(e,\"parentNode\")},parentsUntil:function(e,t,n){return b.dir(e,\"parentNode\",n)},next:function(e){return pt(e,\"nextSibling\")},prev:function(e){return pt(e,\"previousSibling\")},nextAll:function(e){return b.dir(e,\"nextSibling\")},prevAll:function(e){return b.dir(e,\"previousSibling\")},nextUntil:function(e,t,n){return b.dir(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return b.dir(e,\"previousSibling\",n)},siblings:function(e){return b.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return b.sibling(e.firstChild)},contents:function(e){return b.nodeName(e,\"iframe\")?e.contentDocument||e.contentWindow.document:b.merge([],e.childNodes)}},function(e,t){b.fn[e]=function(n,r){var i=b.map(this,t,n);return at.test(e)||(r=n),r&&\"string\"==typeof r&&(i=b.filter(r,i)),i=this.length>1&&!ct[e]?b.unique(i):i,this.length>1&&st.test(e)&&(i=i.reverse()),this.pushStack(i)}}),b.extend({filter:function(e,t,n){return n&&(e=\":not(\"+e+\")\"),1===t.length?b.find.matchesSelector(t[0],e)?[t[0]]:[]:b.find.matches(e,t)},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!b(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(t=t||0,b.isFunction(t))return b.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return b.grep(e,function(e){return e===t===n});if(\"string\"==typeof t){var r=b.grep(e,function(e){return 1===e.nodeType});if(ut.test(t))return b.filter(t,r,!n);t=b.filter(t,r)}return b.grep(e,function(e){return b.inArray(e,t)>=0===n})}function dt(e){var t=ht.split(\"|\"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",gt=/ jQuery\\d+=\"(?:null|\\d+)\"/g,mt=RegExp(\"<(?:\"+ht+\")[\\\\s/>]\",\"i\"),yt=/^\\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bt=/<([\\w:]+)/,xt=/<tbody/i,wt=/<|&#?\\w+;/,Tt=/<(?:script|style|link)/i,Nt=/^(?:checkbox|radio)$/i,Ct=/checked\\s*(?:[^=]|=\\s*.checked.)/i,kt=/^$|\\/(?:java|ecma)script/i,Et=/^true\\/(.*)/,St=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,At={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],area:[1,\"<map>\",\"</map>\"],param:[1,\"<object>\",\"</object>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:b.support.htmlSerialize?[0,\"\",\"\"]:[1,\"X<div>\",\"</div>\"]},jt=dt(o),Dt=jt.appendChild(o.createElement(\"div\"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,b.fn.extend({text:function(e){return b.access(this,function(e){return e===t?b.text(this):this.empty().append((this[0]&&this[0].ownerDocument||o).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(b.isFunction(e))return this.each(function(t){b(this).wrapAll(e.call(this,t))});if(this[0]){var t=b(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return b.isFunction(e)?this.each(function(t){b(this).wrapInner(e.call(this,t))}):this.each(function(){var t=b(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=b.isFunction(e);return this.each(function(n){b(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){b.nodeName(this,\"body\")||b(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.insertBefore(e,this.firstChild)})},before:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=0;for(;null!=(n=this[r]);r++)(!e||b.filter(e,[n]).length>0)&&(t||1!==n.nodeType||b.cleanData(Ot(n)),n.parentNode&&(t&&b.contains(n.ownerDocument,n)&&Mt(Ot(n,\"script\")),n.parentNode.removeChild(n)));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&b.cleanData(Ot(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&b.nodeName(e,\"select\")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return b.clone(this,e,t)})},html:function(e){return b.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,\"\"):t;if(!(\"string\"!=typeof e||Tt.test(e)||!b.support.htmlSerialize&&mt.test(e)||!b.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||[\"\",\"\"])[1].toLowerCase()])){e=e.replace(vt,\"<$1></$2>\");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(b.cleanData(Ot(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){var t=b.isFunction(e);return t||\"string\"==typeof e||(e=b(e).not(this).detach()),this.domManip([e],!0,function(e){var t=this.nextSibling,n=this.parentNode;n&&(b(this).remove(),n.insertBefore(e,t))})},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=f.apply([],e);var i,o,a,s,u,l,c=0,p=this.length,d=this,h=p-1,g=e[0],m=b.isFunction(g);if(m||!(1>=p||\"string\"!=typeof g||b.support.checkClone)&&Ct.test(g))return this.each(function(i){var o=d.eq(i);m&&(e[0]=g.call(this,i,n?o.html():t)),o.domManip(e,n,r)});if(p&&(l=b.buildFragment(e,this[0].ownerDocument,!1,this),i=l.firstChild,1===l.childNodes.length&&(l=i),i)){for(n=n&&b.nodeName(i,\"tr\"),s=b.map(Ot(l,\"script\"),Ht),a=s.length;p>c;c++)o=l,c!==h&&(o=b.clone(o,!0,!0),a&&b.merge(s,Ot(o,\"script\"))),r.call(n&&b.nodeName(this[c],\"table\")?Lt(this[c],\"tbody\"):this[c],o,c);if(a)for(u=s[s.length-1].ownerDocument,b.map(s,qt),c=0;a>c;c++)o=s[c],kt.test(o.type||\"\")&&!b._data(o,\"globalEval\")&&b.contains(u,o)&&(o.src?b.ajax({url:o.src,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0}):b.globalEval((o.text||o.textContent||o.innerHTML||\"\").replace(St,\"\")));l=i=null}return this}});function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function Ht(e){var t=e.getAttributeNode(\"type\");return e.type=(t&&t.specified)+\"/\"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute(\"type\"),e}function Mt(e,t){var n,r=0;for(;null!=(n=e[r]);r++)b._data(n,\"globalEval\",!t||b._data(t[r],\"globalEval\"))}function _t(e,t){if(1===t.nodeType&&b.hasData(e)){var n,r,i,o=b._data(e),a=b._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)b.event.add(t,n,s[n][r])}a.data&&(a.data=b.extend({},a.data))}}function Ft(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!b.support.noCloneEvent&&t[b.expando]){i=b._data(t);for(r in i.events)b.removeEvent(t,r,i.handle);t.removeAttribute(b.expando)}\"script\"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):\"object\"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),b.support.html5Clone&&e.innerHTML&&!b.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):\"input\"===n&&Nt.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):\"option\"===n?t.defaultSelected=t.selected=e.defaultSelected:(\"input\"===n||\"textarea\"===n)&&(t.defaultValue=e.defaultValue)}}b.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){b.fn[e]=function(e){var n,r=0,i=[],o=b(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),b(o[r])[t](n),d.apply(i,n.get());return this.pushStack(i)}});function Ot(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||\"*\"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||\"*\"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||b.nodeName(o,n)?s.push(o):b.merge(s,Ot(o,n));return n===t||n&&b.nodeName(e,n)?b.merge([e],s):s}function Bt(e){Nt.test(e.type)&&(e.defaultChecked=e.checked)}b.extend({clone:function(e,t,n){var r,i,o,a,s,u=b.contains(e.ownerDocument,e);if(b.support.html5Clone||b.isXMLDoc(e)||!mt.test(\"<\"+e.nodeName+\">\")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(b.support.noCloneEvent&&b.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||b.isXMLDoc(e)))for(r=Ot(o),s=Ot(e),a=0;null!=(i=s[a]);++a)r[a]&&Ft(i,r[a]);if(t)if(n)for(s=s||Ot(e),r=r||Ot(o),a=0;null!=(i=s[a]);a++)_t(i,r[a]);else _t(e,o);return r=Ot(o,\"script\"),r.length>0&&Mt(r,!u&&Ot(e,\"script\")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,u,l,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if(\"object\"===b.type(o))b.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement(\"div\")),u=(bt.exec(o)||[\"\",\"\"])[1].toLowerCase(),c=At[u]||At._default,s.innerHTML=c[1]+o.replace(vt,\"<$1></$2>\")+c[2],i=c[0];while(i--)s=s.lastChild;if(!b.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!b.support.tbody){o=\"table\"!==u||xt.test(o)?\"<table>\"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)b.nodeName(l=o.childNodes[i],\"tbody\")&&!l.childNodes.length&&o.removeChild(l)\n}b.merge(d,s.childNodes),s.textContent=\"\";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),b.support.appendChecked||b.grep(Ot(d,\"input\"),Bt),h=0;while(o=d[h++])if((!r||-1===b.inArray(o,r))&&(a=b.contains(o.ownerDocument,o),s=Ot(f.appendChild(o),\"script\"),a&&Mt(s),n)){i=0;while(o=s[i++])kt.test(o.type||\"\")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,u=b.expando,l=b.cache,p=b.support.deleteExpando,f=b.event.special;for(;null!=(n=e[s]);s++)if((t||b.acceptData(n))&&(o=n[u],a=o&&l[o])){if(a.events)for(r in a.events)f[r]?b.event.remove(n,r):b.removeEvent(n,r,a.handle);l[o]&&(delete l[o],p?delete n[u]:typeof n.removeAttribute!==i?n.removeAttribute(u):n[u]=null,c.push(o))}}});var Pt,Rt,Wt,$t=/alpha\\([^)]*\\)/i,It=/opacity\\s*=\\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp(\"^(\"+x+\")(.*)$\",\"i\"),Yt=RegExp(\"^(\"+x+\")(?!px)[a-z%]+$\",\"i\"),Jt=RegExp(\"^([+-])=(\"+x+\")\",\"i\"),Gt={BODY:\"block\"},Qt={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Kt={letterSpacing:0,fontWeight:400},Zt=[\"Top\",\"Right\",\"Bottom\",\"Left\"],en=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,\"none\"===b.css(e,\"display\")||!b.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=b._data(r,\"olddisplay\"),n=r.style.display,t?(o[a]||\"none\"!==n||(r.style.display=\"\"),\"\"===r.style.display&&nn(r)&&(o[a]=b._data(r,\"olddisplay\",un(r.nodeName)))):o[a]||(i=nn(r),(n&&\"none\"!==n||!i)&&b._data(r,\"olddisplay\",i?n:b.css(r,\"display\"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&\"none\"!==r.style.display&&\"\"!==r.style.display||(r.style.display=t?o[a]||\"\":\"none\"));return e}b.fn.extend({css:function(e,n){return b.access(this,function(e,n,r){var i,o,a={},s=0;if(b.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=b.css(e,n[s],!1,o);return a}return r!==t?b.style(e,n,r):b.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){var t=\"boolean\"==typeof e;return this.each(function(){(t?e:nn(this))?b(this).show():b(this).hide()})}}),b.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":b.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,u=b.camelCase(n),l=e.style;if(n=b.cssProps[u]||(b.cssProps[u]=tn(l,u)),s=b.cssHooks[n]||b.cssHooks[u],r===t)return s&&\"get\"in s&&(o=s.get(e,!1,i))!==t?o:l[n];if(a=typeof r,\"string\"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(b.css(e,n)),a=\"number\"),!(null==r||\"number\"===a&&isNaN(r)||(\"number\"!==a||b.cssNumber[u]||(r+=\"px\"),b.support.clearCloneStyle||\"\"!==r||0!==n.indexOf(\"background\")||(l[n]=\"inherit\"),s&&\"set\"in s&&(r=s.set(e,r,i))===t)))try{l[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,u=b.camelCase(n);return n=b.cssProps[u]||(b.cssProps[u]=tn(e.style,u)),s=b.cssHooks[n]||b.cssHooks[u],s&&\"get\"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),\"normal\"===a&&n in Kt&&(a=Kt[n]),\"\"===r||r?(o=parseFloat(a),r===!0||b.isNumeric(o)?o||0:a):a},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s.getPropertyValue(n)||s[n]:t,l=e.style;return s&&(\"\"!==u||b.contains(e.ownerDocument,e)||(u=b.style(e,n)),Yt.test(u)&&Ut.test(n)&&(i=l.width,o=l.minWidth,a=l.maxWidth,l.minWidth=l.maxWidth=l.width=u,u=s.width,l.width=i,l.minWidth=o,l.maxWidth=a)),u}):o.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s[n]:t,l=e.style;return null==u&&l&&l[n]&&(u=l[n]),Yt.test(u)&&!zt.test(n)&&(i=l.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),l.left=\"fontSize\"===n?\"1em\":u,u=l.pixelLeft+\"px\",l.left=i,a&&(o.left=a)),\"\"===u?\"auto\":u});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||\"px\"):t}function an(e,t,n,r,i){var o=n===(r?\"border\":\"content\")?4:\"width\"===t?1:0,a=0;for(;4>o;o+=2)\"margin\"===n&&(a+=b.css(e,n+Zt[o],!0,i)),r?(\"content\"===n&&(a-=b.css(e,\"padding\"+Zt[o],!0,i)),\"margin\"!==n&&(a-=b.css(e,\"border\"+Zt[o]+\"Width\",!0,i))):(a+=b.css(e,\"padding\"+Zt[o],!0,i),\"padding\"!==n&&(a+=b.css(e,\"border\"+Zt[o]+\"Width\",!0,i)));return a}function sn(e,t,n){var r=!0,i=\"width\"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=b.support.boxSizing&&\"border-box\"===b.css(e,\"boxSizing\",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(b.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?\"border\":\"content\"),r,o)+\"px\"}function un(e){var t=o,n=Gt[e];return n||(n=ln(e,t),\"none\"!==n&&n||(Pt=(Pt||b(\"<iframe frameborder='0' width='0' height='0'/>\").css(\"cssText\",\"display:block !important\")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write(\"<!doctype html><html><body>\"),t.close(),n=ln(e,t),Pt.detach()),Gt[e]=n),n}function ln(e,t){var n=b(t.createElement(e)).appendTo(t.body),r=b.css(n[0],\"display\");return n.remove(),r}b.each([\"height\",\"width\"],function(e,n){b.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(b.css(e,\"display\"))?b.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,b.support.boxSizing&&\"border-box\"===b.css(e,\"boxSizing\",!1,i),i):0)}}}),b.support.opacity||(b.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":t?\"1\":\"\"},set:function(e,t){var n=e.style,r=e.currentStyle,i=b.isNumeric(t)?\"alpha(opacity=\"+100*t+\")\":\"\",o=r&&r.filter||n.filter||\"\";n.zoom=1,(t>=1||\"\"===t)&&\"\"===b.trim(o.replace($t,\"\"))&&n.removeAttribute&&(n.removeAttribute(\"filter\"),\"\"===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+\" \"+i)}}),b(function(){b.support.reliableMarginRight||(b.cssHooks.marginRight={get:function(e,n){return n?b.swap(e,{display:\"inline-block\"},Wt,[e,\"marginRight\"]):t}}),!b.support.pixelPosition&&b.fn.position&&b.each([\"top\",\"left\"],function(e,n){b.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?b(e).position()[n]+\"px\":r):t}}})}),b.expr&&b.expr.filters&&(b.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!b.support.reliableHiddenOffsets&&\"none\"===(e.style&&e.style.display||b.css(e,\"display\"))},b.expr.filters.visible=function(e){return!b.expr.filters.hidden(e)}),b.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){b.cssHooks[e+t]={expand:function(n){var r=0,i={},o=\"string\"==typeof n?n.split(\" \"):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(b.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\\[\\]$/,fn=/\\r?\\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;b.fn.extend({serialize:function(){return b.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=b.prop(this,\"elements\");return e?b.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!b(this).is(\":disabled\")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Nt.test(e))}).map(function(e,t){var n=b(this).val();return null==n?null:b.isArray(n)?b.map(n,function(e){return{name:t.name,value:e.replace(fn,\"\\r\\n\")}}):{name:t.name,value:n.replace(fn,\"\\r\\n\")}}).get()}}),b.param=function(e,n){var r,i=[],o=function(e,t){t=b.isFunction(t)?t():null==t?\"\":t,i[i.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(t)};if(n===t&&(n=b.ajaxSettings&&b.ajaxSettings.traditional),b.isArray(e)||e.jquery&&!b.isPlainObject(e))b.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join(\"&\").replace(cn,\"+\")};function gn(e,t,n,r){var i;if(b.isArray(t))b.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+\"[\"+(\"object\"==typeof i?t:\"\")+\"]\",i,n,r)});else if(n||\"object\"!==b.type(t))r(e,t);else for(i in t)gn(e+\"[\"+i+\"]\",t[i],n,r)}b.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(e,t){b.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),b.fn.hover=function(e,t){return this.mouseenter(e).mouseleave(t||e)};var mn,yn,vn=b.now(),bn=/\\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/gm,Nn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Cn=/^(?:GET|HEAD)$/,kn=/^\\/\\//,En=/^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,Sn=b.fn.load,An={},jn={},Dn=\"*/\".concat(\"*\");try{yn=a.href}catch(Ln){yn=o.createElement(\"a\"),yn.href=\"\",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){\"string\"!=typeof t&&(n=t,t=\"*\");var r,i=0,o=t.toLowerCase().match(w)||[];if(b.isFunction(n))while(r=o[i++])\"+\"===r[0]?(r=r.slice(1)||\"*\",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(u){var l;return o[u]=!0,b.each(e[u]||[],function(e,u){var c=u(n,r,i);return\"string\"!=typeof c||a||o[c]?a?!(l=c):t:(n.dataTypes.unshift(c),s(c),!1)}),l}return s(n.dataTypes[0])||!o[\"*\"]&&s(\"*\")}function Mn(e,n){var r,i,o=b.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&b.extend(!0,e,r),e}b.fn.load=function(e,n,r){if(\"string\"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,u=e.indexOf(\" \");return u>=0&&(i=e.slice(u,e.length),e=e.slice(0,u)),b.isFunction(n)?(r=n,n=t):n&&\"object\"==typeof n&&(a=\"POST\"),s.length>0&&b.ajax({url:e,type:a,dataType:\"html\",data:n}).done(function(e){o=arguments,s.html(i?b(\"<div>\").append(b.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},b.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){b.fn[t]=function(e){return this.on(t,e)}}),b.each([\"get\",\"post\"],function(e,n){b[n]=function(e,r,i,o){return b.isFunction(r)&&(o=o||i,i=r,r=t),b.ajax({url:e,type:n,dataType:o,data:r,success:i})}}),b.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:\"GET\",isLocal:Nn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Dn,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\"},converters:{\"* text\":e.String,\"text html\":!0,\"text json\":b.parseJSON,\"text xml\":b.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Mn(Mn(e,b.ajaxSettings),t):Mn(b.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){\"object\"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,u,l,c,p=b.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?b(f):b.event,h=b.Deferred(),g=b.Callbacks(\"once memory\"),m=p.statusCode||{},y={},v={},x=0,T=\"canceled\",N={readyState:0,getResponseHeader:function(e){var t;if(2===x){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===x?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return x||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return x||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>x)for(t in e)m[t]=[m[t],e[t]];else N.always(e[N.status]);return this},abort:function(e){var t=e||T;return l&&l.abort(t),k(0,t),this}};if(h.promise(N).complete=g.add,N.success=N.done,N.error=N.fail,p.url=((e||p.url||yn)+\"\").replace(xn,\"\").replace(kn,mn[1]+\"//\"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=b.trim(p.dataType||\"*\").toLowerCase().match(w)||[\"\"],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||(\"http:\"===r[1]?80:443))==(mn[3]||(\"http:\"===mn[1]?80:443)))),p.data&&p.processData&&\"string\"!=typeof p.data&&(p.data=b.param(p.data,p.traditional)),qn(An,p,n,N),2===x)return N;u=p.global,u&&0===b.active++&&b.event.trigger(\"ajaxStart\"),p.type=p.type.toUpperCase(),p.hasContent=!Cn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?\"&\":\"?\")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,\"$1_=\"+vn++):o+(bn.test(o)?\"&\":\"?\")+\"_=\"+vn++)),p.ifModified&&(b.lastModified[o]&&N.setRequestHeader(\"If-Modified-Since\",b.lastModified[o]),b.etag[o]&&N.setRequestHeader(\"If-None-Match\",b.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&N.setRequestHeader(\"Content-Type\",p.contentType),N.setRequestHeader(\"Accept\",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+(\"*\"!==p.dataTypes[0]?\", \"+Dn+\"; q=0.01\":\"\"):p.accepts[\"*\"]);for(i in p.headers)N.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,N,p)===!1||2===x))return N.abort();T=\"abort\";for(i in{success:1,error:1,complete:1})N[i](p[i]);if(l=qn(jn,p,n,N)){N.readyState=1,u&&d.trigger(\"ajaxSend\",[N,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){N.abort(\"timeout\")},p.timeout));try{x=1,l.send(y,k)}catch(C){if(!(2>x))throw C;k(-1,C)}}else k(-1,\"No Transport\");function k(e,n,r,i){var c,y,v,w,T,C=n;2!==x&&(x=2,s&&clearTimeout(s),l=t,a=i||\"\",N.readyState=e>0?4:0,r&&(w=_n(p,N,r)),e>=200&&300>e||304===e?(p.ifModified&&(T=N.getResponseHeader(\"Last-Modified\"),T&&(b.lastModified[o]=T),T=N.getResponseHeader(\"etag\"),T&&(b.etag[o]=T)),204===e?(c=!0,C=\"nocontent\"):304===e?(c=!0,C=\"notmodified\"):(c=Fn(p,w),C=c.state,y=c.data,v=c.error,c=!v)):(v=C,(e||!C)&&(C=\"error\",0>e&&(e=0))),N.status=e,N.statusText=(n||C)+\"\",c?h.resolveWith(f,[y,C,N]):h.rejectWith(f,[N,C,v]),N.statusCode(m),m=t,u&&d.trigger(c?\"ajaxSuccess\":\"ajaxError\",[N,p,c?y:v]),g.fireWith(f,[N,C]),u&&(d.trigger(\"ajaxComplete\",[N,p]),--b.active||b.event.trigger(\"ajaxStop\")))}return N},getScript:function(e,n){return b.get(e,t,n,\"script\")},getJSON:function(e,t,n){return b.get(e,t,n,\"json\")}});function _n(e,n,r){var i,o,a,s,u=e.contents,l=e.dataTypes,c=e.responseFields;for(s in c)s in r&&(n[c[s]]=r[s]);while(\"*\"===l[0])l.shift(),o===t&&(o=e.mimeType||n.getResponseHeader(\"Content-Type\"));if(o)for(s in u)if(u[s]&&u[s].test(o)){l.unshift(s);break}if(l[0]in r)a=l[0];else{for(s in r){if(!l[0]||e.converters[s+\" \"+l[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==l[0]&&l.unshift(a),r[a]):t}function Fn(e,t){var n,r,i,o,a={},s=0,u=e.dataTypes.slice(),l=u[0];if(e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u[1])for(i in e.converters)a[i.toLowerCase()]=e.converters[i];for(;r=u[++s];)if(\"*\"!==r){if(\"*\"!==l&&l!==r){if(i=a[l+\" \"+r]||a[\"* \"+r],!i)for(n in a)if(o=n.split(\" \"),o[1]===r&&(i=a[l+\" \"+o[0]]||a[\"* \"+o[0]])){i===!0?i=a[n]:a[n]!==!0&&(r=o[0],u.splice(s--,0,r));break}if(i!==!0)if(i&&e[\"throws\"])t=i(t);else try{t=i(t)}catch(c){return{state:\"parsererror\",error:i?c:\"No conversion from \"+l+\" to \"+r}}}l=r}return{state:\"success\",data:t}}b.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(e){return b.globalEval(e),e}}}),b.ajaxPrefilter(\"script\",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\",e.global=!1)}),b.ajaxTransport(\"script\",function(e){if(e.crossDomain){var n,r=o.head||b(\"head\")[0]||o.documentElement;return{send:function(t,i){n=o.createElement(\"script\"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,\"success\"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var On=[],Bn=/(=)\\?(?=&|$)|\\?\\?/;b.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=On.pop()||b.expando+\"_\"+vn++;return this[e]=!0,e}}),b.ajaxPrefilter(\"json jsonp\",function(n,r,i){var o,a,s,u=n.jsonp!==!1&&(Bn.test(n.url)?\"url\":\"string\"==typeof n.data&&!(n.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Bn.test(n.data)&&\"data\");return u||\"jsonp\"===n.dataTypes[0]?(o=n.jsonpCallback=b.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,u?n[u]=n[u].replace(Bn,\"$1\"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?\"&\":\"?\")+n.jsonp+\"=\"+o),n.converters[\"script json\"]=function(){return s||b.error(o+\" was not called\"),s[0]},n.dataTypes[0]=\"json\",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,On.push(o)),s&&b.isFunction(a)&&a(s[0]),s=a=t}),\"script\"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(t){}}b.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=b.ajaxSettings.xhr(),b.support.cors=!!Rn&&\"withCredentials\"in Rn,Rn=b.support.ajax=!!Rn,Rn&&b.ajaxTransport(function(n){if(!n.crossDomain||b.support.cors){var r;return{send:function(i,o){var a,s,u=n.xhr();if(n.username?u.open(n.type,n.url,n.async,n.username,n.password):u.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)u[s]=n.xhrFields[s];n.mimeType&&u.overrideMimeType&&u.overrideMimeType(n.mimeType),n.crossDomain||i[\"X-Requested-With\"]||(i[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(s in i)u.setRequestHeader(s,i[s])}catch(l){}u.send(n.hasContent&&n.data||null),r=function(e,i){var s,l,c,p;try{if(r&&(i||4===u.readyState))if(r=t,a&&(u.onreadystatechange=b.noop,$n&&delete Pn[a]),i)4!==u.readyState&&u.abort();else{p={},s=u.status,l=u.getAllResponseHeaders(),\"string\"==typeof u.responseText&&(p.text=u.responseText);try{c=u.statusText}catch(f){c=\"\"}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,l)},n.async?4===u.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},b(e).unload($n)),Pn[a]=r),u.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp(\"^(?:([+-])=|)(\"+x+\")([a-z%]*)$\",\"i\"),Jn=/queueHooks$/,Gn=[nr],Qn={\"*\":[function(e,t){var n,r,i=this.createTween(e,t),o=Yn.exec(t),a=i.cur(),s=+a||0,u=1,l=20;if(o){if(n=+o[2],r=o[3]||(b.cssNumber[e]?\"\":\"px\"),\"px\"!==r&&s){s=b.css(i.elem,e,!0)||n||1;do u=u||\".5\",s/=u,b.style(i.elem,e,s+r);while(u!==(u=i.cur()/a)&&1!==u&&--l)}i.unit=r,i.start=s,i.end=o[1]?s+(o[1]+1)*n:n}return i}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=b.now()}function Zn(e,t){b.each(t,function(t,n){var r=(Qn[t]||[]).concat(Qn[\"*\"]),i=0,o=r.length;for(;o>i;i++)if(r[i].call(e,t,n))return})}function er(e,t,n){var r,i,o=0,a=Gn.length,s=b.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,l.startTime+l.duration-t),r=n/l.duration||0,o=1-r,a=0,u=l.tweens.length;for(;u>a;a++)l.tweens[a].run(o);return s.notifyWith(e,[l,o,n]),1>o&&u?n:(s.resolveWith(e,[l]),!1)},l=s.promise({elem:e,props:b.extend({},t),opts:b.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=b.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)l.tweens[n].run(1);return t?s.resolveWith(e,[l,t]):s.rejectWith(e,[l,t]),this}}),c=l.props;for(tr(c,l.opts.specialEasing);a>o;o++)if(r=Gn[o].call(l,e,c,l.opts))return r;return Zn(l,c),b.isFunction(l.opts.start)&&l.opts.start.call(e,l),b.fx.timer(b.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function tr(e,t){var n,r,i,o,a;for(i in e)if(r=b.camelCase(i),o=t[r],n=e[i],b.isArray(n)&&(o=n[1],n=e[i]=n[0]),i!==r&&(e[r]=n,delete e[i]),a=b.cssHooks[r],a&&\"expand\"in a){n=a.expand(n),delete e[r];for(i in n)i in e||(e[i]=n[i],t[i]=o)}else t[r]=o}b.Animation=b.extend(er,{tweener:function(e,t){b.isFunction(e)?(t=e,e=[\"*\"]):e=e.split(\" \");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,u,l,c,p,f=this,d=e.style,h={},g=[],m=e.nodeType&&nn(e);n.queue||(c=b._queueHooks(e,\"fx\"),null==c.unqueued&&(c.unqueued=0,p=c.empty.fire,c.empty.fire=function(){c.unqueued||p()}),c.unqueued++,f.always(function(){f.always(function(){c.unqueued--,b.queue(e,\"fx\").length||c.empty.fire()})})),1===e.nodeType&&(\"height\"in t||\"width\"in t)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],\"inline\"===b.css(e,\"display\")&&\"none\"===b.css(e,\"float\")&&(b.support.inlineBlockNeedsLayout&&\"inline\"!==un(e.nodeName)?d.zoom=1:d.display=\"inline-block\")),n.overflow&&(d.overflow=\"hidden\",b.support.shrinkWrapBlocks||f.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}));for(i in t)if(a=t[i],Vn.exec(a)){if(delete t[i],u=u||\"toggle\"===a,a===(m?\"hide\":\"show\"))continue;g.push(i)}if(o=g.length){s=b._data(e,\"fxshow\")||b._data(e,\"fxshow\",{}),\"hidden\"in s&&(m=s.hidden),u&&(s.hidden=!m),m?b(e).show():f.done(function(){b(e).hide()}),f.done(function(){var t;b._removeData(e,\"fxshow\");for(t in h)b.style(e,t,h[t])});for(i=0;o>i;i++)r=g[i],l=f.createTween(r,m?s[r]:0),h[r]=s[r]||b.style(e,r),r in s||(s[r]=l.start,m&&(l.end=l.start,l.start=\"width\"===r||\"height\"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}b.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||\"swing\",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(b.cssNumber[n]?\"\":\"px\")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?b.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=b.css(e.elem,e.prop,\"\"),t&&\"auto\"!==t?t:0):e.elem[e.prop]},set:function(e){b.fx.step[e.prop]?b.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[b.cssProps[e.prop]]||b.cssHooks[e.prop])?b.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},b.each([\"toggle\",\"show\",\"hide\"],function(e,t){var n=b.fn[t];b.fn[t]=function(e,r,i){return null==e||\"boolean\"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),b.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=b.isEmptyObject(e),o=b.speed(t,n,r),a=function(){var t=er(this,b.extend({},e),o);a.finish=function(){t.stop(!0)},(i||b._data(this,\"finish\"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return\"string\"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,n=null!=e&&e+\"queueHooks\",o=b.timers,a=b._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&b.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||\"fx\"),this.each(function(){var t,n=b._data(this),r=n[e+\"queue\"],i=n[e+\"queueHooks\"],o=b.timers,a=r?r.length:0;for(n.finish=!0,b.queue(this,e,[]),i&&i.cur&&i.cur.finish&&i.cur.finish.call(this),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r[\"margin\"+n]=r[\"padding\"+n]=e;return t&&(r.opacity=r.width=e),r}b.each({slideDown:ir(\"show\"),slideUp:ir(\"hide\"),slideToggle:ir(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){b.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),b.speed=function(e,t,n){var r=e&&\"object\"==typeof e?b.extend({},e):{complete:n||!n&&t||b.isFunction(e)&&e,duration:e,easing:n&&t||t&&!b.isFunction(t)&&t};return r.duration=b.fx.off?0:\"number\"==typeof r.duration?r.duration:r.duration in b.fx.speeds?b.fx.speeds[r.duration]:b.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){b.isFunction(r.old)&&r.old.call(this),r.queue&&b.dequeue(this,r.queue)},r},b.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},b.timers=[],b.fx=rr.prototype.init,b.fx.tick=function(){var e,n=b.timers,r=0;for(Xn=b.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||b.fx.stop(),Xn=t},b.fx.timer=function(e){e()&&b.timers.push(e)&&b.fx.start()},b.fx.interval=13,b.fx.start=function(){Un||(Un=setInterval(b.fx.tick,b.fx.interval))},b.fx.stop=function(){clearInterval(Un),Un=null},b.fx.speeds={slow:600,fast:200,_default:400},b.fx.step={},b.expr&&b.expr.filters&&(b.expr.filters.animated=function(e){return b.grep(b.timers,function(t){return e===t.elem}).length}),b.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){b.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,b.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},b.offset={setOffset:function(e,t,n){var r=b.css(e,\"position\");\"static\"===r&&(e.style.position=\"relative\");var i=b(e),o=i.offset(),a=b.css(e,\"top\"),s=b.css(e,\"left\"),u=(\"absolute\"===r||\"fixed\"===r)&&b.inArray(\"auto\",[a,s])>-1,l={},c={},p,f;u?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),b.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(l.top=t.top-o.top+p),null!=t.left&&(l.left=t.left-o.left+f),\"using\"in t?t.using.call(e,l):i.css(l)}},b.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return\"fixed\"===b.css(r,\"position\")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),b.nodeName(e[0],\"html\")||(n=e.offset()),n.top+=b.css(e[0],\"borderTopWidth\",!0),n.left+=b.css(e[0],\"borderLeftWidth\",!0)),{top:t.top-n.top-b.css(r,\"marginTop\",!0),left:t.left-n.left-b.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||o.documentElement;while(e&&!b.nodeName(e,\"html\")&&\"static\"===b.css(e,\"position\"))e=e.offsetParent;return e||o.documentElement})}}),b.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(e,n){var r=/Y/.test(n);b.fn[e]=function(i){return b.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?b(a).scrollLeft():o,r?o:b(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return b.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}b.each({Height:\"height\",Width:\"width\"},function(e,n){b.each({padding:\"inner\"+e,content:n,\"\":\"outer\"+e},function(r,i){b.fn[i]=function(i,o){var a=arguments.length&&(r||\"boolean\"!=typeof i),s=r||(i===!0||o===!0?\"margin\":\"border\");return b.access(this,function(n,r,i){var o;return b.isWindow(n)?n.document.documentElement[\"client\"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body[\"scroll\"+e],o[\"scroll\"+e],n.body[\"offset\"+e],o[\"offset\"+e],o[\"client\"+e])):i===t?b.css(n,r,s):b.style(n,r,i,s)},n,a?i:t,a,null)}})}),e.jQuery=e.$=b,\"function\"==typeof define&&define.amd&&define.amd.jQuery&&define(\"jquery\",[],function(){return b})})(window);","/*!\n\n Support JS for legacy browsers.\n Includes:\n\n HTML5 Shiv\n @afarkas @jdalton @jon_neal @rem\n MIT/GPL2 Licensed\n https://github.com/aFarkas/html5shiv\n\n matchMedia() polyfill\n (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license\n\n Respond.js\n min/max-width media query polyfill\n (c) Scott Jehl. MIT/GPLv2 Lic.\n http://j.mp/respondjs\n\n */\n/*\n HTML5 Shiv v3.6.2 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n */\n(function(l,f){function m(){var a=e.elements;return\"string\"==typeof a?a.split(\" \"):a}function i(a){var b=n[a[o]];b||(b={},h++,a[o]=h,n[h]=b);return b}function p(a,b,c){b||(b=f);if(g)return b.createElement(a);c||(c=i(b));b=c.cache[a]?c.cache[a].cloneNode():r.test(a)?(c.cache[a]=c.createElem(a)).cloneNode():c.createElem(a);return b.canHaveChildren&&!s.test(a)?c.frag.appendChild(b):b}function t(a,b){if(!b.cache)b.cache={},b.createElem=a.createElement,b.createFrag=a.createDocumentFragment,b.frag=b.createFrag();\n    a.createElement=function(c){return!e.shivMethods?b.createElem(c):p(c,a,b)};a.createDocumentFragment=Function(\"h,f\",\"return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(\"+m().join().replace(/\\w+/g,function(a){b.createElem(a);b.frag.createElement(a);return'c(\"'+a+'\")'})+\");return n}\")(e,b.frag)}function q(a){a||(a=f);var b=i(a);if(e.shivCSS&&!j&&!b.hasCSS){var c,d=a;c=d.createElement(\"p\");d=d.getElementsByTagName(\"head\")[0]||d.documentElement;c.innerHTML=\"x<style>article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}</style>\";\n    c=d.insertBefore(c.lastChild,d.firstChild);b.hasCSS=!!c}g||t(a,b);return a}var k=l.html5||{},s=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,r=/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,j,o=\"_html5shiv\",h=0,n={},g;(function(){try{var a=f.createElement(\"a\");a.innerHTML=\"<xyz></xyz>\";j=\"hidden\"in a;var b;if(!(b=1==a.childNodes.length)){f.createElement(\"a\");var c=f.createDocumentFragment();b=\"undefined\"==typeof c.cloneNode||\n\"undefined\"==typeof c.createDocumentFragment||\"undefined\"==typeof c.createElement}g=b}catch(d){g=j=!0}})();var e={elements:k.elements||\"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup main mark meter nav output progress section summary time video\",version:\"3.6.2\",shivCSS:!1!==k.shivCSS,supportsUnknownElements:g,shivMethods:!1!==k.shivMethods,type:\"default\",shivDocument:q,createElement:p,createDocumentFragment:function(a,b){a||(a=f);if(g)return a.createDocumentFragment();\n    for(var b=b||i(a),c=b.frag.cloneNode(),d=0,e=m(),h=e.length;d<h;d++)c.createElement(e[d]);return c}};l.html5=e;q(f)})(this,document);\n/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\n\nwindow.matchMedia = window.matchMedia || (function( doc, undefined ) {\n\n    \"use strict\";\n\n    var bool,\n        docElem = doc.documentElement,\n        refNode = docElem.firstElementChild || docElem.firstChild,\n    // fakeBody required for <FF4 when executed in <head>\n        fakeBody = doc.createElement( \"body\" ),\n        div = doc.createElement( \"div\" );\n\n    div.id = \"mq-test-1\";\n    div.style.cssText = \"position:absolute;top:-100em\";\n    fakeBody.style.background = \"none\";\n    fakeBody.appendChild(div);\n\n    return function(q){\n\n        div.innerHTML = \"&shy;<style media=\\\"\" + q + \"\\\"> #mq-test-1 { width: 42px; }</style>\";\n\n        docElem.insertBefore( fakeBody, refNode );\n        bool = div.offsetWidth === 42;\n        docElem.removeChild( fakeBody );\n\n        return {\n            matches: bool,\n            media: q\n        };\n\n    };\n\n}( document ));\n\n\n\n\n\n/*! Respond.js v1.1.0: min/max-width media query polyfill. (c) Scott Jehl. MIT/GPLv2 Lic. j.mp/respondjs  */\n(function( win ){\n\n    \"use strict\";\n\n    //exposed namespace\n    var respond = {};\n    win.respond = respond;\n\n    //define update even in native-mq-supporting browsers, to avoid errors\n    respond.update = function(){};\n\n    //expose media query support flag for external use\n    respond.mediaQueriesSupported\t= win.matchMedia && win.matchMedia( \"only all\" ).matches;\n\n    //if media queries are supported, exit here\n    if( respond.mediaQueriesSupported ){\n        return;\n    }\n\n    //define vars\n    var doc = win.document,\n        docElem = doc.documentElement,\n        mediastyles = [],\n        rules = [],\n        appendedEls = [],\n        parsedSheets = {},\n        resizeThrottle = 30,\n        head = doc.getElementsByTagName( \"head\" )[0] || docElem,\n        base = doc.getElementsByTagName( \"base\" )[0],\n        links = head.getElementsByTagName( \"link\" ),\n        requestQueue = [],\n\n    //loop stylesheets, send text content to translate\n        ripCSS = function(){\n\n            for( var i = 0; i < links.length; i++ ){\n                var sheet = links[ i ],\n                    href = sheet.href,\n                    media = sheet.media,\n                    isCSS = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\n\n                //only links plz and prevent re-parsing\n                if( !!href && isCSS && !parsedSheets[ href ] ){\n                    // selectivizr exposes css through the rawCssText expando\n                    if (sheet.styleSheet && sheet.styleSheet.rawCssText) {\n                        translate( sheet.styleSheet.rawCssText, href, media );\n                        parsedSheets[ href ] = true;\n                    } else {\n                        if( (!/^([a-zA-Z:]*\\/\\/)/.test( href ) && !base) ||\n                            href.replace( RegExp.$1, \"\" ).split( \"/\" )[0] === win.location.host ){\n                            requestQueue.push( {\n                                href: href,\n                                media: media\n                            } );\n                        }\n                    }\n                }\n            }\n            makeRequests();\n        },\n\n    //recurse through request queue, get css text\n        makeRequests\t= function(){\n            if( requestQueue.length ){\n                var thisRequest = requestQueue.shift();\n\n                ajax( thisRequest.href, function( styles ){\n                    translate( styles, thisRequest.href, thisRequest.media );\n                    parsedSheets[ thisRequest.href ] = true;\n\n                    // by wrapping recursive function call in setTimeout\n                    // we prevent \"Stack overflow\" error in IE7\n                    win.setTimeout(function(){ makeRequests(); },0);\n                } );\n            }\n        },\n\n    //find media blocks in css text, convert to style blocks\n        translate = function( styles, href, media ){\n            var qs = styles.match(  /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi ),\n                ql = qs && qs.length || 0;\n\n            //try to get CSS path\n            href = href.substring( 0, href.lastIndexOf( \"/\" ) );\n\n            var repUrls\t= function( css ){\n                    return css.replace( /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g, \"$1\" + href + \"$2$3\" );\n                },\n                useMedia = !ql && media;\n\n            //if path exists, tack on trailing slash\n            if( href.length ){ href += \"/\"; }\n\n            //if no internal queries exist, but media attr does, use that\n            //note: this currently lacks support for situations where a media attr is specified on a link AND\n            //its associated stylesheet has internal CSS media queries.\n            //In those cases, the media attribute will currently be ignored.\n            if( useMedia ){\n                ql = 1;\n            }\n\n            for( var i = 0; i < ql; i++ ){\n                var fullq, thisq, eachq, eql;\n\n                //media attr\n                if( useMedia ){\n                    fullq = media;\n                    rules.push( repUrls( styles ) );\n                }\n                //parse for styles\n                else{\n                    fullq = qs[ i ].match( /@media *([^\\{]+)\\{([\\S\\s]+?)$/ ) && RegExp.$1;\n                    rules.push( RegExp.$2 && repUrls( RegExp.$2 ) );\n                }\n\n                eachq = fullq.split( \",\" );\n                eql\t= eachq.length;\n\n                for( var j = 0; j < eql; j++ ){\n                    thisq = eachq[ j ];\n                    mediastyles.push( {\n                        media : thisq.split( \"(\" )[ 0 ].match( /(only\\s+)?([a-zA-Z]+)\\s?/ ) && RegExp.$2 || \"all\",\n                        rules : rules.length - 1,\n                        hasquery : thisq.indexOf(\"(\") > -1,\n                        minw : thisq.match( /\\(\\s*min\\-width\\s*:\\s*(\\s*[0-9\\.]+)(px|em)\\s*\\)/ ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" ),\n                        maxw : thisq.match( /\\(\\s*max\\-width\\s*:\\s*(\\s*[0-9\\.]+)(px|em)\\s*\\)/ ) && parseFloat( RegExp.$1 ) + ( RegExp.$2 || \"\" )\n                    } );\n                }\n            }\n\n            applyMedia();\n        },\n\n        lastCall,\n\n        resizeDefer,\n\n    // returns the value of 1em in pixels\n        getEmValue = function() {\n            var ret,\n                div = doc.createElement('div'),\n                body = doc.body,\n                fakeUsed = false;\n\n            div.style.cssText = \"position:absolute;font-size:1em;width:1em\";\n\n            if( !body ){\n                body = fakeUsed = doc.createElement( \"body\" );\n                body.style.background = \"none\";\n            }\n\n            body.appendChild( div );\n\n            docElem.insertBefore( body, docElem.firstChild );\n\n            ret = div.offsetWidth;\n\n            if( fakeUsed ){\n                docElem.removeChild( body );\n            }\n            else {\n                body.removeChild( div );\n            }\n\n            //also update eminpx before returning\n            ret = eminpx = parseFloat(ret);\n\n            return ret;\n        },\n\n    //cached container for 1em value, populated the first time it's needed\n        eminpx,\n\n    //enable/disable styles\n        applyMedia = function( fromResize ){\n            var name = \"clientWidth\",\n                docElemProp = docElem[ name ],\n                currWidth = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[ name ] || docElemProp,\n                styleBlocks\t= {},\n                lastLink = links[ links.length-1 ],\n                now = (new Date()).getTime();\n\n            //throttle resize calls\n            if( fromResize && lastCall && now - lastCall < resizeThrottle ){\n                win.clearTimeout( resizeDefer );\n                resizeDefer = win.setTimeout( applyMedia, resizeThrottle );\n                return;\n            }\n            else {\n                lastCall = now;\n            }\n\n            for( var i in mediastyles ){\n                if( mediastyles.hasOwnProperty( i ) ){\n                    var thisstyle = mediastyles[ i ],\n                        min = thisstyle.minw,\n                        max = thisstyle.maxw,\n                        minnull = min === null,\n                        maxnull = max === null,\n                        em = \"em\";\n\n                    if( !!min ){\n                        min = parseFloat( min ) * ( min.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\n                    }\n                    if( !!max ){\n                        max = parseFloat( max ) * ( max.indexOf( em ) > -1 ? ( eminpx || getEmValue() ) : 1 );\n                    }\n\n                    // if there's no media query at all (the () part), or min or max is not null, and if either is present, they're true\n                    if( !thisstyle.hasquery || ( !minnull || !maxnull ) && ( minnull || currWidth >= min ) && ( maxnull || currWidth <= max ) ){\n                        if( !styleBlocks[ thisstyle.media ] ){\n                            styleBlocks[ thisstyle.media ] = [];\n                        }\n                        styleBlocks[ thisstyle.media ].push( rules[ thisstyle.rules ] );\n                    }\n                }\n            }\n\n            //remove any existing respond style element(s)\n            for( var j in appendedEls ){\n                if( appendedEls.hasOwnProperty( j ) ){\n                    if( appendedEls[ j ] && appendedEls[ j ].parentNode === head ){\n                        head.removeChild( appendedEls[ j ] );\n                    }\n                }\n            }\n\n            //inject active styles, grouped by media type\n            for( var k in styleBlocks ){\n                if( styleBlocks.hasOwnProperty( k ) ){\n                    var ss = doc.createElement( \"style\" ),\n                        css = styleBlocks[ k ].join( \"\\n\" );\n\n                    ss.type = \"text/css\";\n                    ss.media = k;\n\n                    //originally, ss was appended to a documentFragment and sheets were appended in bulk.\n                    //this caused crashes in IE in a number of circumstances, such as when the HTML element had a bg image set, so appending beforehand seems best. Thanks to @dvelyk for the initial research on this one!\n                    head.insertBefore( ss, lastLink.nextSibling );\n\n                    if ( ss.styleSheet ){\n                        ss.styleSheet.cssText = css;\n                    }\n                    else {\n                        ss.appendChild( doc.createTextNode( css ) );\n                    }\n\n                    //push to appendedEls to track for later removal\n                    appendedEls.push( ss );\n                }\n            }\n        },\n    //tweaked Ajax functions from Quirksmode\n        ajax = function( url, callback ) {\n            var req = xmlHttp();\n            if (!req){\n                return;\n            }\n            req.open( \"GET\", url, true );\n            req.onreadystatechange = function () {\n                if ( req.readyState !== 4 || req.status !== 200 && req.status !== 304 ){\n                    return;\n                }\n                callback( req.responseText );\n            };\n            if ( req.readyState === 4 ){\n                return;\n            }\n            req.send( null );\n        },\n    //define ajax obj\n        xmlHttp = (function() {\n            var xmlhttpmethod = false;\n            try {\n                xmlhttpmethod = new win.XMLHttpRequest();\n            }\n            catch( e ){\n                xmlhttpmethod = new win.ActiveXObject( \"Microsoft.XMLHTTP\" );\n            }\n            return function(){\n                return xmlhttpmethod;\n            };\n        })();\n\n    //translate CSS\n    ripCSS();\n\n    //expose update for re-running respond later on\n    respond.update = ripCSS;\n\n    //adjust on resize\n    function callMedia(){\n        applyMedia( true );\n    }\n    if( win.addEventListener ){\n        win.addEventListener( \"resize\", callMedia, false );\n    }\n    else if( win.attachEvent ){\n        win.attachEvent( \"onresize\", callMedia );\n    }\n})(this);","/* http://prismjs.com/download.html?themes=prism&languages=markup+css+clike+javascript+http+less+php+twig */\nself=\"undefined\"!=typeof window?window:\"undefined\"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{};var Prism=function(){var e=/\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i,t=self.Prism={util:{encode:function(e){return e instanceof n?new n(e.type,t.util.encode(e.content),e.alias):\"Array\"===t.util.type(e)?e.map(t.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1]},clone:function(e){var n=t.util.type(e);switch(n){case\"Object\":var a={};for(var r in e)e.hasOwnProperty(r)&&(a[r]=t.util.clone(e[r]));return a;case\"Array\":return e.map(function(e){return t.util.clone(e)})}return e}},languages:{extend:function(e,n){var a=t.util.clone(t.languages[e]);for(var r in n)a[r]=n[r];return a},insertBefore:function(e,n,a,r){r=r||t.languages;var i=r[e];if(2==arguments.length){a=arguments[1];for(var l in a)a.hasOwnProperty(l)&&(i[l]=a[l]);return i}var s={};for(var o in i)if(i.hasOwnProperty(o)){if(o==n)for(var l in a)a.hasOwnProperty(l)&&(s[l]=a[l]);s[o]=i[o]}return t.languages.DFS(t.languages,function(t,n){n===r[e]&&t!=e&&(this[t]=s)}),r[e]=s},DFS:function(e,n,a){for(var r in e)e.hasOwnProperty(r)&&(n.call(e,r,e[r],a||r),\"Object\"===t.util.type(e[r])?t.languages.DFS(e[r],n):\"Array\"===t.util.type(e[r])&&t.languages.DFS(e[r],n,r))}},highlightAll:function(e,n){for(var a,r=document.querySelectorAll('code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'),i=0;a=r[i++];)t.highlightElement(a,e===!0,n)},highlightElement:function(a,r,i){for(var l,s,o=a;o&&!e.test(o.className);)o=o.parentNode;if(o&&(l=(o.className.match(e)||[,\"\"])[1],s=t.languages[l]),s){a.className=a.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+l,o=a.parentNode,/pre/i.test(o.nodeName)&&(o.className=o.className.replace(e,\"\").replace(/\\s+/g,\" \")+\" language-\"+l);var u=a.textContent;if(u){u=u.replace(/^(?:\\r?\\n|\\r)/,\"\");var g={element:a,language:l,grammar:s,code:u};if(t.hooks.run(\"before-highlight\",g),r&&self.Worker){var c=new Worker(t.filename);c.onmessage=function(e){g.highlightedCode=n.stringify(JSON.parse(e.data),l),t.hooks.run(\"before-insert\",g),g.element.innerHTML=g.highlightedCode,i&&i.call(g.element),t.hooks.run(\"after-highlight\",g)},c.postMessage(JSON.stringify({language:g.language,code:g.code}))}else g.highlightedCode=t.highlight(g.code,g.grammar,g.language),t.hooks.run(\"before-insert\",g),g.element.innerHTML=g.highlightedCode,i&&i.call(a),t.hooks.run(\"after-highlight\",g)}}},highlight:function(e,a,r){var i=t.tokenize(e,a);return n.stringify(t.util.encode(i),r)},tokenize:function(e,n){var a=t.Token,r=[e],i=n.rest;if(i){for(var l in i)n[l]=i[l];delete n.rest}e:for(var l in n)if(n.hasOwnProperty(l)&&n[l]){var s=n[l];s=\"Array\"===t.util.type(s)?s:[s];for(var o=0;o<s.length;++o){var u=s[o],g=u.inside,c=!!u.lookbehind,f=0,h=u.alias;u=u.pattern||u;for(var p=0;p<r.length;p++){var d=r[p];if(r.length>e.length)break e;if(!(d instanceof a)){u.lastIndex=0;var m=u.exec(d);if(m){c&&(f=m[1].length);var y=m.index-1+f,m=m[0].slice(f),v=m.length,k=y+v,b=d.slice(0,y+1),w=d.slice(k+1),N=[p,1];b&&N.push(b);var O=new a(l,g?t.tokenize(m,g):m,h);N.push(O),w&&N.push(w),Array.prototype.splice.apply(r,N)}}}}}return r},hooks:{all:{},add:function(e,n){var a=t.hooks.all;a[e]=a[e]||[],a[e].push(n)},run:function(e,n){var a=t.hooks.all[e];if(a&&a.length)for(var r,i=0;r=a[i++];)r(n)}}},n=t.Token=function(e,t,n){this.type=e,this.content=t,this.alias=n};if(n.stringify=function(e,a,r){if(\"string\"==typeof e)return e;if(\"Array\"===t.util.type(e))return e.map(function(t){return n.stringify(t,a,e)}).join(\"\");var i={type:e.type,content:n.stringify(e.content,a,r),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:a,parent:r};if(\"comment\"==i.type&&(i.attributes.spellcheck=\"true\"),e.alias){var l=\"Array\"===t.util.type(e.alias)?e.alias:[e.alias];Array.prototype.push.apply(i.classes,l)}t.hooks.run(\"wrap\",i);var s=\"\";for(var o in i.attributes)s+=o+'=\"'+(i.attributes[o]||\"\")+'\"';return\"<\"+i.tag+' class=\"'+i.classes.join(\" \")+'\" '+s+\">\"+i.content+\"</\"+i.tag+\">\"},!self.document)return self.addEventListener?(self.addEventListener(\"message\",function(e){var n=JSON.parse(e.data),a=n.language,r=n.code;self.postMessage(JSON.stringify(t.util.encode(t.tokenize(r,t.languages[a])))),self.close()},!1),self.Prism):self.Prism;var a=document.getElementsByTagName(\"script\");return a=a[a.length-1],a&&(t.filename=a.src,document.addEventListener&&!a.hasAttribute(\"data-manual\")&&document.addEventListener(\"DOMContentLoaded\",t.highlightAll)),self.Prism}();\"undefined\"!=typeof module&&module.exports&&(module.exports=Prism);;\nPrism.languages.markup={comment:/<!--[\\w\\W]*?-->/,prolog:/<\\?.+?\\?>/,doctype:/<!DOCTYPE.+?>/,cdata:/<!\\[CDATA\\[[\\w\\W]*?]]>/i,tag:{pattern:/<\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/i,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"attr-value\":{pattern:/=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,inside:{punctuation:/=|>|\"/}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:/&#?[\\da-z]{1,8};/i},Prism.hooks.add(\"wrap\",function(t){\"entity\"===t.type&&(t.attributes.title=t.content.replace(/&amp;/,\"&\"))});;\nPrism.languages.css={comment:/\\/\\*[\\w\\W]*?\\*\\//,atrule:{pattern:/@[\\w-]+?.*?(;|(?=\\s*\\{))/i,inside:{punctuation:/[;:]/}},url:/url\\((?:([\"'])(\\\\\\n|\\\\?.)*?\\1|.*?)\\)/i,selector:/[^\\{\\}\\s][^\\{\\};]*(?=\\s*\\{)/,string:/(\"|')(\\\\\\n|\\\\?.)*?\\1/,property:/(\\b|\\B)[\\w-]+(?=\\s*:)/i,important:/\\B!important\\b/i,punctuation:/[\\{\\};:]/,\"function\":/[-a-z0-9]+(?=\\()/i},Prism.languages.markup&&(Prism.languages.insertBefore(\"markup\",\"tag\",{style:{pattern:/<style[\\w\\W]*?>[\\w\\W]*?<\\/style>/i,inside:{tag:{pattern:/<style[\\w\\W]*?>|<\\/style>/i,inside:Prism.languages.markup.tag.inside},rest:Prism.languages.css},alias:\"language-css\"}}),Prism.languages.insertBefore(\"inside\",\"attr-value\",{\"style-attr\":{pattern:/\\s*style=(\"|').*?\\1/i,inside:{\"attr-name\":{pattern:/^\\s*style/i,inside:Prism.languages.markup.tag.inside},punctuation:/^\\s*=\\s*['\"]|['\"]\\s*$/,\"attr-value\":{pattern:/.+/i,inside:Prism.languages.css}},alias:\"language-css\"}},Prism.languages.markup.tag));;\nPrism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:/(\"|')(\\\\\\n|\\\\?.)*?\\1/,\"class-name\":{pattern:/((?:(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,lookbehind:!0,inside:{punctuation:/(\\.|\\\\)/}},keyword:/\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\"boolean\":/\\b(true|false)\\b/,\"function\":{pattern:/[a-z0-9_]+\\(/i,inside:{punctuation:/\\(/}},number:/\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee]-?\\d+)?)\\b/,operator:/[-+]{1,2}|!|<=?|>=?|={1,3}|&{1,2}|\\|?\\||\\?|\\*|\\/|~|\\^|%/,ignore:/&(lt|gt|amp);/i,punctuation:/[{}[\\];(),.:]/};;\nPrism.languages.javascript=Prism.languages.extend(\"clike\",{keyword:/\\b(as|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/,number:/\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\"function\":/(?!\\d)[a-z0-9_$]+(?=\\()/i}),Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0}}),Prism.languages.insertBefore(\"javascript\",\"string\",{\"template-string\":{pattern:/`(?:\\\\`|\\\\?[^`])*`/,inside:{interpolation:{pattern:/\\$\\{[^}]+\\}/,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}}}),Prism.languages.markup&&Prism.languages.insertBefore(\"markup\",\"tag\",{script:{pattern:/<script[\\w\\W]*?>[\\w\\W]*?<\\/script>/i,inside:{tag:{pattern:/<script[\\w\\W]*?>|<\\/script>/i,inside:Prism.languages.markup.tag.inside},rest:Prism.languages.javascript},alias:\"language-javascript\"}});;\nPrism.languages.http={\"request-line\":{pattern:/^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/,inside:{property:/^\\b(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\"attr-name\":/:\\w+/}},\"response-status\":{pattern:/^HTTP\\/1.[01] [0-9]+.*/,inside:{property:/[0-9]+[A-Z\\s-]+$/i}},keyword:/^[\\w-]+:(?=.+)/m};var httpLanguages={\"application/json\":Prism.languages.javascript,\"application/xml\":Prism.languages.markup,\"text/xml\":Prism.languages.markup,\"text/html\":Prism.languages.markup};for(var contentType in httpLanguages)if(httpLanguages[contentType]){var options={};options[contentType]={pattern:new RegExp(\"(content-type:\\\\s*\"+contentType+\"[\\\\w\\\\W]*?)\\\\n\\\\n[\\\\w\\\\W]*\",\"i\"),lookbehind:!0,inside:{rest:httpLanguages[contentType]}},Prism.languages.insertBefore(\"http\",\"keyword\",options)};\nPrism.languages.less=Prism.languages.extend(\"css\",{comment:[/\\/\\*[\\w\\W]*?\\*\\//,{pattern:/(^|[^\\\\])\\/\\/.*/,lookbehind:!0}],atrule:{pattern:/@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,inside:{punctuation:/[:()]/}},selector:{pattern:/(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,inside:{variable:/@+[\\w-]+/}},property:/(\\b|\\B)(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,punctuation:/[{}();:,]/,operator:/[+\\-*\\/]/}),Prism.languages.insertBefore(\"less\",\"punctuation\",{\"function\":Prism.languages.less.function}),Prism.languages.insertBefore(\"less\",\"property\",{variable:[{pattern:/@[\\w-]+\\s*:/,inside:{punctuation:/:/}},/@@?[\\w-]+/],\"mixin-usage\":{pattern:/([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,lookbehind:!0,alias:\"function\"}});;\nPrism.languages.php=Prism.languages.extend(\"clike\",{keyword:/\\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,constant:/\\b[A-Z0-9_]{2,}\\b/,comment:{pattern:/(^|[^\\\\])(\\/\\*[\\w\\W]*?\\*\\/|(^|[^:])(\\/\\/).*?(\\r?\\n|$))/,lookbehind:!0}}),Prism.languages.insertBefore(\"php\",\"class-name\",{\"shell-comment\":{pattern:/(^|[^\\\\])#.*?(\\r?\\n|$)/,lookbehind:!0,alias:\"comment\"}}),Prism.languages.insertBefore(\"php\",\"keyword\",{delimiter:/(\\?>|<\\?php|<\\?)/i,variable:/(\\$\\w+)\\b/i,\"package\":{pattern:/(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,lookbehind:!0,inside:{punctuation:/\\\\/}}}),Prism.languages.insertBefore(\"php\",\"operator\",{property:{pattern:/(->)[\\w]+/,lookbehind:!0}}),Prism.languages.markup&&(Prism.hooks.add(\"before-highlight\",function(e){\"php\"===e.language&&(e.tokenStack=[],e.backupCode=e.code,e.code=e.code.replace(/(?:<\\?php|<\\?)[\\w\\W]*?(?:\\?>)/gi,function(n){return e.tokenStack.push(n),\"{{{PHP\"+e.tokenStack.length+\"}}}\"}))}),Prism.hooks.add(\"before-insert\",function(e){\"php\"===e.language&&(e.code=e.backupCode,delete e.backupCode)}),Prism.hooks.add(\"after-highlight\",function(e){if(\"php\"===e.language){for(var n,a=0;n=e.tokenStack[a];a++)e.highlightedCode=e.highlightedCode.replace(\"{{{PHP\"+(a+1)+\"}}}\",Prism.highlight(n,e.grammar,\"php\"));e.element.innerHTML=e.highlightedCode}}),Prism.hooks.add(\"wrap\",function(e){\"php\"===e.language&&\"markup\"===e.type&&(e.content=e.content.replace(/(\\{\\{\\{PHP[0-9]+\\}\\}\\})/g,'<span class=\"token php\">$1</span>'))}),Prism.languages.insertBefore(\"php\",\"comment\",{markup:{pattern:/<[^?]\\/?(.*?)>/,inside:Prism.languages.markup},php:/\\{\\{\\{PHP[0-9]+\\}\\}\\}/}));;\nPrism.languages.twig={comment:/\\{#[\\s\\S]*?#\\}/,tag:{pattern:/(\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\})/,inside:{ld:{pattern:/^(\\{\\{\\-?|\\{%\\-?\\s*\\w+)/,inside:{punctuation:/^(\\{\\{|\\{%)\\-?/,keyword:/\\w+/}},rd:{pattern:/\\-?(%\\}|\\}\\})$/,inside:{punctuation:/.*/}},string:{pattern:/(\"|')(\\\\?.)*?\\1/,inside:{punctuation:/^('|\")|('|\")$/}},keyword:/\\b(if)\\b/,\"boolean\":/\\b(true|false|null)\\b/,number:/\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee]-?\\d+)?)\\b/,operator:/==|=|!=|<|>|>=|<=|\\+|\\-|~|\\*|\\/|\\/\\/|%|\\*\\*|\\|/,\"space-operator\":{pattern:/(\\s)(\\b(not|b\\-and|b\\-xor|b\\-or|and|or|in|matches|starts with|ends with|is)\\b|\\?|:|\\?:)(?=\\s)/,lookbehind:!0,inside:{operator:/.*/}},property:/\\b[a-zA-Z_][a-zA-Z0-9_]*\\b/,punctuation:/\\(|\\)|\\[\\]|\\[|\\]|\\{|\\}|:|\\.|,/}},other:{pattern:/[\\s\\S]*/,inside:Prism.languages.markup}};;\n","//\n// showdown.js -- A javascript port of Markdown.\n//\n// Copyright (c) 2007 John Fraser.\n//\n// Original Markdown Copyright (c) 2004-2005 John Gruber\n//   <http://daringfireball.net/projects/markdown/>\n//\n// Redistributable under a BSD-style open source license.\n// See license.txt for more information.\n//\n// The full source distribution is at:\n//\n//\t\t\t\tA A L\n//\t\t\t\tT C A\n//\t\t\t\tT K B\n//\n//   <http://www.attacklab.net/>\n//\n\n//\n// Wherever possible, Showdown is a straight, line-by-line port\n// of the Perl version of Markdown.\n//\n// This is not a normal parser design; it's basically just a\n// series of string substitutions.  It's hard to read and\n// maintain this way,  but keeping Showdown close to the original\n// design makes it easier to port new features.\n//\n// More importantly, Showdown behaves like markdown.pl in most\n// edge cases.  So web applications can do client-side preview\n// in Javascript, and then build identical HTML on the server.\n//\n// This port needs the new RegExp functionality of ECMA 262,\n// 3rd Edition (i.e. Javascript 1.5).  Most modern web browsers\n// should do fine.  Even with the new regular expression features,\n// We do a lot of work to emulate Perl's regex functionality.\n// The tricky changes in this file mostly have the \"attacklab:\"\n// label.  Major or self-explanatory changes don't.\n//\n// Smart diff tools like Araxis Merge will be able to match up\n// this file with markdown.pl in a useful way.  A little tweaking\n// helps: in a copy of markdown.pl, replace \"#\" with \"//\" and\n// replace \"$text\" with \"text\".  Be sure to ignore whitespace\n// and line endings.\n//\n\n\n//\n// Showdown usage:\n//\n//   var text = \"Markdown *rocks*.\";\n//\n//   var converter = new Showdown.converter();\n//   var html = converter.makeHtml(text);\n//\n//   alert(html);\n//\n// Note: move the sample code to the bottom of this\n// file before uncommenting it.\n//\n\n\n//\n// Showdown namespace\n//\nvar Showdown = { extensions: {} };\n\n//\n// forEach\n//\nvar forEach = Showdown.forEach = function(obj, callback) {\n\tif (typeof obj.forEach === 'function') {\n\t\tobj.forEach(callback);\n\t} else {\n\t\tvar i, len = obj.length;\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tcallback(obj[i], i, obj);\n\t\t}\n\t}\n};\n\n//\n// Standard extension naming\n//\nvar stdExtName = function(s) {\n\treturn s.replace(/[_-]||\\s/g, '').toLowerCase();\n};\n\n//\n// converter\n//\n// Wraps all \"globals\" so that the only thing\n// exposed is makeHtml().\n//\nShowdown.converter = function(converter_options) {\n\n//\n// Globals:\n//\n\n// Global hashes, used by various utility routines\nvar g_urls;\nvar g_titles;\nvar g_html_blocks;\n\n// Used to track when we're inside an ordered or unordered list\n// (see _ProcessListItems() for details):\nvar g_list_level = 0;\n\n// Global extensions\nvar g_lang_extensions = [];\nvar g_output_modifiers = [];\n\n\n//\n// Automatic Extension Loading (node only):\n//\n\nif (typeof module !== 'undefind' && typeof exports !== 'undefined' && typeof require !== 'undefind') {\n\tvar fs = require('fs');\n\n\tif (fs) {\n\t\t// Search extensions folder\n\t\tvar extensions = fs.readdirSync((__dirname || '.')+'/extensions').filter(function(file){\n\t\t\treturn ~file.indexOf('.js');\n\t\t}).map(function(file){\n\t\t\treturn file.replace(/\\.js$/, '');\n\t\t});\n\t\t// Load extensions into Showdown namespace\n\t\tShowdown.forEach(extensions, function(ext){\n\t\t\tvar name = stdExtName(ext);\n\t\t\tShowdown.extensions[name] = require('./extensions/' + ext);\n\t\t});\n\t}\n}\n\nthis.makeHtml = function(text) {\n//\n// Main function. The order in which other subs are called here is\n// essential. Link and image substitutions need to happen before\n// _EscapeSpecialCharsWithinTagAttributes(), so that any *'s or _'s in the <a>\n// and <img> tags get encoded.\n//\n\n\t// Clear the global hashes. If we don't clear these, you get conflicts\n\t// from other articles when generating a page which contains more than\n\t// one article (e.g. an index page that shows the N most recent\n\t// articles):\n\tg_urls = {};\n\tg_titles = {};\n\tg_html_blocks = [];\n\n\t// attacklab: Replace ~ with ~T\n\t// This lets us use tilde as an escape char to avoid md5 hashes\n\t// The choice of character is arbitray; anything that isn't\n\t// magic in Markdown will work.\n\ttext = text.replace(/~/g,\"~T\");\n\n\t// attacklab: Replace $ with ~D\n\t// RegExp interprets $ as a special character\n\t// when it's in a replacement string\n\ttext = text.replace(/\\$/g,\"~D\");\n\n\t// Standardize line endings\n\ttext = text.replace(/\\r\\n/g,\"\\n\"); // DOS to Unix\n\ttext = text.replace(/\\r/g,\"\\n\"); // Mac to Unix\n\n\t// Make sure text begins and ends with a couple of newlines:\n\ttext = \"\\n\\n\" + text + \"\\n\\n\";\n\n\t// Convert all tabs to spaces.\n\ttext = _Detab(text);\n\n\t// Strip any lines consisting only of spaces and tabs.\n\t// This makes subsequent regexen easier to write, because we can\n\t// match consecutive blank lines with /\\n+/ instead of something\n\t// contorted like /[ \\t]*\\n+/ .\n\ttext = text.replace(/^[ \\t]+$/mg,\"\");\n\n\t// Run language extensions\n\tShowdown.forEach(g_lang_extensions, function(x){\n\t\ttext = _ExecuteExtension(x, text);\n\t});\n\n\t// Handle github codeblocks prior to running HashHTML so that\n\t// HTML contained within the codeblock gets escaped propertly\n\ttext = _DoGithubCodeBlocks(text);\n\n\t// Turn block-level HTML blocks into hash entries\n\ttext = _HashHTMLBlocks(text);\n\n\t// Strip link definitions, store in hashes.\n\ttext = _StripLinkDefinitions(text);\n\n\ttext = _RunBlockGamut(text);\n\n\ttext = _UnescapeSpecialChars(text);\n\n\t// attacklab: Restore dollar signs\n\ttext = text.replace(/~D/g,\"$$\");\n\n\t// attacklab: Restore tildes\n\ttext = text.replace(/~T/g,\"~\");\n\n\t// Run output modifiers\n\tShowdown.forEach(g_output_modifiers, function(x){\n\t\ttext = _ExecuteExtension(x, text);\n\t});\n\n\treturn text;\n};\n//\n// Options:\n//\n\n// Parse extensions options into separate arrays\nif (converter_options && converter_options.extensions) {\n\n  var self = this;\n\n\t// Iterate over each plugin\n\tShowdown.forEach(converter_options.extensions, function(plugin){\n\n\t\t// Assume it's a bundled plugin if a string is given\n\t\tif (typeof plugin === 'string') {\n\t\t\tplugin = Showdown.extensions[stdExtName(plugin)];\n\t\t}\n\n\t\tif (typeof plugin === 'function') {\n\t\t\t// Iterate over each extension within that plugin\n\t\t\tShowdown.forEach(plugin(self), function(ext){\n\t\t\t\t// Sort extensions by type\n\t\t\t\tif (ext.type) {\n\t\t\t\t\tif (ext.type === 'language' || ext.type === 'lang') {\n\t\t\t\t\t\tg_lang_extensions.push(ext);\n\t\t\t\t\t} else if (ext.type === 'output' || ext.type === 'html') {\n\t\t\t\t\t\tg_output_modifiers.push(ext);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Assume language extension\n\t\t\t\t\tg_output_modifiers.push(ext);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthrow \"Extension '\" + plugin + \"' could not be loaded.  It was either not found or is not a valid extension.\";\n\t\t}\n\t});\n}\n\n\nvar _ExecuteExtension = function(ext, text) {\n\tif (ext.regex) {\n\t\tvar re = new RegExp(ext.regex, 'g');\n\t\treturn text.replace(re, ext.replace);\n\t} else if (ext.filter) {\n\t\treturn ext.filter(text);\n\t}\n};\n\nvar _StripLinkDefinitions = function(text) {\n//\n// Strips link definitions from text, stores the URLs and titles in\n// hash references.\n//\n\n\t// Link defs are in the form: ^[id]: url \"optional title\"\n\n\t/*\n\t\tvar text = text.replace(/\n\t\t\t\t^[ ]{0,3}\\[(.+)\\]:  // id = $1  attacklab: g_tab_width - 1\n\t\t\t\t  [ \\t]*\n\t\t\t\t  \\n?\t\t\t\t// maybe *one* newline\n\t\t\t\t  [ \\t]*\n\t\t\t\t<?(\\S+?)>?\t\t\t// url = $2\n\t\t\t\t  [ \\t]*\n\t\t\t\t  \\n?\t\t\t\t// maybe one newline\n\t\t\t\t  [ \\t]*\n\t\t\t\t(?:\n\t\t\t\t  (\\n*)\t\t\t\t// any lines skipped = $3 attacklab: lookbehind removed\n\t\t\t\t  [\"(]\n\t\t\t\t  (.+?)\t\t\t\t// title = $4\n\t\t\t\t  [\")]\n\t\t\t\t  [ \\t]*\n\t\t\t\t)?\t\t\t\t\t// title is optional\n\t\t\t\t(?:\\n+|$)\n\t\t\t  /gm,\n\t\t\t  function(){...});\n\t*/\n\n\t// attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n\ttext += \"~0\";\n\n\ttext = text.replace(/^[ ]{0,3}\\[(.+)\\]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"(](.+?)[\")][ \\t]*)?(?:\\n+|(?=~0))/gm,\n\t\tfunction (wholeMatch,m1,m2,m3,m4) {\n\t\t\tm1 = m1.toLowerCase();\n\t\t\tg_urls[m1] = _EncodeAmpsAndAngles(m2);  // Link IDs are case-insensitive\n\t\t\tif (m3) {\n\t\t\t\t// Oops, found blank lines, so it's not a title.\n\t\t\t\t// Put back the parenthetical statement we stole.\n\t\t\t\treturn m3+m4;\n\t\t\t} else if (m4) {\n\t\t\t\tg_titles[m1] = m4.replace(/\"/g,\"&quot;\");\n\t\t\t}\n\n\t\t\t// Completely remove the definition from the text\n\t\t\treturn \"\";\n\t\t}\n\t);\n\n\t// attacklab: strip sentinel\n\ttext = text.replace(/~0/,\"\");\n\n\treturn text;\n}\n\n\nvar _HashHTMLBlocks = function(text) {\n\t// attacklab: Double up blank lines to reduce lookaround\n\ttext = text.replace(/\\n/g,\"\\n\\n\");\n\n\t// Hashify HTML blocks:\n\t// We only want to do this for block-level HTML tags, such as headers,\n\t// lists, and tables. That's because we still want to wrap <p>s around\n\t// \"paragraphs\" that are wrapped in non-block-level tags, such as anchors,\n\t// phrase emphasis, and spans. The list of tags we're looking for is\n\t// hard-coded:\n\tvar block_tags_a = \"p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del|style|section|header|footer|nav|article|aside\";\n\tvar block_tags_b = \"p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|style|section|header|footer|nav|article|aside\";\n\n\t// First, look for nested blocks, e.g.:\n\t//   <div>\n\t//     <div>\n\t//     tags for inner block must be indented.\n\t//     </div>\n\t//   </div>\n\t//\n\t// The outermost tags must start at the left margin for this to match, and\n\t// the inner nested divs must be indented.\n\t// We need to do this before the next, more liberal match, because the next\n\t// match will start at the first `<div>` and stop at the first `</div>`.\n\n\t// attacklab: This regex can be expensive when it fails.\n\t/*\n\t\tvar text = text.replace(/\n\t\t(\t\t\t\t\t\t// save in $1\n\t\t\t^\t\t\t\t\t// start of line  (with /m)\n\t\t\t<($block_tags_a)\t// start tag = $2\n\t\t\t\\b\t\t\t\t\t// word break\n\t\t\t\t\t\t\t\t// attacklab: hack around khtml/pcre bug...\n\t\t\t[^\\r]*?\\n\t\t\t// any number of lines, minimally matching\n\t\t\t</\\2>\t\t\t\t// the matching end tag\n\t\t\t[ \\t]*\t\t\t\t// trailing spaces/tabs\n\t\t\t(?=\\n+)\t\t\t\t// followed by a newline\n\t\t)\t\t\t\t\t\t// attacklab: there are sentinel newlines at end of document\n\t\t/gm,function(){...}};\n\t*/\n\ttext = text.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del)\\b[^\\r]*?\\n<\\/\\2>[ \\t]*(?=\\n+))/gm,hashElement);\n\n\t//\n\t// Now match more liberally, simply from `\\n<tag>` to `</tag>\\n`\n\t//\n\n\t/*\n\t\tvar text = text.replace(/\n\t\t(\t\t\t\t\t\t// save in $1\n\t\t\t^\t\t\t\t\t// start of line  (with /m)\n\t\t\t<($block_tags_b)\t// start tag = $2\n\t\t\t\\b\t\t\t\t\t// word break\n\t\t\t\t\t\t\t\t// attacklab: hack around khtml/pcre bug...\n\t\t\t[^\\r]*?\t\t\t\t// any number of lines, minimally matching\n\t\t\t</\\2>\t\t\t\t// the matching end tag\n\t\t\t[ \\t]*\t\t\t\t// trailing spaces/tabs\n\t\t\t(?=\\n+)\t\t\t\t// followed by a newline\n\t\t)\t\t\t\t\t\t// attacklab: there are sentinel newlines at end of document\n\t\t/gm,function(){...}};\n\t*/\n\ttext = text.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|style|section|header|footer|nav|article|aside)\\b[^\\r]*?<\\/\\2>[ \\t]*(?=\\n+)\\n)/gm,hashElement);\n\n\t// Special case just for <hr />. It was easier to make a special case than\n\t// to make the other regex more complicated.\n\n\t/*\n\t\ttext = text.replace(/\n\t\t(\t\t\t\t\t\t// save in $1\n\t\t\t\\n\\n\t\t\t\t// Starting after a blank line\n\t\t\t[ ]{0,3}\n\t\t\t(<(hr)\t\t\t\t// start tag = $2\n\t\t\t\\b\t\t\t\t\t// word break\n\t\t\t([^<>])*?\t\t\t//\n\t\t\t\\/?>)\t\t\t\t// the matching end tag\n\t\t\t[ \\t]*\n\t\t\t(?=\\n{2,})\t\t\t// followed by a blank line\n\t\t)\n\t\t/g,hashElement);\n\t*/\n\ttext = text.replace(/(\\n[ ]{0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,hashElement);\n\n\t// Special case for standalone HTML comments:\n\n\t/*\n\t\ttext = text.replace(/\n\t\t(\t\t\t\t\t\t// save in $1\n\t\t\t\\n\\n\t\t\t\t// Starting after a blank line\n\t\t\t[ ]{0,3}\t\t\t// attacklab: g_tab_width - 1\n\t\t\t<!\n\t\t\t(--[^\\r]*?--\\s*)+\n\t\t\t>\n\t\t\t[ \\t]*\n\t\t\t(?=\\n{2,})\t\t\t// followed by a blank line\n\t\t)\n\t\t/g,hashElement);\n\t*/\n\ttext = text.replace(/(\\n\\n[ ]{0,3}<!(--[^\\r]*?--\\s*)+>[ \\t]*(?=\\n{2,}))/g,hashElement);\n\n\t// PHP and ASP-style processor instructions (<?...?> and <%...%>)\n\n\t/*\n\t\ttext = text.replace(/\n\t\t(?:\n\t\t\t\\n\\n\t\t\t\t// Starting after a blank line\n\t\t)\n\t\t(\t\t\t\t\t\t// save in $1\n\t\t\t[ ]{0,3}\t\t\t// attacklab: g_tab_width - 1\n\t\t\t(?:\n\t\t\t\t<([?%])\t\t\t// $2\n\t\t\t\t[^\\r]*?\n\t\t\t\t\\2>\n\t\t\t)\n\t\t\t[ \\t]*\n\t\t\t(?=\\n{2,})\t\t\t// followed by a blank line\n\t\t)\n\t\t/g,hashElement);\n\t*/\n\ttext = text.replace(/(?:\\n\\n)([ ]{0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,hashElement);\n\n\t// attacklab: Undo double lines (see comment at top of this function)\n\ttext = text.replace(/\\n\\n/g,\"\\n\");\n\treturn text;\n}\n\nvar hashElement = function(wholeMatch,m1) {\n\tvar blockText = m1;\n\n\t// Undo double lines\n\tblockText = blockText.replace(/\\n\\n/g,\"\\n\");\n\tblockText = blockText.replace(/^\\n/,\"\");\n\n\t// strip trailing blank lines\n\tblockText = blockText.replace(/\\n+$/g,\"\");\n\n\t// Replace the element text with a marker (\"~KxK\" where x is its key)\n\tblockText = \"\\n\\n~K\" + (g_html_blocks.push(blockText)-1) + \"K\\n\\n\";\n\n\treturn blockText;\n};\n\nvar _RunBlockGamut = function(text) {\n//\n// These are all the transformations that form block-level\n// tags like paragraphs, headers, and list items.\n//\n\ttext = _DoHeaders(text);\n\n\t// Do Horizontal Rules:\n\tvar key = hashBlock(\"<hr />\");\n\ttext = text.replace(/^[ ]{0,2}([ ]?\\*[ ]?){3,}[ \\t]*$/gm,key);\n\ttext = text.replace(/^[ ]{0,2}([ ]?\\-[ ]?){3,}[ \\t]*$/gm,key);\n\ttext = text.replace(/^[ ]{0,2}([ ]?\\_[ ]?){3,}[ \\t]*$/gm,key);\n\n\ttext = _DoLists(text);\n\ttext = _DoCodeBlocks(text);\n\ttext = _DoBlockQuotes(text);\n\n\t// We already ran _HashHTMLBlocks() before, in Markdown(), but that\n\t// was to escape raw HTML in the original Markdown source. This time,\n\t// we're escaping the markup we've just created, so that we don't wrap\n\t// <p> tags around block-level tags.\n\ttext = _HashHTMLBlocks(text);\n\ttext = _FormParagraphs(text);\n\n\treturn text;\n};\n\n\nvar _RunSpanGamut = function(text) {\n//\n// These are all the transformations that occur *within* block-level\n// tags like paragraphs, headers, and list items.\n//\n\n\ttext = _DoCodeSpans(text);\n\ttext = _EscapeSpecialCharsWithinTagAttributes(text);\n\ttext = _EncodeBackslashEscapes(text);\n\n\t// Process anchor and image tags. Images must come first,\n\t// because ![foo][f] looks like an anchor.\n\ttext = _DoImages(text);\n\ttext = _DoAnchors(text);\n\n\t// Make links out of things like `<http://example.com/>`\n\t// Must come after _DoAnchors(), because you can use < and >\n\t// delimiters in inline links like [this](<url>).\n\ttext = _DoAutoLinks(text);\n\ttext = _EncodeAmpsAndAngles(text);\n\ttext = _DoItalicsAndBold(text);\n\n\t// Do hard breaks:\n\ttext = text.replace(/  +\\n/g,\" <br />\\n\");\n\n\treturn text;\n}\n\nvar _EscapeSpecialCharsWithinTagAttributes = function(text) {\n//\n// Within tags -- meaning between < and > -- encode [\\ ` * _] so they\n// don't conflict with their use in Markdown for code, italics and strong.\n//\n\n\t// Build a regex to find HTML tags and comments.  See Friedl's\n\t// \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n\tvar regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\n\ttext = text.replace(regex, function(wholeMatch) {\n\t\tvar tag = wholeMatch.replace(/(.)<\\/?code>(?=.)/g,\"$1`\");\n\t\ttag = escapeCharacters(tag,\"\\\\`*_\");\n\t\treturn tag;\n\t});\n\n\treturn text;\n}\n\nvar _DoAnchors = function(text) {\n//\n// Turn Markdown link shortcuts into XHTML <a> tags.\n//\n\t//\n\t// First, handle reference-style links: [link text] [id]\n\t//\n\n\t/*\n\t\ttext = text.replace(/\n\t\t(\t\t\t\t\t\t\t// wrap whole match in $1\n\t\t\t\\[\n\t\t\t(\n\t\t\t\t(?:\n\t\t\t\t\t\\[[^\\]]*\\]\t\t// allow brackets nested one level\n\t\t\t\t\t|\n\t\t\t\t\t[^\\[]\t\t\t// or anything else\n\t\t\t\t)*\n\t\t\t)\n\t\t\t\\]\n\n\t\t\t[ ]?\t\t\t\t\t// one optional space\n\t\t\t(?:\\n[ ]*)?\t\t\t\t// one optional newline followed by spaces\n\n\t\t\t\\[\n\t\t\t(.*?)\t\t\t\t\t// id = $3\n\t\t\t\\]\n\t\t)()()()()\t\t\t\t\t// pad remaining backreferences\n\t\t/g,_DoAnchors_callback);\n\t*/\n\ttext = text.replace(/(\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\][ ]?(?:\\n[ ]*)?\\[(.*?)\\])()()()()/g,writeAnchorTag);\n\n\t//\n\t// Next, inline-style links: [link text](url \"optional title\")\n\t//\n\n\t/*\n\t\ttext = text.replace(/\n\t\t\t(\t\t\t\t\t\t// wrap whole match in $1\n\t\t\t\t\\[\n\t\t\t\t(\n\t\t\t\t\t(?:\n\t\t\t\t\t\t\\[[^\\]]*\\]\t// allow brackets nested one level\n\t\t\t\t\t|\n\t\t\t\t\t[^\\[\\]]\t\t\t// or anything else\n\t\t\t\t)\n\t\t\t)\n\t\t\t\\]\n\t\t\t\\(\t\t\t\t\t\t// literal paren\n\t\t\t[ \\t]*\n\t\t\t()\t\t\t\t\t\t// no id, so leave $3 empty\n\t\t\t<?(.*?)>?\t\t\t\t// href = $4\n\t\t\t[ \\t]*\n\t\t\t(\t\t\t\t\t\t// $5\n\t\t\t\t(['\"])\t\t\t\t// quote char = $6\n\t\t\t\t(.*?)\t\t\t\t// Title = $7\n\t\t\t\t\\6\t\t\t\t\t// matching quote\n\t\t\t\t[ \\t]*\t\t\t\t// ignore any spaces/tabs between closing quote and )\n\t\t\t)?\t\t\t\t\t\t// title is optional\n\t\t\t\\)\n\t\t)\n\t\t/g,writeAnchorTag);\n\t*/\n\ttext = text.replace(/(\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,writeAnchorTag);\n\n\t//\n\t// Last, handle reference-style shortcuts: [link text]\n\t// These must come last in case you've also got [link test][1]\n\t// or [link test](/foo)\n\t//\n\n\t/*\n\t\ttext = text.replace(/\n\t\t(\t\t \t\t\t\t\t// wrap whole match in $1\n\t\t\t\\[\n\t\t\t([^\\[\\]]+)\t\t\t\t// link text = $2; can't contain '[' or ']'\n\t\t\t\\]\n\t\t)()()()()()\t\t\t\t\t// pad rest of backreferences\n\t\t/g, writeAnchorTag);\n\t*/\n\ttext = text.replace(/(\\[([^\\[\\]]+)\\])()()()()()/g, writeAnchorTag);\n\n\treturn text;\n}\n\nvar writeAnchorTag = function(wholeMatch,m1,m2,m3,m4,m5,m6,m7) {\n\tif (m7 == undefined) m7 = \"\";\n\tvar whole_match = m1;\n\tvar link_text   = m2;\n\tvar link_id\t = m3.toLowerCase();\n\tvar url\t\t= m4;\n\tvar title\t= m7;\n\n\tif (url == \"\") {\n\t\tif (link_id == \"\") {\n\t\t\t// lower-case and turn embedded newlines into spaces\n\t\t\tlink_id = link_text.toLowerCase().replace(/ ?\\n/g,\" \");\n\t\t}\n\t\turl = \"#\"+link_id;\n\n\t\tif (g_urls[link_id] != undefined) {\n\t\t\turl = g_urls[link_id];\n\t\t\tif (g_titles[link_id] != undefined) {\n\t\t\t\ttitle = g_titles[link_id];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (whole_match.search(/\\(\\s*\\)$/m)>-1) {\n\t\t\t\t// Special case for explicit empty url\n\t\t\t\turl = \"\";\n\t\t\t} else {\n\t\t\t\treturn whole_match;\n\t\t\t}\n\t\t}\n\t}\n\n\turl = escapeCharacters(url,\"*_\");\n\tvar result = \"<a href=\\\"\" + url + \"\\\"\";\n\n\tif (title != \"\") {\n\t\ttitle = title.replace(/\"/g,\"&quot;\");\n\t\ttitle = escapeCharacters(title,\"*_\");\n\t\tresult +=  \" title=\\\"\" + title + \"\\\"\";\n\t}\n\n\tresult += \">\" + link_text + \"</a>\";\n\n\treturn result;\n}\n\n\nvar _DoImages = function(text) {\n//\n// Turn Markdown image shortcuts into <img> tags.\n//\n\n\t//\n\t// First, handle reference-style labeled images: ![alt text][id]\n\t//\n\n\t/*\n\t\ttext = text.replace(/\n\t\t(\t\t\t\t\t\t// wrap whole match in $1\n\t\t\t!\\[\n\t\t\t(.*?)\t\t\t\t// alt text = $2\n\t\t\t\\]\n\n\t\t\t[ ]?\t\t\t\t// one optional space\n\t\t\t(?:\\n[ ]*)?\t\t\t// one optional newline followed by spaces\n\n\t\t\t\\[\n\t\t\t(.*?)\t\t\t\t// id = $3\n\t\t\t\\]\n\t\t)()()()()\t\t\t\t// pad rest of backreferences\n\t\t/g,writeImageTag);\n\t*/\n\ttext = text.replace(/(!\\[(.*?)\\][ ]?(?:\\n[ ]*)?\\[(.*?)\\])()()()()/g,writeImageTag);\n\n\t//\n\t// Next, handle inline images:  ![alt text](url \"optional title\")\n\t// Don't forget: encode * and _\n\n\t/*\n\t\ttext = text.replace(/\n\t\t(\t\t\t\t\t\t// wrap whole match in $1\n\t\t\t!\\[\n\t\t\t(.*?)\t\t\t\t// alt text = $2\n\t\t\t\\]\n\t\t\t\\s?\t\t\t\t\t// One optional whitespace character\n\t\t\t\\(\t\t\t\t\t// literal paren\n\t\t\t[ \\t]*\n\t\t\t()\t\t\t\t\t// no id, so leave $3 empty\n\t\t\t<?(\\S+?)>?\t\t\t// src url = $4\n\t\t\t[ \\t]*\n\t\t\t(\t\t\t\t\t// $5\n\t\t\t\t(['\"])\t\t\t// quote char = $6\n\t\t\t\t(.*?)\t\t\t// title = $7\n\t\t\t\t\\6\t\t\t\t// matching quote\n\t\t\t\t[ \\t]*\n\t\t\t)?\t\t\t\t\t// title is optional\n\t\t\\)\n\t\t)\n\t\t/g,writeImageTag);\n\t*/\n\ttext = text.replace(/(!\\[(.*?)\\]\\s?\\([ \\t]*()<?(\\S+?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,writeImageTag);\n\n\treturn text;\n}\n\nvar writeImageTag = function(wholeMatch,m1,m2,m3,m4,m5,m6,m7) {\n\tvar whole_match = m1;\n\tvar alt_text   = m2;\n\tvar link_id\t = m3.toLowerCase();\n\tvar url\t\t= m4;\n\tvar title\t= m7;\n\n\tif (!title) title = \"\";\n\n\tif (url == \"\") {\n\t\tif (link_id == \"\") {\n\t\t\t// lower-case and turn embedded newlines into spaces\n\t\t\tlink_id = alt_text.toLowerCase().replace(/ ?\\n/g,\" \");\n\t\t}\n\t\turl = \"#\"+link_id;\n\n\t\tif (g_urls[link_id] != undefined) {\n\t\t\turl = g_urls[link_id];\n\t\t\tif (g_titles[link_id] != undefined) {\n\t\t\t\ttitle = g_titles[link_id];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn whole_match;\n\t\t}\n\t}\n\n\talt_text = alt_text.replace(/\"/g,\"&quot;\");\n\turl = escapeCharacters(url,\"*_\");\n\tvar result = \"<img src=\\\"\" + url + \"\\\" alt=\\\"\" + alt_text + \"\\\"\";\n\n\t// attacklab: Markdown.pl adds empty title attributes to images.\n\t// Replicate this bug.\n\n\t//if (title != \"\") {\n\t\ttitle = title.replace(/\"/g,\"&quot;\");\n\t\ttitle = escapeCharacters(title,\"*_\");\n\t\tresult +=  \" title=\\\"\" + title + \"\\\"\";\n\t//}\n\n\tresult += \" />\";\n\n\treturn result;\n}\n\n\nvar _DoHeaders = function(text) {\n\n\t// Setext-style headers:\n\t//\tHeader 1\n\t//\t========\n\t//\n\t//\tHeader 2\n\t//\t--------\n\t//\n\ttext = text.replace(/^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n\t\tfunction(wholeMatch,m1){return hashBlock('<h1 id=\"' + headerId(m1) + '\">' + _RunSpanGamut(m1) + \"</h1>\");});\n\n\ttext = text.replace(/^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm,\n\t\tfunction(matchFound,m1){return hashBlock('<h2 id=\"' + headerId(m1) + '\">' + _RunSpanGamut(m1) + \"</h2>\");});\n\n\t// atx-style headers:\n\t//  # Header 1\n\t//  ## Header 2\n\t//  ## Header 2 with closing hashes ##\n\t//  ...\n\t//  ###### Header 6\n\t//\n\n\t/*\n\t\ttext = text.replace(/\n\t\t\t^(\\#{1,6})\t\t\t\t// $1 = string of #'s\n\t\t\t[ \\t]*\n\t\t\t(.+?)\t\t\t\t\t// $2 = Header text\n\t\t\t[ \\t]*\n\t\t\t\\#*\t\t\t\t\t\t// optional closing #'s (not counted)\n\t\t\t\\n+\n\t\t/gm, function() {...});\n\t*/\n\n\ttext = text.replace(/^(\\#{1,6})[ \\t]*(.+?)[ \\t]*\\#*\\n+/gm,\n\t\tfunction(wholeMatch,m1,m2) {\n\t\t\tvar h_level = m1.length;\n\t\t\treturn hashBlock(\"<h\" + h_level + ' id=\"' + headerId(m2) + '\">' + _RunSpanGamut(m2) + \"</h\" + h_level + \">\");\n\t\t});\n\n\tfunction headerId(m) {\n\t\treturn m.replace(/[^\\w]/g, '').toLowerCase();\n\t}\n\treturn text;\n}\n\n// This declaration keeps Dojo compressor from outputting garbage:\nvar _ProcessListItems;\n\nvar _DoLists = function(text) {\n//\n// Form HTML ordered (numbered) and unordered (bulleted) lists.\n//\n\n\t// attacklab: add sentinel to hack around khtml/safari bug:\n\t// http://bugs.webkit.org/show_bug.cgi?id=11231\n\ttext += \"~0\";\n\n\t// Re-usable pattern to match any entirel ul or ol list:\n\n\t/*\n\t\tvar whole_list = /\n\t\t(\t\t\t\t\t\t\t\t\t// $1 = whole list\n\t\t\t(\t\t\t\t\t\t\t\t// $2\n\t\t\t\t[ ]{0,3}\t\t\t\t\t// attacklab: g_tab_width - 1\n\t\t\t\t([*+-]|\\d+[.])\t\t\t\t// $3 = first list item marker\n\t\t\t\t[ \\t]+\n\t\t\t)\n\t\t\t[^\\r]+?\n\t\t\t(\t\t\t\t\t\t\t\t// $4\n\t\t\t\t~0\t\t\t\t\t\t\t// sentinel for workaround; should be $\n\t\t\t|\n\t\t\t\t\\n{2,}\n\t\t\t\t(?=\\S)\n\t\t\t\t(?!\t\t\t\t\t\t\t// Negative lookahead for another list item marker\n\t\t\t\t\t[ \\t]*\n\t\t\t\t\t(?:[*+-]|\\d+[.])[ \\t]+\n\t\t\t\t)\n\t\t\t)\n\t\t)/g\n\t*/\n\tvar whole_list = /^(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm;\n\n\tif (g_list_level) {\n\t\ttext = text.replace(whole_list,function(wholeMatch,m1,m2) {\n\t\t\tvar list = m1;\n\t\t\tvar list_type = (m2.search(/[*+-]/g)>-1) ? \"ul\" : \"ol\";\n\n\t\t\t// Turn double returns into triple returns, so that we can make a\n\t\t\t// paragraph for the last item in a list, if necessary:\n\t\t\tlist = list.replace(/\\n{2,}/g,\"\\n\\n\\n\");;\n\t\t\tvar result = _ProcessListItems(list);\n\n\t\t\t// Trim any trailing whitespace, to put the closing `</$list_type>`\n\t\t\t// up on the preceding line, to get it past the current stupid\n\t\t\t// HTML block parser. This is a hack to work around the terrible\n\t\t\t// hack that is the HTML block parser.\n\t\t\tresult = result.replace(/\\s+$/,\"\");\n\t\t\tresult = \"<\"+list_type+\">\" + result + \"</\"+list_type+\">\\n\";\n\t\t\treturn result;\n\t\t});\n\t} else {\n\t\twhole_list = /(\\n\\n|^\\n?)(([ ]{0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/g;\n\t\ttext = text.replace(whole_list,function(wholeMatch,m1,m2,m3) {\n\t\t\tvar runup = m1;\n\t\t\tvar list = m2;\n\n\t\t\tvar list_type = (m3.search(/[*+-]/g)>-1) ? \"ul\" : \"ol\";\n\t\t\t// Turn double returns into triple returns, so that we can make a\n\t\t\t// paragraph for the last item in a list, if necessary:\n\t\t\tvar list = list.replace(/\\n{2,}/g,\"\\n\\n\\n\");;\n\t\t\tvar result = _ProcessListItems(list);\n\t\t\tresult = runup + \"<\"+list_type+\">\\n\" + result + \"</\"+list_type+\">\\n\";\n\t\t\treturn result;\n\t\t});\n\t}\n\n\t// attacklab: strip sentinel\n\ttext = text.replace(/~0/,\"\");\n\n\treturn text;\n}\n\n_ProcessListItems = function(list_str) {\n//\n//  Process the contents of a single ordered or unordered list, splitting it\n//  into individual list items.\n//\n\t// The $g_list_level global keeps track of when we're inside a list.\n\t// Each time we enter a list, we increment it; when we leave a list,\n\t// we decrement. If it's zero, we're not in a list anymore.\n\t//\n\t// We do this because when we're not inside a list, we want to treat\n\t// something like this:\n\t//\n\t//    I recommend upgrading to version\n\t//    8. Oops, now this line is treated\n\t//    as a sub-list.\n\t//\n\t// As a single paragraph, despite the fact that the second line starts\n\t// with a digit-period-space sequence.\n\t//\n\t// Whereas when we're inside a list (or sub-list), that line will be\n\t// treated as the start of a sub-list. What a kludge, huh? This is\n\t// an aspect of Markdown's syntax that's hard to parse perfectly\n\t// without resorting to mind-reading. Perhaps the solution is to\n\t// change the syntax rules such that sub-lists must start with a\n\t// starting cardinal number; e.g. \"1.\" or \"a.\".\n\n\tg_list_level++;\n\n\t// trim trailing blank lines:\n\tlist_str = list_str.replace(/\\n{2,}$/,\"\\n\");\n\n\t// attacklab: add sentinel to emulate \\z\n\tlist_str += \"~0\";\n\n\t/*\n\t\tlist_str = list_str.replace(/\n\t\t\t(\\n)?\t\t\t\t\t\t\t// leading line = $1\n\t\t\t(^[ \\t]*)\t\t\t\t\t\t// leading whitespace = $2\n\t\t\t([*+-]|\\d+[.]) [ \\t]+\t\t\t// list marker = $3\n\t\t\t([^\\r]+?\t\t\t\t\t\t// list item text   = $4\n\t\t\t(\\n{1,2}))\n\t\t\t(?= \\n* (~0 | \\2 ([*+-]|\\d+[.]) [ \\t]+))\n\t\t/gm, function(){...});\n\t*/\n\tlist_str = list_str.replace(/(\\n)?(^[ \\t]*)([*+-]|\\d+[.])[ \\t]+([^\\r]+?(\\n{1,2}))(?=\\n*(~0|\\2([*+-]|\\d+[.])[ \\t]+))/gm,\n\t\tfunction(wholeMatch,m1,m2,m3,m4){\n\t\t\tvar item = m4;\n\t\t\tvar leading_line = m1;\n\t\t\tvar leading_space = m2;\n\n\t\t\tif (leading_line || (item.search(/\\n{2,}/)>-1)) {\n\t\t\t\titem = _RunBlockGamut(_Outdent(item));\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Recursion for sub-lists:\n\t\t\t\titem = _DoLists(_Outdent(item));\n\t\t\t\titem = item.replace(/\\n$/,\"\"); // chomp(item)\n\t\t\t\titem = _RunSpanGamut(item);\n\t\t\t}\n\n\t\t\treturn  \"<li>\" + item + \"</li>\\n\";\n\t\t}\n\t);\n\n\t// attacklab: strip sentinel\n\tlist_str = list_str.replace(/~0/g,\"\");\n\n\tg_list_level--;\n\treturn list_str;\n}\n\n\nvar _DoCodeBlocks = function(text) {\n//\n//  Process Markdown `<pre><code>` blocks.\n//\n\n\t/*\n\t\ttext = text.replace(text,\n\t\t\t/(?:\\n\\n|^)\n\t\t\t(\t\t\t\t\t\t\t\t// $1 = the code block -- one or more lines, starting with a space/tab\n\t\t\t\t(?:\n\t\t\t\t\t(?:[ ]{4}|\\t)\t\t\t// Lines must start with a tab or a tab-width of spaces - attacklab: g_tab_width\n\t\t\t\t\t.*\\n+\n\t\t\t\t)+\n\t\t\t)\n\t\t\t(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))\t// attacklab: g_tab_width\n\t\t/g,function(){...});\n\t*/\n\n\t// attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n\ttext += \"~0\";\n\n\ttext = text.replace(/(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))/g,\n\t\tfunction(wholeMatch,m1,m2) {\n\t\t\tvar codeblock = m1;\n\t\t\tvar nextChar = m2;\n\n\t\t\tcodeblock = _EncodeCode( _Outdent(codeblock));\n\t\t\tcodeblock = _Detab(codeblock);\n\t\t\tcodeblock = codeblock.replace(/^\\n+/g,\"\"); // trim leading newlines\n\t\t\tcodeblock = codeblock.replace(/\\n+$/g,\"\"); // trim trailing whitespace\n\n\t\t\tcodeblock = \"<pre><code>\" + codeblock + \"\\n</code></pre>\";\n\n\t\t\treturn hashBlock(codeblock) + nextChar;\n\t\t}\n\t);\n\n\t// attacklab: strip sentinel\n\ttext = text.replace(/~0/,\"\");\n\n\treturn text;\n};\n\nvar _DoGithubCodeBlocks = function(text) {\n//\n//  Process Github-style code blocks\n//  Example:\n//  ```ruby\n//  def hello_world(x)\n//    puts \"Hello, #{x}\"\n//  end\n//  ```\n//\n\n\n\t// attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n\ttext += \"~0\";\n\n\ttext = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g,\n\t\tfunction(wholeMatch,m1,m2) {\n\t\t\tvar language = m1;\n\t\t\tvar codeblock = m2;\n\n\t\t\tcodeblock = _EncodeCode(codeblock);\n\t\t\tcodeblock = _Detab(codeblock);\n\t\t\tcodeblock = codeblock.replace(/^\\n+/g,\"\"); // trim leading newlines\n\t\t\tcodeblock = codeblock.replace(/\\n+$/g,\"\"); // trim trailing whitespace\n\n\t\t\tcodeblock = \"<pre><code\" + (language ? \" class=\\\"language-\" + language + '\"' : \"\") + \">\" + codeblock + \"\\n</code></pre>\";\n\n\t\t\treturn hashBlock(codeblock);\n\t\t}\n\t);\n\n\t// attacklab: strip sentinel\n\ttext = text.replace(/~0/,\"\");\n\n\treturn text;\n}\n\nvar hashBlock = function(text) {\n\ttext = text.replace(/(^\\n+|\\n+$)/g,\"\");\n\treturn \"\\n\\n~K\" + (g_html_blocks.push(text)-1) + \"K\\n\\n\";\n}\n\nvar _DoCodeSpans = function(text) {\n//\n//   *  Backtick quotes are used for <code></code> spans.\n//\n//   *  You can use multiple backticks as the delimiters if you want to\n//\t include literal backticks in the code span. So, this input:\n//\n//\t\t Just type ``foo `bar` baz`` at the prompt.\n//\n//\t   Will translate to:\n//\n//\t\t <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n//\n//\tThere's no arbitrary limit to the number of backticks you\n//\tcan use as delimters. If you need three consecutive backticks\n//\tin your code, use four for delimiters, etc.\n//\n//  *  You can use spaces to get literal backticks at the edges:\n//\n//\t\t ... type `` `bar` `` ...\n//\n//\t   Turns to:\n//\n//\t\t ... type <code>`bar`</code> ...\n//\n\n\t/*\n\t\ttext = text.replace(/\n\t\t\t(^|[^\\\\])\t\t\t\t\t// Character before opening ` can't be a backslash\n\t\t\t(`+)\t\t\t\t\t\t// $2 = Opening run of `\n\t\t\t(\t\t\t\t\t\t\t// $3 = The code block\n\t\t\t\t[^\\r]*?\n\t\t\t\t[^`]\t\t\t\t\t// attacklab: work around lack of lookbehind\n\t\t\t)\n\t\t\t\\2\t\t\t\t\t\t\t// Matching closer\n\t\t\t(?!`)\n\t\t/gm, function(){...});\n\t*/\n\n\ttext = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n\t\tfunction(wholeMatch,m1,m2,m3,m4) {\n\t\t\tvar c = m3;\n\t\t\tc = c.replace(/^([ \\t]*)/g,\"\");\t// leading whitespace\n\t\t\tc = c.replace(/[ \\t]*$/g,\"\");\t// trailing whitespace\n\t\t\tc = _EncodeCode(c);\n\t\t\treturn m1+\"<code>\"+c+\"</code>\";\n\t\t});\n\n\treturn text;\n}\n\nvar _EncodeCode = function(text) {\n//\n// Encode/escape certain characters inside Markdown code runs.\n// The point is that in code, these characters are literals,\n// and lose their special Markdown meanings.\n//\n\t// Encode all ampersands; HTML entities are not\n\t// entities within a Markdown code span.\n\ttext = text.replace(/&/g,\"&amp;\");\n\n\t// Do the angle bracket song and dance:\n\ttext = text.replace(/</g,\"&lt;\");\n\ttext = text.replace(/>/g,\"&gt;\");\n\n\t// Now, escape characters that are magic in Markdown:\n\ttext = escapeCharacters(text,\"\\*_{}[]\\\\\",false);\n\n// jj the line above breaks this:\n//---\n\n//* Item\n\n//   1. Subitem\n\n//            special char: *\n//---\n\n\treturn text;\n}\n\n\nvar _DoItalicsAndBold = function(text) {\n\n\t// <strong> must go first:\n\ttext = text.replace(/(?:^|\\s)(\\*\\*|__)(?=\\S)([^\\r]*?\\S[*_]*)\\1/g,\n\t\t\"<strong>$2</strong>\");\n\n\ttext = text.replace(/(?:^|\\s)(\\*|_)(?=\\S)([^\\r]*?\\S)\\1/g,\n\t\t\"<em>$2</em>\");\n\n\treturn text;\n}\n\n\nvar _DoBlockQuotes = function(text) {\n\n\t/*\n\t\ttext = text.replace(/\n\t\t(\t\t\t\t\t\t\t\t// Wrap whole match in $1\n\t\t\t(\n\t\t\t\t^[ \\t]*>[ \\t]?\t\t\t// '>' at the start of a line\n\t\t\t\t.+\\n\t\t\t\t\t// rest of the first line\n\t\t\t\t(.+\\n)*\t\t\t\t\t// subsequent consecutive lines\n\t\t\t\t\\n*\t\t\t\t\t\t// blanks\n\t\t\t)+\n\t\t)\n\t\t/gm, function(){...});\n\t*/\n\n\ttext = text.replace(/((^[ \\t]*>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm,\n\t\tfunction(wholeMatch,m1) {\n\t\t\tvar bq = m1;\n\n\t\t\t// attacklab: hack around Konqueror 3.5.4 bug:\n\t\t\t// \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n\n\t\t\tbq = bq.replace(/^[ \\t]*>[ \\t]?/gm,\"~0\");\t// trim one level of quoting\n\n\t\t\t// attacklab: clean up hack\n\t\t\tbq = bq.replace(/~0/g,\"\");\n\n\t\t\tbq = bq.replace(/^[ \\t]+$/gm,\"\");\t\t// trim whitespace-only lines\n\t\t\tbq = _RunBlockGamut(bq);\t\t\t\t// recurse\n\n\t\t\tbq = bq.replace(/(^|\\n)/g,\"$1  \");\n\t\t\t// These leading spaces screw with <pre> content, so we need to fix that:\n\t\t\tbq = bq.replace(\n\t\t\t\t\t/(\\s*<pre>[^\\r]+?<\\/pre>)/gm,\n\t\t\t\tfunction(wholeMatch,m1) {\n\t\t\t\t\tvar pre = m1;\n\t\t\t\t\t// attacklab: hack around Konqueror 3.5.4 bug:\n\t\t\t\t\tpre = pre.replace(/^  /mg,\"~0\");\n\t\t\t\t\tpre = pre.replace(/~0/g,\"\");\n\t\t\t\t\treturn pre;\n\t\t\t\t});\n\n\t\t\treturn hashBlock(\"<blockquote>\\n\" + bq + \"\\n</blockquote>\");\n\t\t});\n\treturn text;\n}\n\n\nvar _FormParagraphs = function(text) {\n//\n//  Params:\n//    $text - string to process with html <p> tags\n//\n\n\t// Strip leading and trailing lines:\n\ttext = text.replace(/^\\n+/g,\"\");\n\ttext = text.replace(/\\n+$/g,\"\");\n\n\tvar grafs = text.split(/\\n{2,}/g);\n\tvar grafsOut = [];\n\n\t//\n\t// Wrap <p> tags.\n\t//\n\tvar end = grafs.length;\n\tfor (var i=0; i<end; i++) {\n\t\tvar str = grafs[i];\n\n\t\t// if this is an HTML marker, copy it\n\t\tif (str.search(/~K(\\d+)K/g) >= 0) {\n\t\t\tgrafsOut.push(str);\n\t\t}\n\t\telse if (str.search(/\\S/) >= 0) {\n\t\t\tstr = _RunSpanGamut(str);\n\t\t\tstr = str.replace(/^([ \\t]*)/g,\"<p>\");\n\t\t\tstr += \"</p>\"\n\t\t\tgrafsOut.push(str);\n\t\t}\n\n\t}\n\n\t//\n\t// Unhashify HTML blocks\n\t//\n\tend = grafsOut.length;\n\tfor (var i=0; i<end; i++) {\n\t\t// if this is a marker for an html block...\n\t\twhile (grafsOut[i].search(/~K(\\d+)K/) >= 0) {\n\t\t\tvar blockText = g_html_blocks[RegExp.$1];\n\t\t\tblockText = blockText.replace(/\\$/g,\"$$$$\"); // Escape any dollar signs\n\t\t\tgrafsOut[i] = grafsOut[i].replace(/~K\\d+K/,blockText);\n\t\t}\n\t}\n\n\treturn grafsOut.join(\"\\n\\n\");\n}\n\n\nvar _EncodeAmpsAndAngles = function(text) {\n// Smart processing for ampersands and angle brackets that need to be encoded.\n\n\t// Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n\t//   http://bumppo.net/projects/amputator/\n\ttext = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g,\"&amp;\");\n\n\t// Encode naked <'s\n\ttext = text.replace(/<(?![a-z\\/?\\$!])/gi,\"&lt;\");\n\n\treturn text;\n}\n\n\nvar _EncodeBackslashEscapes = function(text) {\n//\n//   Parameter:  String.\n//   Returns:\tThe string, with after processing the following backslash\n//\t\t\t   escape sequences.\n//\n\n\t// attacklab: The polite way to do this is with the new\n\t// escapeCharacters() function:\n\t//\n\t// \ttext = escapeCharacters(text,\"\\\\\",true);\n\t// \ttext = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n\t//\n\t// ...but we're sidestepping its use of the (slow) RegExp constructor\n\t// as an optimization for Firefox.  This function gets called a LOT.\n\n\ttext = text.replace(/\\\\(\\\\)/g,escapeCharacters_callback);\n\ttext = text.replace(/\\\\([`*_{}\\[\\]()>#+-.!])/g,escapeCharacters_callback);\n\treturn text;\n}\n\n\nvar _DoAutoLinks = function(text) {\n\n\ttext = text.replace(/<((https?|ftp|dict):[^'\">\\s]+)>/gi,\"<a href=\\\"$1\\\">$1</a>\");\n\n\t// Email addresses: <address@domain.foo>\n\n\t/*\n\t\ttext = text.replace(/\n\t\t\t<\n\t\t\t(?:mailto:)?\n\t\t\t(\n\t\t\t\t[-.\\w]+\n\t\t\t\t\\@\n\t\t\t\t[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+\n\t\t\t)\n\t\t\t>\n\t\t/gi, _DoAutoLinks_callback());\n\t*/\n\ttext = text.replace(/<(?:mailto:)?([-.\\w]+\\@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi,\n\t\tfunction(wholeMatch,m1) {\n\t\t\treturn _EncodeEmailAddress( _UnescapeSpecialChars(m1) );\n\t\t}\n\t);\n\n\treturn text;\n}\n\n\nvar _EncodeEmailAddress = function(addr) {\n//\n//  Input: an email address, e.g. \"foo@example.com\"\n//\n//  Output: the email address as a mailto link, with each character\n//\tof the address encoded as either a decimal or hex entity, in\n//\tthe hopes of foiling most address harvesting spam bots. E.g.:\n//\n//\t<a href=\"&#x6D;&#97;&#105;&#108;&#x74;&#111;:&#102;&#111;&#111;&#64;&#101;\n//\t   x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;\">&#102;&#111;&#111;\n//\t   &#64;&#101;x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;</a>\n//\n//  Based on a filter by Matthew Wickline, posted to the BBEdit-Talk\n//  mailing list: <http://tinyurl.com/yu7ue>\n//\n\n\tvar encode = [\n\t\tfunction(ch){return \"&#\"+ch.charCodeAt(0)+\";\";},\n\t\tfunction(ch){return \"&#x\"+ch.charCodeAt(0).toString(16)+\";\";},\n\t\tfunction(ch){return ch;}\n\t];\n\n\taddr = \"mailto:\" + addr;\n\n\taddr = addr.replace(/./g, function(ch) {\n\t\tif (ch == \"@\") {\n\t\t   \t// this *must* be encoded. I insist.\n\t\t\tch = encode[Math.floor(Math.random()*2)](ch);\n\t\t} else if (ch !=\":\") {\n\t\t\t// leave ':' alone (to spot mailto: later)\n\t\t\tvar r = Math.random();\n\t\t\t// roughly 10% raw, 45% hex, 45% dec\n\t\t\tch =  (\n\t\t\t\t\tr > .9  ?\tencode[2](ch)   :\n\t\t\t\t\tr > .45 ?\tencode[1](ch)   :\n\t\t\t\t\t\t\t\tencode[0](ch)\n\t\t\t\t);\n\t\t}\n\t\treturn ch;\n\t});\n\n\taddr = \"<a href=\\\"\" + addr + \"\\\">\" + addr + \"</a>\";\n\taddr = addr.replace(/\">.+:/g,\"\\\">\"); // strip the mailto: from the visible part\n\n\treturn addr;\n}\n\n\nvar _UnescapeSpecialChars = function(text) {\n//\n// Swap back in all the special characters we've hidden.\n//\n\ttext = text.replace(/~E(\\d+)E/g,\n\t\tfunction(wholeMatch,m1) {\n\t\t\tvar charCodeToReplace = parseInt(m1);\n\t\t\treturn String.fromCharCode(charCodeToReplace);\n\t\t}\n\t);\n\treturn text;\n}\n\n\nvar _Outdent = function(text) {\n//\n// Remove one level of line-leading tabs or spaces\n//\n\n\t// attacklab: hack around Konqueror 3.5.4 bug:\n\t// \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n\n\ttext = text.replace(/^(\\t|[ ]{1,4})/gm,\"~0\"); // attacklab: g_tab_width\n\n\t// attacklab: clean up hack\n\ttext = text.replace(/~0/g,\"\")\n\n\treturn text;\n}\n\nvar _Detab = function(text) {\n// attacklab: Detab's completely rewritten for speed.\n// In perl we could fix it by anchoring the regexp with \\G.\n// In javascript we're less fortunate.\n\n\t// expand first n-1 tabs\n\ttext = text.replace(/\\t(?=\\t)/g,\"    \"); // attacklab: g_tab_width\n\n\t// replace the nth with two sentinels\n\ttext = text.replace(/\\t/g,\"~A~B\");\n\n\t// use the sentinel to anchor our regex so it doesn't explode\n\ttext = text.replace(/~B(.+?)~A/g,\n\t\tfunction(wholeMatch,m1,m2) {\n\t\t\tvar leadingText = m1;\n\t\t\tvar numSpaces = 4 - leadingText.length % 4;  // attacklab: g_tab_width\n\n\t\t\t// there *must* be a better way to do this:\n\t\t\tfor (var i=0; i<numSpaces; i++) leadingText+=\" \";\n\n\t\t\treturn leadingText;\n\t\t}\n\t);\n\n\t// clean up sentinels\n\ttext = text.replace(/~A/g,\"    \");  // attacklab: g_tab_width\n\ttext = text.replace(/~B/g,\"\");\n\n\treturn text;\n}\n\n\n//\n//  attacklab: Utility functions\n//\n\n\nvar escapeCharacters = function(text, charsToEscape, afterBackslash) {\n\t// First we have to escape the escape characters so that\n\t// we can build a character class out of them\n\tvar regexString = \"([\" + charsToEscape.replace(/([\\[\\]\\\\])/g,\"\\\\$1\") + \"])\";\n\n\tif (afterBackslash) {\n\t\tregexString = \"\\\\\\\\\" + regexString;\n\t}\n\n\tvar regex = new RegExp(regexString,\"g\");\n\ttext = text.replace(regex,escapeCharacters_callback);\n\n\treturn text;\n}\n\n\nvar escapeCharacters_callback = function(wholeMatch,m1) {\n\tvar charCodeToEscape = m1.charCodeAt(0);\n\treturn \"~E\"+charCodeToEscape+\"E\";\n}\n\n} // end of Showdown.converter\n\n\n// export\nif (typeof module !== 'undefined') module.exports = Showdown;\n\n// stolen from AMD branch of underscore\n// AMD define happens at the end for compatibility with AMD loaders\n// that don't enforce next-turn semantics on modules.\nif (typeof define === 'function' && define.amd) {\n    define('showdown', function() {\n        return Showdown;\n    });\n}\n","/*!\n * Flatdoc - (c) 2013, 2014 Rico Sta. Cruz\n * http://ricostacruz.com/flatdoc\n * @license MIT\n */\n\n(function($) {\n    var exports = this;\n\n    var marked;\n\n    /**\n     * Basic Flatdoc module.\n     *\n     * The main entry point is `Flatdoc.run()`, which invokes the [Runner].\n     *\n     *     Flatdoc.run({\n   *       fetcher: Flatdoc.github('rstacruz/backbone-patterns');\n   *     });\n     *\n     * These fetcher functions are available:\n     *\n     *     Flatdoc.github('owner/repo')\n     *     Flatdoc.github('owner/repo', 'API.md')\n     *     Flatdoc.github('owner/repo', 'API.md', 'branch')\n     *     Flatdoc.bitbucket('owner/repo')\n     *     Flatdoc.bitbucket('owner/repo', 'API.md')\n     *     Flatdoc.bitbucket('owner/repo', 'API.md', 'branch')\n     *     Flatdoc.file('http://path/to/url')\n     *     Flatdoc.file([ 'http://path/to/url', ... ])\n     */\n\n    var Flatdoc = exports.Flatdoc = {};\n\n    /**\n     * Creates a runner.\n     * See [Flatdoc].\n     */\n\n    Flatdoc.run = function(options) {\n        $(function() { (new Flatdoc.runner(options)).run(); });\n    };\n\n    /**\n     * File fetcher function.\n     *\n     * Fetches a given `url` via AJAX.\n     * See [Runner#run()] for a description of fetcher functions.\n     */\n\n    Flatdoc.file = function(url) {\n        function loadData(locations, response, callback) {\n            if (locations.length === 0) callback(null, response);\n\n            else $.get(locations.shift())\n                .fail(function(e) {\n                    callback(e, null);\n                })\n                .done(function (data) {\n                    if (response.length > 0) response += '\\n\\n';\n                    response += data;\n                    loadData(locations, response, callback);\n                });\n        }\n\n        return function(callback) {\n            loadData(url instanceof Array ?\n                url : [url], '', callback);\n        };\n    };\n\n    /**\n     * Github fetcher.\n     * Fetches from repo `repo` (in format 'user/repo').\n     *\n     * If the parameter `filepath` is supplied, it fetches the contents of that\n     * given file in the repo's default branch. To fetch the contents of\n     * `filepath` from a different branch, the parameter `ref` should be\n     * supplied with the target branch name.\n     *\n     * See [Runner#run()] for a description of fetcher functions.\n     *\n     * See: http://developer.github.com/v3/repos/contents/\n     */\n    Flatdoc.github = function(opts) {\n        if (typeof opts === 'string') {\n            opts = {\n                repo: arguments[0],\n                filepath: arguments[1]\n            };\n        }\n        var url;\n        if (opts.filepath) {\n            url = 'https://api.github.com/repos/'+opts.repo+'/contents/'+opts.filepath;\n        } else {\n            url = 'https://api.github.com/repos/'+opts.repo+'/readme';\n        }\n        var data = {};\n        if (opts.token) {\n            data.access_token = opts.token;\n        }\n        if (opts.ref) {\n            data.ref = opts.ref;\n        }\n        return function(callback) {\n            $.get(url, data)\n                .fail(function(e) { callback(e, null); })\n                .done(function(data) {\n                    var markdown = exports.Base64.decode(data.content);\n                    callback(null, markdown);\n                });\n        };\n    };\n\n    /**\n     * Bitbucket fetcher.\n     * Fetches from repo `repo` (in format 'user/repo').\n     *\n     * If the parameter `filepath` is supplied, it fetches the contents of that\n     * given file in the repo.\n     *\n     * See [Runner#run()] for a description of fetcher functions.\n     *\n     * See: https://confluence.atlassian.com/display/BITBUCKET/src+Resources#srcResources-GETrawcontentofanindividualfile\n     * See: http://ben.onfabrik.com/posts/embed-bitbucket-source-code-on-your-website\n     * Bitbucket appears to have stricter restrictions on\n     * Access-Control-Allow-Origin, and so the method here is a bit\n     * more complicated than for Github\n     *\n     * If you don't pass a branch name, then 'default' for Hg repos is assumed\n     * For git, you should pass 'master'. In both cases, you should also be able\n     * to pass in a revision number here -- in Mercurial, this also includes\n     * things like 'tip' or the repo-local integer revision number\n     * Default to Mercurial because Git users historically tend to use GitHub\n     */\n    Flatdoc.bitbucket = function(opts) {\n        if (typeof opts === 'string') {\n            opts = {\n                repo: arguments[0],\n                filepath: arguments[1],\n                branch: arguments[2]\n            };\n        }\n        if (!opts.filepath) opts.filepath = 'readme.md';\n        if (!opts.branch) opts.branch = 'default';\n\n        var url = 'https://bitbucket.org/api/1.0/repositories/'+opts.repo+'/src/'+opts.branch+'/'+opts.filepath;\n\n        return function(callback) {\n            $.ajax({\n                url: url,\n                dataType: 'jsonp',\n                error: function(xhr, status, error) {\n                    alert(error);\n                },\n                success: function(response) {\n                    var markdown = response.data;\n                    callback(null, markdown);\n                }\n            });\n        };\n    };\n\n    /**\n     * Parser module.\n     * Parses a given Markdown document and returns a JSON object with data\n     * on the Markdown document.\n     *\n     *     var data = Flatdoc.parser.parse('markdown source here');\n     *     console.log(data);\n     *\n     *     data == {\n   *       title: 'My Project',\n   *       content: '<p>This project is a...',\n   *       menu: {...}\n   *     }\n     */\n\n    var Parser = Flatdoc.parser = {};\n    //\n    ///**\n    // * Parses a given Markdown document.\n    // * See `Parser` for more info.\n    // */\n    //Parser.parse = function(source, highlight) {\n    //    marked = exports.marked;\n    //\n    //    Parser.setMarkedOptions(highlight);\n    //\n    //    var html = $(\"<div>\" + marked(source));\n    //    var h1 = html.find('h1').eq(0);\n    //    var title = h1.text();\n    //\n    //    // Mangle content\n    //    Transformer.mangle(html);\n    //    var menu = Transformer.getMenu(html);\n    //\n    //    return { title: title, content: html, menu: menu };\n    //};\n    //\n    //Parser.setMarkedOptions = function(highlight) {\n    //    marked.setOptions({\n    //        langPrefix: \"language-\",\n    //        highlight: function(code, lang) {\n    //            if (lang) {\n    //                return highlight(code, lang);\n    //            }\n    //            return code;\n    //        }\n    //    });\n    //};\n\n    /**\n     * Parses a given Markdown document.\n     * See `Parser` for more info.\n     */\n    Parser.parse = function(source, highlight) {\n\n        converter = new Showdown.converter({ extensions: ['table','definition','github','badges'] });\n\n        var html = $(\"<div>\" + converter.makeHtml(source));\n        var h1 = html.find('h1').eq(0);\n        var title = h1.text();\n\n        // Mangle content\n        Transformer.mangle(html);\n        var menu = Transformer.getMenu(html);\n\n        //Prism.highlightAll();\n\n        return { title: title, content: html, menu: menu };\n    };\n\n    /**\n     * Transformer module.\n     * This takes care of any HTML mangling needed.  The main entry point is\n     * `.mangle()` which applies all transformations needed.\n     *\n     *     var $content = $(\"<p>Hello there, this is a docu...\");\n     *     Flatdoc.transformer.mangle($content);\n     *\n     * If you would like to change any of the transformations, decorate any of\n     * the functions in `Flatdoc.transformer`.\n     */\n\n    var Transformer = Flatdoc.transformer = {};\n\n    /**\n     * Takes a given HTML `$content` and improves the markup of it by executing\n     * the transformations.\n     *\n     * > See: [Transformer](#transformer)\n     */\n    Transformer.mangle = function($content) {\n        this.addIDs($content);\n        this.buttonize($content);\n        this.smartquotes($content);\n    };\n\n    /**\n     * Adds IDs to headings.\n     */\n\n    Transformer.addIDs = function($content) {\n        var slugs = ['', '', ''];\n        $content.find('h1, h2, h3').each(function() {\n            var $el = $(this);\n            var num = parseInt(this.nodeName[1]);\n            var text = $el.text();\n            var slug = Flatdoc.slugify(text);\n            if (num > 1) slug = slugs[num - 2] + '-' + slug;\n            slugs.length = num - 1;\n            slugs = slugs.concat([slug, slug]);\n            $el.attr('id', slug);\n        });\n    };\n\n    /**\n     * Returns menu data for a given HTML.\n     *\n     *     menu = Flatdoc.transformer.getMenu($content);\n     *     menu == {\n   *       level: 0,\n   *       items: [{\n   *         section: \"Getting started\",\n   *         level: 1,\n   *         items: [...]}, ...]}\n     */\n\n    Transformer.getMenu = function($content) {\n        var root = {items: [], id: '', level: 0};\n        var cache = [root];\n\n        function mkdir_p(level) {\n            cache.length = level + 1;\n            var obj = cache[level];\n            if (!obj) {\n                var parent = (level > 1) ? mkdir_p(level-1) : root;\n                obj = { items: [], level: level };\n                cache = cache.concat([obj, obj]);\n                parent.items.push(obj);\n            }\n            return obj;\n        }\n\n        $content.find('h1, h2, h3').each(function() {\n            var $el = $(this);\n            var level = +(this.nodeName.substr(1));\n\n            var parent = mkdir_p(level-1);\n\n            var obj = { section: $el.text(), items: [], level: level, id: $el.attr('id') };\n            parent.items.push(obj);\n            cache[level] = obj;\n        });\n\n        return root;\n    };\n\n    /**\n     * Changes \"button >\" text to buttons.\n     */\n\n    Transformer.buttonize = function($content) {\n        $content.find('a').each(function() {\n            var $a = $(this);\n\n            var m = $a.text().match(/^(.*) >$/);\n            if (m) $a.text(m[1]).addClass('button');\n        });\n    };\n\n    /**\n     * Applies smart quotes to a given element.\n     * It leaves `code` and `pre` blocks alone.\n     */\n\n    Transformer.smartquotes = function ($content) {\n        var nodes = getTextNodesIn($content), len = nodes.length;\n        for (var i=0; i<len; i++) {\n            var node = nodes[i];\n            node.nodeValue = quotify(node.nodeValue);\n        }\n    };\n\n    /**\n     * Syntax highlighters.\n     *\n     * You may add or change more highlighters via the `Flatdoc.highlighters`\n     * object.\n     *\n     *     Flatdoc.highlighters.js = function(code) {\n   *     };\n     *\n     * Each of these functions\n     */\n\n    var Highlighters = Flatdoc.highlighters = {};\n\n    /**\n     * JavaScript syntax highlighter.\n     *\n     * Thanks @visionmedia!\n     */\n\n    Highlighters.js = Highlighters.javascript = function(code) {\n        var tokens = [],\n            code = code\n                .replace(/\\/\\/(.*)/gm, function(match, comment, offset, string) {\n                    tokens.push('<span class=\"comment\">//'+comment+'</span>');\n                    return '__HIGHLIGHT_SCRIPT_TOKEN_'+(tokens.length-1)+'__';\n                })\n                .replace(/\\/\\*(.*)\\*\\//gm, function(match, comment, offset, string) {\n                    tokens.push('<span class=\"comment\">/*'+comment+'*/</span>');\n                    return '__HIGHLIGHT_SCRIPT_TOKEN_'+(tokens.length-1)+'__';\n                })\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/(\"[^\\\"]*?\")/g, '<span class=\"string\">$1</span>')\n                .replace(/('[^\\']*?')/g, '<span class=\"string\">$1</span>')\n                //.replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n                .replace(/\\b(\\d+\\.\\d+)\\b/gm, '<span class=\"number\">$1</span>')\n                .replace(/\\b(\\d+)\\b/gm, '<span class=\"number\">$1</span>')\n                .replace(/\\bnew *([a-zA-Z0-9_.$]+)/gm, '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>')\n                .replace(/\\b(function|new|throw|return|var|if|else|try|case|switch|break|default|while|do)\\b/gm, '<span class=\"keyword\">$1</span>')\n                .replace(/\\b((document|window)(.[a-zA-Z0-9_.$]+)?)\\b/gm, '<span class=\"class\">$1</span>')\n            ;\n\n        tokens.forEach(function(token, i) {\n            code = code.replace('__HIGHLIGHT_SCRIPT_TOKEN_'+i+'__', token);\n        });\n\n        return code;\n    };\n\n    Highlighters.html = function(code) {\n        var tokens = [],\n            code = code\n            .replace(/(<script(.*?)>)([\\s\\S]*?)(<\\/script>)/igm, function(match, tag, attributes, content, endTag, offset, string) {\n                tokens.push(Highlighters.js(content));\n                return tag+'{{HIGHLIGHT_TOKEN_'+(tokens.length-1)+'}}'+endTag;\n            })\n            //.replace(/(\\s+)([a-zA-Z0-9\\-]+)(\\s*?)=/g, function(match, leadingSpace, name, trailingSpace, offset, string) {\n            //        console.log(name);\n            //    tokens.push(leadingSpace+'<span class=\"attribute\">'+name+'</span>'+trailingSpace+'=');\n            //    return '{{HIGHLIGHT_TOKEN_'+(tokens.length-1)+'}}';\n            //})\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/([^\\s]+?)=(\"[^\"]*?\")/gm, '<span class=\"attribute\">$1</span>=<span class=\"string\">$2</span>')\n            //.replace(/(\"[^\\\"]*?\")/g, '<span class=\"string\">$1</span>')\n            .replace(/('[^\\']*?')/g, '<span class=\"string\">$1</span>')\n            .replace(/&lt;!--(.*)--&gt;/g, '<span class=\"comment\">&lt;!--$1--&gt;</span>')\n            .replace(/&lt;([^!][^\\s&]*)/g, '&lt;<span class=\"entity\">$1</span>')\n        ;\n\n        tokens.forEach(function(token, i) {\n            code = code.replace('{{HIGHLIGHT_TOKEN_'+i+'}}', token);\n        });\n\n        //console.log(tokens);\n\n        //console.log(code);\n        return code;\n    };\n\n    Highlighters.generic = function(code) {\n        return code\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/(\"[^\\\"]*?\")/g, '<span class=\"string\">$1</span>')\n            .replace(/('[^\\']*?')/g, '<span class=\"string\">$1</span>')\n            .replace(/(\\/\\/|#)(.*)/gm, '<span class=\"comment\">$1$2</span>')\n            .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n            .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>');\n    };\n\n    /**\n     * Menu view. Renders menus\n     */\n\n    var MenuView = Flatdoc.menuView = function(menu) {\n        var $el = $(\"<ul>\");\n\n        function process(node, $parent) {\n            var id = node.id || 'root';\n\n            var $li = $('<li>')\n                .attr('id', id + '-item')\n                .addClass('level-' + node.level)\n                .appendTo($parent);\n\n            if (node.section) {\n                var $a = $('<a>')\n                    .html(node.section)\n                    .attr('id', id + '-link')\n                    .attr('href', '#' + node.id)\n                    .addClass('level-' + node.level)\n                    .appendTo($li);\n            }\n\n            if (node.items.length > 0) {\n                var $ul = $('<ul>')\n                    .addClass('level-' + (node.level+1))\n                    .attr('id', id + '-list')\n                    .appendTo($li);\n\n                node.items.forEach(function(item) {\n                    process(item, $ul);\n                });\n            }\n        }\n\n        process(menu, $el);\n        return $el;\n    };\n\n    /**\n     * A runner module that fetches via a `fetcher` function.\n     *\n     *     var runner = new Flatdoc.runner({\n   *       fetcher: Flatdoc.url('readme.txt')\n   *     });\n     *     runner.run();\n     *\n     * The following options are available:\n     *\n     *  - `fetcher` - a function that takes a callback as an argument and\n     *    executes that callback when data is returned.\n     *\n     * See: [Flatdoc.run()]\n     */\n\n    var Runner = Flatdoc.runner = function(options) {\n        this.initialize(options);\n    };\n\n    Runner.prototype.root    = '[role~=\"flatdoc\"]';\n    Runner.prototype.menu    = '[role~=\"flatdoc-menu\"]';\n    Runner.prototype.title   = '[role~=\"flatdoc-title\"]';\n    Runner.prototype.content = '[role~=\"flatdoc-content\"]';\n\n    Runner.prototype.initialize = function(options) {\n        $.extend(this, options);\n    };\n\n    /**\n     * Syntax highlighting.\n     *\n     * You may define a custom highlight function such as `highlight` from\n     * the highlight.js library.\n     *\n     *     Flatdoc.run({\n   *       highlight: function (code, value) {\n   *         return hljs.highlight(lang, code).value;\n   *       },\n   *       ...\n   *     });\n     *\n     */\n\n    Runner.prototype.highlight = function(code, lang) {\n\n\n        var grammar;\n        switch(lang) {\n            case \"html\":\n            case \"markup\":\n                grammar = Prism.languages.markup;\n                break;\n\n            case \"js\":\n            case \"json\":\n            case \"javascript\":\n                grammar = Prism.languages.javascript;\n                break;\n\n            case \"css\":\n                grammar = Prism.languages.css;\n                break;\n\n            case \"clike\":\n                grammar = Prism.languages.clike;\n                break;\n\n            case \"http\":\n                grammar = Prism.languages.http;\n                break;\n\n            case \"less\":\n                grammar = Prism.languages.less;\n                break;\n\n            case \"php\":\n                grammar = Prism.languages.php;\n                break;\n\n            case \"twig\":\n                grammar = Prism.languages.twig;\n                break;\n        }\n\n        if (grammar !== undefined) {\n            return Prism.highlight(code, grammar);\n        } else {\n            var fn = Flatdoc.highlighters[lang] || Flatdoc.highlighters.generic;\n            return fn(code);\n        }\n    };\n\n    /**\n     * Loads the Markdown document (via the fetcher), parses it, and applies it\n     * to the elements.\n     */\n\n    Runner.prototype.run = function() {\n        var doc = this;\n        $(doc.root).trigger('flatdoc:loading');\n        doc.fetcher(function(err, markdown) {\n            if (err) {\n                console.error('[Flatdoc] fetching Markdown data failed.', err);\n                return;\n            }\n            var data = Flatdoc.parser.parse(markdown, doc.highlight);\n            doc.applyData(data, doc);\n            var id = location.hash.substr(1);\n            if (id) {\n                var el = document.getElementById(id);\n                if (el) {\n                    el.scrollIntoView(true);\n                    setTimeout(function(){\n                        window.jumping = false;\n                    }, 600);\n                }\n            }\n            $(doc.root).trigger('flatdoc:ready');\n        });\n    };\n\n    /**\n     * Applies given doc data `data` to elements in object `elements`.\n     */\n\n    Runner.prototype.applyData = function(data) {\n        var elements = this;\n\n        elements.el('title').html(data.title);\n        elements.el('content').html(data.content.find('>*'));\n        elements.el('menu').html(MenuView(data.menu));\n\n        this.updateCodeBlocks();\n    };\n\n    Runner.prototype.updateCodeBlocks = function() {\n\n        var languageBlocks = $('pre code[class^=language]'),\n            self = this;\n\n        languageBlocks.each(function(i, block) {\n            var classes = block.className.split(/\\s+/);\n\n            classes.forEach(function(name) {\n                var m = name.match(/^language-(.*)$/);\n                if (m) {\n                    $(block).html(self.highlight($(\"<div/>\").html($(block).html()).text(), m[1]));\n                }\n            });\n\n        });\n\n    }\n\n    /**\n     * Fetches a given element from the DOM.\n     *\n     * Returns a jQuery object.\n     * @api private\n     */\n\n    Runner.prototype.el = function(aspect) {\n        return $(this[aspect], this.root);\n    };\n\n    /*\n     * Helpers\n     */\n\n    // http://stackoverflow.com/questions/298750/how-do-i-select-text-nodes-with-jquery\n    function getTextNodesIn(el) {\n        var exclude = 'iframe,pre,code';\n        return $(el).find(':not('+exclude+')').andSelf().contents().filter(function() {\n            return this.nodeType == 3 && $(this).closest(exclude).length === 0;\n        });\n    }\n\n    // http://www.leancrew.com/all-this/2010/11/smart-quotes-in-javascript/\n    function quotify(a) {\n        //a = a.replace(/(^|[\\-\\u2014\\s(\\[\"])'/g, \"$1\\u2018\");        // opening singles\n        //a = a.replace(/'/g, \"\\u2019\");                              // closing singles & apostrophes\n        //a = a.replace(/(^|[\\-\\u2014\\/\\[(\\u2018\\s])\"/g, \"$1\\u201c\"); // opening doubles\n        //a = a.replace(/\"/g, \"\\u201d\");                              // closing doubles\n        a = a.replace(/\\.\\.\\./g, \"\\u2026\");                         // ellipses\n        a = a.replace(/--/g, \"\\u2014\");                             // em-dashes\n        return a;\n    }\n\n})(jQuery);\n\n/* jshint ignore:start */\n\n/*!\n * marked - a markdown parser\n * Copyright (c) 2011-2013, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n(function(){var t={newline:/^\\n+/,code:/^( {4}[^\\n]+\\n*)+/,fences:o,hr:/^( *[-*_]){3,} *(?:\\n+|$)/,heading:/^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,nptable:o,lheading:/^([^\\n]+)\\n *(=|-){3,} *\\n*/,blockquote:/^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+/,list:/^( *)(bull) [\\s\\S]+?(?:hr|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,html:/^ *(?:comment|closed|closing) *(?:\\n{2,}|\\s*$)/,def:/^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,table:o,paragraph:/^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,text:/^[^\\n]+/};t.bullet=/(?:[*+-]|\\d+\\.)/;t.item=/^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;t.item=l(t.item,\"gm\")(/bull/g,t.bullet)();t.list=l(t.list)(/bull/g,t.bullet)(\"hr\",/\\n+(?=(?: *[-*_]){3,} *(?:\\n+|$))/)();t._tag=\"(?!(?:\"+\"a|em|strong|small|s|cite|q|dfn|abbr|data|time|code\"+\"|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo\"+\"|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|@)\\\\b\";t.html=l(t.html)(\"comment\",/<!--[\\s\\S]*?-->/)(\"closed\",/<(tag)[\\s\\S]+?<\\/\\1>/)(\"closing\",/<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)(/tag/g,t._tag)();t.paragraph=l(t.paragraph)(\"hr\",t.hr)(\"heading\",t.heading)(\"lheading\",t.lheading)(\"blockquote\",t.blockquote)(\"tag\",\"<\"+t._tag)(\"def\",t.def)();t.normal=h({},t);t.gfm=h({},t.normal,{fences:/^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,paragraph:/^/});t.gfm.paragraph=l(t.paragraph)(\"(?!\",\"(?!\"+t.gfm.fences.source.replace(\"\\\\1\",\"\\\\2\")+\"|\")();t.tables=h({},t.gfm,{nptable:/^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,table:/^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/});function e(e){this.tokens=[];this.tokens.links={};this.options=e||a.defaults;this.rules=t.normal;if(this.options.gfm){if(this.options.tables){this.rules=t.tables}else{this.rules=t.gfm}}}e.rules=t;e.lex=function(t,n){var s=new e(n);return s.lex(t)};e.prototype.lex=function(t){t=t.replace(/\\r\\n|\\r/g,\"\\n\").replace(/\\t/g,\"    \").replace(/\\u00a0/g,\" \").replace(/\\u2424/g,\"\\n\");return this.token(t,true)};e.prototype.token=function(e,n){var e=e.replace(/^ +$/gm,\"\"),s,i,r,l,o,h,a,u,p;while(e){if(r=this.rules.newline.exec(e)){e=e.substring(r[0].length);if(r[0].length>1){this.tokens.push({type:\"space\"})}}if(r=this.rules.code.exec(e)){e=e.substring(r[0].length);r=r[0].replace(/^ {4}/gm,\"\");this.tokens.push({type:\"code\",text:!this.options.pedantic?r.replace(/\\n+$/,\"\"):r});continue}if(r=this.rules.fences.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"code\",lang:r[2],text:r[3]});continue}if(r=this.rules.heading.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"heading\",depth:r[1].length,text:r[2]});continue}if(n&&(r=this.rules.nptable.exec(e))){e=e.substring(r[0].length);h={type:\"table\",header:r[1].replace(/^ *| *\\| *$/g,\"\").split(/ *\\| */),align:r[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:r[3].replace(/\\n$/,\"\").split(\"\\n\")};for(u=0;u<h.align.length;u++){if(/^ *-+: *$/.test(h.align[u])){h.align[u]=\"right\"}else if(/^ *:-+: *$/.test(h.align[u])){h.align[u]=\"center\"}else if(/^ *:-+ *$/.test(h.align[u])){h.align[u]=\"left\"}else{h.align[u]=null}}for(u=0;u<h.cells.length;u++){h.cells[u]=h.cells[u].split(/ *\\| */)}this.tokens.push(h);continue}if(r=this.rules.lheading.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"heading\",depth:r[2]===\"=\"?1:2,text:r[1]});continue}if(r=this.rules.hr.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"hr\"});continue}if(r=this.rules.blockquote.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"blockquote_start\"});r=r[0].replace(/^ *> ?/gm,\"\");this.token(r,n);this.tokens.push({type:\"blockquote_end\"});continue}if(r=this.rules.list.exec(e)){e=e.substring(r[0].length);l=r[2];this.tokens.push({type:\"list_start\",ordered:l.length>1});r=r[0].match(this.rules.item);s=false;p=r.length;u=0;for(;u<p;u++){h=r[u];a=h.length;h=h.replace(/^ *([*+-]|\\d+\\.) +/,\"\");if(~h.indexOf(\"\\n \")){a-=h.length;h=!this.options.pedantic?h.replace(new RegExp(\"^ {1,\"+a+\"}\",\"gm\"),\"\"):h.replace(/^ {1,4}/gm,\"\")}if(this.options.smartLists&&u!==p-1){o=t.bullet.exec(r[u+1])[0];if(l!==o&&!(l.length>1&&o.length>1)){e=r.slice(u+1).join(\"\\n\")+e;u=p-1}}i=s||/\\n\\n(?!\\s*$)/.test(h);if(u!==p-1){s=h[h.length-1]===\"\\n\";if(!i)i=s}this.tokens.push({type:i?\"loose_item_start\":\"list_item_start\"});this.token(h,false);this.tokens.push({type:\"list_item_end\"})}this.tokens.push({type:\"list_end\"});continue}if(r=this.rules.html.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:this.options.sanitize?\"paragraph\":\"html\",pre:r[1]===\"pre\"||r[1]===\"script\",text:r[0]});continue}if(n&&(r=this.rules.def.exec(e))){e=e.substring(r[0].length);this.tokens.links[r[1].toLowerCase()]={href:r[2],title:r[3]};continue}if(n&&(r=this.rules.table.exec(e))){e=e.substring(r[0].length);h={type:\"table\",header:r[1].replace(/^ *| *\\| *$/g,\"\").split(/ *\\| */),align:r[2].replace(/^ *|\\| *$/g,\"\").split(/ *\\| */),cells:r[3].replace(/(?: *\\| *)?\\n$/,\"\").split(\"\\n\")};for(u=0;u<h.align.length;u++){if(/^ *-+: *$/.test(h.align[u])){h.align[u]=\"right\"}else if(/^ *:-+: *$/.test(h.align[u])){h.align[u]=\"center\"}else if(/^ *:-+ *$/.test(h.align[u])){h.align[u]=\"left\"}else{h.align[u]=null}}for(u=0;u<h.cells.length;u++){h.cells[u]=h.cells[u].replace(/^ *\\| *| *\\| *$/g,\"\").split(/ *\\| */)}this.tokens.push(h);continue}if(n&&(r=this.rules.paragraph.exec(e))){e=e.substring(r[0].length);this.tokens.push({type:\"paragraph\",text:r[1][r[1].length-1]===\"\\n\"?r[1].slice(0,-1):r[1]});continue}if(r=this.rules.text.exec(e)){e=e.substring(r[0].length);this.tokens.push({type:\"text\",text:r[0]});continue}if(e){throw new Error(\"Infinite loop on byte: \"+e.charCodeAt(0))}}return this.tokens};var n={escape:/^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,autolink:/^<([^ >]+(@|:\\/)[^ >]+)>/,url:o,tag:/^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,link:/^!?\\[(inside)\\]\\(href\\)/,reflink:/^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,nolink:/^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,strong:/^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,em:/^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,code:/^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,br:/^ {2,}\\n(?!\\s*$)/,del:o,text:/^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/};n._inside=/(?:\\[[^\\]]*\\]|[^\\]]|\\](?=[^\\[]*\\]))*/;n._href=/\\s*<?([^\\s]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;n.link=l(n.link)(\"inside\",n._inside)(\"href\",n._href)();n.reflink=l(n.reflink)(\"inside\",n._inside)();n.normal=h({},n);n.pedantic=h({},n.normal,{strong:/^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,em:/^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/});n.gfm=h({},n.normal,{escape:l(n.escape)(\"])\",\"~|])\")(),url:/^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,del:/^~~(?=\\S)([\\s\\S]*?\\S)~~/,text:l(n.text)(\"]|\",\"~]|\")(\"|\",\"|https?://|\")()});n.breaks=h({},n.gfm,{br:l(n.br)(\"{2,}\",\"*\")(),text:l(n.gfm.text)(\"{2,}\",\"*\")()});function s(t,e){this.options=e||a.defaults;this.links=t;this.rules=n.normal;if(!this.links){throw new Error(\"Tokens array requires a `links` property.\")}if(this.options.gfm){if(this.options.breaks){this.rules=n.breaks}else{this.rules=n.gfm}}else if(this.options.pedantic){this.rules=n.pedantic}}s.rules=n;s.output=function(t,e,n){var i=new s(e,n);return i.output(t)};s.prototype.output=function(t){var e=\"\",n,s,i,l;while(t){if(l=this.rules.escape.exec(t)){t=t.substring(l[0].length);e+=l[1];continue}if(l=this.rules.autolink.exec(t)){t=t.substring(l[0].length);if(l[2]===\"@\"){s=l[1][6]===\":\"?this.mangle(l[1].substring(7)):this.mangle(l[1]);i=this.mangle(\"mailto:\")+s}else{s=r(l[1]);i=s}e+='<a href=\"'+i+'\">'+s+\"</a>\";continue}if(l=this.rules.url.exec(t)){t=t.substring(l[0].length);s=r(l[1]);i=s;e+='<a href=\"'+i+'\">'+s+\"</a>\";continue}if(l=this.rules.tag.exec(t)){t=t.substring(l[0].length);e+=this.options.sanitize?r(l[0]):l[0];continue}if(l=this.rules.link.exec(t)){t=t.substring(l[0].length);e+=this.outputLink(l,{href:l[2],title:l[3]});continue}if((l=this.rules.reflink.exec(t))||(l=this.rules.nolink.exec(t))){t=t.substring(l[0].length);n=(l[2]||l[1]).replace(/\\s+/g,\" \");n=this.links[n.toLowerCase()];if(!n||!n.href){e+=l[0][0];t=l[0].substring(1)+t;continue}e+=this.outputLink(l,n);continue}if(l=this.rules.strong.exec(t)){t=t.substring(l[0].length);e+=\"<strong>\"+this.output(l[2]||l[1])+\"</strong>\";continue}if(l=this.rules.em.exec(t)){t=t.substring(l[0].length);e+=\"<em>\"+this.output(l[2]||l[1])+\"</em>\";continue}if(l=this.rules.code.exec(t)){t=t.substring(l[0].length);e+=\"<code>\"+r(l[2],true)+\"</code>\";continue}if(l=this.rules.br.exec(t)){t=t.substring(l[0].length);e+=\"<br>\";continue}if(l=this.rules.del.exec(t)){t=t.substring(l[0].length);e+=\"<del>\"+this.output(l[1])+\"</del>\";continue}if(l=this.rules.text.exec(t)){t=t.substring(l[0].length);e+=r(l[0]);continue}if(t){throw new Error(\"Infinite loop on byte: \"+t.charCodeAt(0))}}return e};s.prototype.outputLink=function(t,e){if(t[0][0]!==\"!\"){return'<a href=\"'+r(e.href)+'\"'+(e.title?' title=\"'+r(e.title)+'\"':\"\")+\">\"+this.output(t[1])+\"</a>\"}else{return'<img src=\"'+r(e.href)+'\" alt=\"'+r(t[1])+'\"'+(e.title?' title=\"'+r(e.title)+'\"':\"\")+\">\"}};s.prototype.smartypants=function(t){if(!this.options.smartypants)return t;return t.replace(/--/g,\"—\").replace(/\\.{3}/g,\"…\")};s.prototype.mangle=function(t){var e=\"\",n=t.length,s=0,i;for(;s<n;s++){i=t.charCodeAt(s);if(Math.random()>.5){i=\"x\"+i.toString(16)}e+=\"&#\"+i+\";\"}return e};function i(t){this.tokens=[];this.token=null;this.options=t||a.defaults}i.parse=function(t,e){var n=new i(e);return n.parse(t)};i.prototype.parse=function(t){this.inline=new s(t.links,this.options);this.tokens=t.reverse();var e=\"\";while(this.next()){e+=this.tok()}return e};i.prototype.next=function(){return this.token=this.tokens.pop()};i.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0};i.prototype.parseText=function(){var t=this.token.text;while(this.peek().type===\"text\"){t+=\"\\n\"+this.next().text}return this.inline.output(t)};i.prototype.tok=function(){switch(this.token.type){case\"space\":{return\"\"}case\"hr\":{return\"<hr>\\n\"}case\"heading\":{return\"<h\"+this.token.depth+\">\"+this.inline.output(this.token.text)+\"</h\"+this.token.depth+\">\\n\"}case\"code\":{if(this.options.highlight){var t=this.options.highlight(this.token.text,this.token.lang);if(t!=null&&t!==this.token.text){this.token.escaped=true;this.token.text=t}}if(!this.token.escaped){this.token.text=r(this.token.text,true)}return\"<pre><code\"+(this.token.lang?' class=\"'+this.options.langPrefix+this.token.lang+'\"':\"\")+\">\"+this.token.text+\"</code></pre>\\n\"}case\"table\":{var e=\"\",n,s,i,l,o;e+=\"<thead>\\n<tr>\\n\";for(s=0;s<this.token.header.length;s++){n=this.inline.output(this.token.header[s]);e+=this.token.align[s]?'<th align=\"'+this.token.align[s]+'\">'+n+\"</th>\\n\":\"<th>\"+n+\"</th>\\n\"}e+=\"</tr>\\n</thead>\\n\";e+=\"<tbody>\\n\";for(s=0;s<this.token.cells.length;s++){i=this.token.cells[s];e+=\"<tr>\\n\";for(o=0;o<i.length;o++){l=this.inline.output(i[o]);e+=this.token.align[o]?'<td align=\"'+this.token.align[o]+'\">'+l+\"</td>\\n\":\"<td>\"+l+\"</td>\\n\"}e+=\"</tr>\\n\"}e+=\"</tbody>\\n\";return\"<table>\\n\"+e+\"</table>\\n\"}case\"blockquote_start\":{var e=\"\";while(this.next().type!==\"blockquote_end\"){e+=this.tok()}return\"<blockquote>\\n\"+e+\"</blockquote>\\n\"}case\"list_start\":{var h=this.token.ordered?\"ol\":\"ul\",e=\"\";while(this.next().type!==\"list_end\"){e+=this.tok()}return\"<\"+h+\">\\n\"+e+\"</\"+h+\">\\n\"}case\"list_item_start\":{var e=\"\";while(this.next().type!==\"list_item_end\"){e+=this.token.type===\"text\"?this.parseText():this.tok()}return\"<li>\"+e+\"</li>\\n\"}case\"loose_item_start\":{var e=\"\";while(this.next().type!==\"list_item_end\"){e+=this.tok()}return\"<li>\"+e+\"</li>\\n\"}case\"html\":{return!this.token.pre&&!this.options.pedantic?this.inline.output(this.token.text):this.token.text}case\"paragraph\":{return\"<p>\"+this.inline.output(this.token.text)+\"</p>\\n\"}case\"text\":{return\"<p>\"+this.parseText()+\"</p>\\n\"}}};function r(t,e){return t.replace(!e?/&(?!#?\\w+;)/g:/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#39;\")}function l(t,e){t=t.source;e=e||\"\";return function n(s,i){if(!s)return new RegExp(t,e);i=i.source||i;i=i.replace(/(^|[^\\[])\\^/g,\"$1\");t=t.replace(s,i);return n}}function o(){}o.exec=o;function h(t){var e=1,n,s;for(;e<arguments.length;e++){n=arguments[e];for(s in n){if(Object.prototype.hasOwnProperty.call(n,s)){t[s]=n[s]}}}return t}function a(t,n,s){if(s||typeof n===\"function\"){if(!s){s=n;n=null}if(n)n=h({},a.defaults,n);var l=e.lex(l,n),o=n.highlight,u=0,p=l.length,g=0;if(!o||o.length<3){return s(null,i.parse(l,n))}var c=function(){delete n.highlight;var t=i.parse(l,n);n.highlight=o;return s(null,t)};for(;g<p;g++){(function(t){if(t.type!==\"code\")return;u++;return o(t.text,t.lang,function(e,n){if(n==null||n===t.text){return--u||c()}t.text=n;t.escaped=true;--u||c()})})(l[g])}return}try{if(n)n=h({},a.defaults,n);return i.parse(e.lex(t,n),n)}catch(f){f.message+=\"\\nPlease report this to https://github.com/chjj/marked.\";if((n||a.defaults).silent){return\"<p>An error occured:</p><pre>\"+r(f.message+\"\",true)+\"</pre>\"}throw f}}a.options=a.setOptions=function(t){h(a.defaults,t);return a};a.defaults={gfm:true,tables:true,breaks:false,pedantic:false,sanitize:false,smartLists:false,silent:false,highlight:null,langPrefix:\"lang-\"};a.Parser=i;a.parser=i.parse;a.Lexer=e;a.lexer=e.lex;a.InlineLexer=s;a.inlineLexer=s.output;a.parse=a;if(typeof exports===\"object\"){module.exports=a}else if(typeof define===\"function\"&&define.amd){define(function(){return a})}else{this.marked=a}}).call(function(){return this||(typeof window!==\"undefined\"?window:global)}());\n\n/*!\n * base64.js\n * http://github.com/dankogai/js-base64\n */\n\n(function(r){\"use strict\";if(r.Base64)return;var e=\"2.1.2\";var t;if(typeof module!==\"undefined\"&&module.exports){t=require(\"buffer\").Buffer}var n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";var a=function(r){var e={};for(var t=0,n=r.length;t<n;t++)e[r.charAt(t)]=t;return e}(n);var o=String.fromCharCode;var u=function(r){if(r.length<2){var e=r.charCodeAt(0);return e<128?r:e<2048?o(192|e>>>6)+o(128|e&63):o(224|e>>>12&15)+o(128|e>>>6&63)+o(128|e&63)}else{var e=65536+(r.charCodeAt(0)-55296)*1024+(r.charCodeAt(1)-56320);return o(240|e>>>18&7)+o(128|e>>>12&63)+o(128|e>>>6&63)+o(128|e&63)}};var c=/[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;var i=function(r){return r.replace(c,u)};var f=function(r){var e=[0,2,1][r.length%3],t=r.charCodeAt(0)<<16|(r.length>1?r.charCodeAt(1):0)<<8|(r.length>2?r.charCodeAt(2):0),a=[n.charAt(t>>>18),n.charAt(t>>>12&63),e>=2?\"=\":n.charAt(t>>>6&63),e>=1?\"=\":n.charAt(t&63)];return a.join(\"\")};var h=r.btoa||function(r){return r.replace(/[\\s\\S]{1,3}/g,f)};var d=t?function(r){return new t(r).toString(\"base64\")}:function(r){return h(i(r))};var v=function(r,e){return!e?d(r):d(r).replace(/[+\\/]/g,function(r){return r==\"+\"?\"-\":\"_\"}).replace(/=/g,\"\")};var g=function(r){return v(r,true)};var l=new RegExp([\"[À-ß][-¿]\",\"[à-ï][-¿]{2}\",\"[ð-÷][-¿]{3}\"].join(\"|\"),\"g\");var A=function(r){switch(r.length){case 4:var e=(7&r.charCodeAt(0))<<18|(63&r.charCodeAt(1))<<12|(63&r.charCodeAt(2))<<6|63&r.charCodeAt(3),t=e-65536;return o((t>>>10)+55296)+o((t&1023)+56320);case 3:return o((15&r.charCodeAt(0))<<12|(63&r.charCodeAt(1))<<6|63&r.charCodeAt(2));default:return o((31&r.charCodeAt(0))<<6|63&r.charCodeAt(1))}};var s=function(r){return r.replace(l,A)};var p=function(r){var e=r.length,t=e%4,n=(e>0?a[r.charAt(0)]<<18:0)|(e>1?a[r.charAt(1)]<<12:0)|(e>2?a[r.charAt(2)]<<6:0)|(e>3?a[r.charAt(3)]:0),u=[o(n>>>16),o(n>>>8&255),o(n&255)];u.length-=[0,0,2,1][t];return u.join(\"\")};var C=r.atob||function(r){return r.replace(/[\\s\\S]{1,4}/g,p)};var b=t?function(r){return new t(r,\"base64\").toString()}:function(r){return s(C(r))};var B=function(r){return b(r.replace(/[-_]/g,function(r){return r==\"-\"?\"+\":\"/\"}).replace(/[^A-Za-z0-9\\+\\/]/g,\"\"))};r.Base64={VERSION:e,atob:C,btoa:h,fromBase64:B,toBase64:v,utob:i,encode:v,encodeURI:g,btou:s,decode:B};if(typeof Object.defineProperty===\"function\"){var S=function(r){return{value:r,enumerable:false,writable:true,configurable:true}};r.Base64.extendString=function(){Object.defineProperty(String.prototype,\"fromBase64\",S(function(){return B(this)}));Object.defineProperty(String.prototype,\"toBase64\",S(function(r){return v(this,r)}));Object.defineProperty(String.prototype,\"toBase64URI\",S(function(){return v(this,true)}))}}})(this);\n\n/*!\n * node-parameterize 0.0.7\n * https://github.com/fyalavuz/node-parameterize\n * Exported as `Flatdoc.slugify`\n */\n\n(function(r){var LATIN_MAP={\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ő\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ű\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ő\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ű\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\"};var LATIN_SYMBOLS_MAP={\"©\":\"(c)\"};var GREEK_MAP={\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ά\":\"a\",\"έ\":\"e\",\"ί\":\"i\",\"ό\":\"o\",\"ύ\":\"y\",\"ή\":\"h\",\"ώ\":\"w\",\"ς\":\"s\",\"ϊ\":\"i\",\"ΰ\":\"y\",\"ϋ\":\"y\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ή\":\"H\",\"Ώ\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\"};var TURKISH_MAP={\"ş\":\"s\",\"Ş\":\"S\",\"ı\":\"i\",\"İ\":\"I\",\"ç\":\"c\",\"Ç\":\"C\",\"ü\":\"u\",\"Ü\":\"U\",\"ö\":\"o\",\"Ö\":\"O\",\"ğ\":\"g\",\"Ğ\":\"G\"};var RUSSIAN_MAP={\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ё\":\"yo\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ё\":\"Yo\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\"};var UKRAINIAN_MAP={\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ґ\":\"G\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ґ\":\"g\"};var CZECH_MAP={\"č\":\"c\",\"ď\":\"d\",\"ě\":\"e\",\"ň\":\"n\",\"ř\":\"r\",\"š\":\"s\",\"ť\":\"t\",\"ů\":\"u\",\"ž\":\"z\",\"Č\":\"C\",\"Ď\":\"D\",\"Ě\":\"E\",\"Ň\":\"N\",\"Ř\":\"R\",\"Š\":\"S\",\"Ť\":\"T\",\"Ů\":\"U\",\"Ž\":\"Z\"};var POLISH_MAP={\"ą\":\"a\",\"ć\":\"c\",\"ę\":\"e\",\"ł\":\"l\",\"ń\":\"n\",\"ó\":\"o\",\"ś\":\"s\",\"ź\":\"z\",\"ż\":\"z\",\"Ą\":\"A\",\"Ć\":\"C\",\"Ę\":\"e\",\"Ł\":\"L\",\"Ń\":\"N\",\"Ó\":\"o\",\"Ś\":\"S\",\"Ź\":\"Z\",\"Ż\":\"Z\"};var LATVIAN_MAP={\"ā\":\"a\",\"č\":\"c\",\"ē\":\"e\",\"ģ\":\"g\",\"ī\":\"i\",\"ķ\":\"k\",\"ļ\":\"l\",\"ņ\":\"n\",\"š\":\"s\",\"ū\":\"u\",\"ž\":\"z\",\"Ā\":\"A\",\"Č\":\"C\",\"Ē\":\"E\",\"Ģ\":\"G\",\"Ī\":\"i\",\"Ķ\":\"k\",\"Ļ\":\"L\",\"Ņ\":\"N\",\"Š\":\"S\",\"Ū\":\"u\",\"Ž\":\"Z\"};var ALL_DOWNCODE_MAPS=new Array;ALL_DOWNCODE_MAPS[0]=LATIN_MAP;ALL_DOWNCODE_MAPS[1]=LATIN_SYMBOLS_MAP;ALL_DOWNCODE_MAPS[2]=GREEK_MAP;ALL_DOWNCODE_MAPS[3]=TURKISH_MAP;ALL_DOWNCODE_MAPS[4]=RUSSIAN_MAP;ALL_DOWNCODE_MAPS[5]=UKRAINIAN_MAP;ALL_DOWNCODE_MAPS[6]=CZECH_MAP;ALL_DOWNCODE_MAPS[7]=POLISH_MAP;ALL_DOWNCODE_MAPS[8]=LATVIAN_MAP;var Downcoder=new Object;Downcoder.Initialize=function(){if(Downcoder.map)return;Downcoder.map={};Downcoder.chars=\"\";for(var i in ALL_DOWNCODE_MAPS){var lookup=ALL_DOWNCODE_MAPS[i];for(var c in lookup){Downcoder.map[c]=lookup[c];Downcoder.chars+=c}}Downcoder.regex=new RegExp(\"[\"+Downcoder.chars+\"]|[^\"+Downcoder.chars+\"]+\",\"g\")};downcode=function(slug){Downcoder.Initialize();var downcoded=\"\";var pieces=slug.match(Downcoder.regex);if(pieces){for(var i=0;i<pieces.length;i++){if(pieces[i].length==1){var mapped=Downcoder.map[pieces[i]];if(mapped!=null){downcoded+=mapped;continue}}downcoded+=pieces[i]}}else{downcoded=slug}return downcoded};Flatdoc.slugify=function(s,num_chars){s=downcode(s);s=s.replace(/[^-\\w\\s]/g,\"\");s=s.replace(/^\\s+|\\s+$/g,\"\");s=s.replace(/[-\\s]+/g,\"-\");s=s.toLowerCase();return s.substring(0,num_chars)};})();\n\n/* jshint ignore:end */","//\n//  Github Extension (WIP)\n//  ~~strike-through~~   ->  <del>strike-through</del>\n//\n\n(function(){\n    var github = function(converter) {\n        return [\n            {\n              // strike-through\n              // NOTE: showdown already replaced \"~\" with \"~T\", so we need to adjust accordingly.\n              type    : 'lang',\n              regex   : '(~T){2}([^~]+)(~T){2}',\n              replace : function(match, prefix, content, suffix) {\n                  return '<del>' + content + '</del>';\n              }\n            }\n        ];\n    };\n\n    // Client-side export\n    if (typeof window !== 'undefined' && window.Showdown && window.Showdown.extensions) { window.Showdown.extensions.github = github; }\n    // Server-side export\n    if (typeof module !== 'undefined') module.exports = github;\n}());\n","/*global module:true*/\n/*\n * Basic table support with re-entrant parsing, where cell content\n * can also specify markdown.\n *\n * Tables\n * ======\n *\n * | Col 1   | Col 2                                              |\n * |======== |====================================================|\n * |**bold** | ![Valid XHTML] (http://w3.org/Icons/valid-xhtml10) |\n * | Plain   | Value                                              |\n *\n */\n\n(function(){\n  var table = function(converter) {\n    var tables = {}, style = 'text-align:left;', filter; \n    tables.th = function(header){\n      if (header.trim() === \"\") { return \"\";}\n      var id = header.trim().replace(/ /g, '_').toLowerCase();\n      return '<th id=\"' + id + '\" style=\"'+style+'\">' + header + '</th>';\n    };\n    tables.td = function(cell) {\n      return '<td style=\"'+style+'\">' + converter.makeHtml(cell) + '</td>';\n    };\n    tables.ths = function(){\n      var out = \"\", i = 0, hs = [].slice.apply(arguments);\n      for (i;i<hs.length;i+=1) {\n        out += tables.th(hs[i]) + '\\n';\n      }\n      return out;\n    };\n    tables.tds = function(){\n      var out = \"\", i = 0, ds = [].slice.apply(arguments);\n      for (i;i<ds.length;i+=1) {\n        out += tables.td(ds[i]) + '\\n';\n      }\n      return out;\n    };\n    tables.thead = function() {\n      var out, i = 0, hs = [].slice.apply(arguments);\n      out = \"<thead>\\n\";\n      out += \"<tr>\\n\";\n      out += tables.ths.apply(this, hs);\n      out += \"</tr>\\n\";\n      out += \"</thead>\\n\";\n      return out;\n    };\n    tables.tr = function() {\n      var out, i = 0, cs = [].slice.apply(arguments);\n      out = \"<tr>\\n\";\n      out += tables.tds.apply(this, cs);\n      out += \"</tr>\\n\";\n      return out;\n    };\n    filter = function(text) {\n      var i=0, lines = text.split('\\n'), tbl = [], line, hs, rows, out = [];\n      for (i; i<lines.length;i+=1) {\n        line = lines[i];\n        // looks like a table heading\n        if (line.trim().match(/^[|]{1}.*[|]{1}$/)) {\n          line = line.trim();\n          tbl.push('<table>');\n          hs = line.substring(1, line.length -1).split('|');\n          tbl.push(tables.thead.apply(this, hs));\n          line = lines[++i];\n          if (!line.trim().match(/^[|]{1}[-=| ]+[|]{1}$/)) {\n            // not a table rolling back\n            line = lines[--i];\n          }\n          else {\n            line = lines[++i];\n            tbl.push('<tbody>');\n            while (line.trim().match(/^[|]{1}.*[|]{1}$/)) {\n              line = line.trim();\n              tbl.push(tables.tr.apply(this, line.substring(1, line.length -1).split('|')));\n              line = lines[++i];\n            }\n            tbl.push('</tbody>');\n            tbl.push('</table>');\n            // we are done with this table and we move along\n            out.push(tbl.join('\\n'));\n            continue;\n          }\n        }\n        out.push(line);\n      }             \n      return out.join('\\n');\n    };\n    return [\n    { \n      type: 'lang', \n      filter: filter\n    }\n    ];\n  };\n\n  // Client-side export\n  if (typeof window !== 'undefined' && window.Showdown && window.Showdown.extensions) { window.Showdown.extensions.table = table; }\n  // Server-side export\n  if (typeof module !== 'undefined') {\n    module.exports = table;\n  }\n}());\n","/*global module:true*/\n/*\n * Basic definition list support with re-entrant parsing\n *\n * Definition Lists\n * ======\n *\n * Apple\n * :   Pomaceous fruit of plants of the genus Malus in the family Rosaceae.\n * :   An american computer company.\n *\n * Orange\n * :   The fruit of an evergreen tree of the genus Citrus.\n *\n *\n * *** NOTE ****\n * My implementation is lazy so definition lines do not support multiple line breaks. SO SORRY!\n *\n *\n * ** CUSTOMIZATION **\n * Definition Lists whose first term starts with a code block (e.g. `term`) will include a class named 'inline-def',\n *  useful for inline definition  lists (e.g. float: left)\n *\n */\n\n\n\n(function(){\n\n    var definitionList = function(converter) {\n        return [\n\n            // @username syntax\n            {\n                type: 'lang',\n                filter: function(text) {\n\n                    var lastOffset = 0,\n                        lastLength = 0,\n                        lastIndex = 0,\n                        counter = 0,\n                        sets = [];\n\n                    text.replace(/([^\\n]+)(\\n:[ ]{3,}[^\\n]+)+/g, function(match, p1, p2, offset, string) {\n                        var isJoinedToLast = (lastOffset + lastLength + 1) == offset ;\n                        lastOffset = offset;\n                        lastLength = match.length;\n\n                        // SPLIT IT UP\n                        var parts = match.replace('\\n','').split(':   '),\n                            markup = '';\n\n                        for(var i = 0; i < parts.length; i++) {\n                            if (i == 0) {\n                                markup += '<dt>'+converter.makeHtml(parts[i])+'</dt>';\n                            } else {\n                                markup += '<dd>'+converter.makeHtml(parts[i])+'</dd>';\n                            }\n                        }\n\n\n                        if (isJoinedToLast) {\n                            sets[lastIndex] += markup;\n                            sets[counter] = '';\n                        } else {\n                            sets[counter] = markup;\n                            lastIndex = counter;\n                        }\n\n                        counter++;\n\n                        //definition\n                    });\n\n                    var postCounter = 0;\n                    if (sets.length > 0) {\n\n                        text = text.replace(/([^\\n]+)(\\n:[ ]{3,}[^\\n]+)+/g, function(match, p1, p2, offset, string) {\n\n//                            console.log('replacing index ' +postCounter + ' with ' + sets[postCounter].substr(0, 9));\n\n                            if (sets[postCounter].length > 0) {\n                                return '<dl'+(sets[postCounter].substr(0, 13) == '<dt><p><code>' ? ' class=\"inline-def\"' : '')+'>'+sets[postCounter++]+'</dl>';\n                            } else {\n                                postCounter++;\n                                return '';\n                            }\n\n                        });\n                    }\n\n                    return text;\n\n                }\n            }\n        ];\n    };\n\n    // Client-side export\n    if (typeof window !== 'undefined' && window.Showdown && window.Showdown.extensions) { window.Showdown.extensions.definition = definitionList; }\n    // Server-side export\n    if (typeof module !== 'undefined') module.exports = definitionList;\n\n}());\n","\n\n(function(){\n\n    var badges = function(converter) {\n        return [\n\n            // ((badge)) syntax\n            { type: 'lang', regex: '\\\\B(\\\\\\\\)?\\\\(\\\\((([a-zA-Z]+)[^)]*)\\\\)\\\\)', replace: function(match, leadingSlash, entireThing, badgeName) {\n                // Check if we matched the leading \\ and return nothing changed if so\n                if (leadingSlash === '\\\\') {\n                    return match;\n                } else {\n                    return '<span class=\"badge ' + badgeName + '\">'+entireThing+'</span>';\n                }\n            }},\n\n        ];\n    };\n\n    // Client-side export\n    if (typeof window !== 'undefined' && window.Showdown && window.Showdown.extensions) { window.Showdown.extensions.badges = badges; }\n    // Server-side export\n    if (typeof module !== 'undefined') module.exports = badges;\n\n}());\n","/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n\n    var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\n    };\n    var defaultMaxListeners = 10;\n\n    function init() {\n        this._events = {};\n        if (this._conf) {\n            configure.call(this, this._conf);\n        }\n    }\n\n    function configure(conf) {\n        if (conf) {\n\n            this._conf = conf;\n\n            conf.delimiter && (this.delimiter = conf.delimiter);\n            conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n            conf.wildcard && (this.wildcard = conf.wildcard);\n            conf.newListener && (this.newListener = conf.newListener);\n\n            if (this.wildcard) {\n                this.listenerTree = {};\n            }\n        }\n    }\n\n    function EventEmitter(conf) {\n        this._events = {};\n        this.newListener = false;\n        configure.call(this, conf);\n    }\n\n    //\n    // Attention, function return type now is array, always !\n    // It has zero elements if no any matches found and one or more\n    // elements (leafs) if there are matches\n    //\n    function searchListenerTree(handlers, type, tree, i) {\n        if (!tree) {\n            return [];\n        }\n        var listeners=[], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\n            typeLength = type.length, currentType = type[i], nextType = type[i+1];\n        if (i === typeLength && tree._listeners) {\n            //\n            // If at the end of the event(s) list and the tree has listeners\n            // invoke those listeners.\n            //\n            if (typeof tree._listeners === 'function') {\n                handlers && handlers.push(tree._listeners);\n                return [tree];\n            } else {\n                for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                    handlers && handlers.push(tree._listeners[leaf]);\n                }\n                return [tree];\n            }\n        }\n\n        if ((currentType === '*' || currentType === '**') || tree[currentType]) {\n            //\n            // If the event emitted is '*' at this part\n            // or there is a concrete match at this patch\n            //\n            if (currentType === '*') {\n                for (branch in tree) {\n                    if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+1));\n                    }\n                }\n                return listeners;\n            } else if(currentType === '**') {\n                endReached = (i+1 === typeLength || (i+2 === typeLength && nextType === '*'));\n                if(endReached && tree._listeners) {\n                    // The next element has a _listeners, add it to the handlers.\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                }\n\n                for (branch in tree) {\n                    if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\n                        if(branch === '*' || branch === '**') {\n                            if(tree[branch]._listeners && !endReached) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                            }\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                        } else if(branch === nextType) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i+2));\n                        } else {\n                            // No match on this one, shift into the tree but not in the type array.\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                        }\n                    }\n                }\n                return listeners;\n            }\n\n            listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i+1));\n        }\n\n        xTree = tree['*'];\n        if (xTree) {\n            //\n            // If the listener tree will allow any match for this part,\n            // then recursively explore all branches of the tree\n            //\n            searchListenerTree(handlers, type, xTree, i+1);\n        }\n\n        xxTree = tree['**'];\n        if(xxTree) {\n            if(i < typeLength) {\n                if(xxTree._listeners) {\n                    // If we have a listener on a '**', it will catch all, so add its handler.\n                    searchListenerTree(handlers, type, xxTree, typeLength);\n                }\n\n                // Build arrays of matching next branches and others.\n                for(branch in xxTree) {\n                    if(branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\n                        if(branch === nextType) {\n                            // We know the next element will match, so jump twice.\n                            searchListenerTree(handlers, type, xxTree[branch], i+2);\n                        } else if(branch === currentType) {\n                            // Current node matches, move into the tree.\n                            searchListenerTree(handlers, type, xxTree[branch], i+1);\n                        } else {\n                            isolatedBranch = {};\n                            isolatedBranch[branch] = xxTree[branch];\n                            searchListenerTree(handlers, type, { '**': isolatedBranch }, i+1);\n                        }\n                    }\n                }\n            } else if(xxTree._listeners) {\n                // We have reached the end and still on a '**'\n                searchListenerTree(handlers, type, xxTree, typeLength);\n            } else if(xxTree['*'] && xxTree['*']._listeners) {\n                searchListenerTree(handlers, type, xxTree['*'], typeLength);\n            }\n        }\n\n        return listeners;\n    }\n\n    function growListenerTree(type, listener) {\n\n        type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n\n        //\n        // Looks for two consecutive '**', if so, don't add the event at all.\n        //\n        for(var i = 0, len = type.length; i+1 < len; i++) {\n            if(type[i] === '**' && type[i+1] === '**') {\n                return;\n            }\n        }\n\n        var tree = this.listenerTree;\n        var name = type.shift();\n\n        while (name) {\n\n            if (!tree[name]) {\n                tree[name] = {};\n            }\n\n            tree = tree[name];\n\n            if (type.length === 0) {\n\n                if (!tree._listeners) {\n                    tree._listeners = listener;\n                }\n                else if(typeof tree._listeners === 'function') {\n                    tree._listeners = [tree._listeners, listener];\n                }\n                else if (isArray(tree._listeners)) {\n\n                    tree._listeners.push(listener);\n\n                    if (!tree._listeners.warned) {\n\n                        var m = defaultMaxListeners;\n\n                        if (typeof this._events.maxListeners !== 'undefined') {\n                            m = this._events.maxListeners;\n                        }\n\n                        if (m > 0 && tree._listeners.length > m) {\n\n                            tree._listeners.warned = true;\n                            console.error('(node) warning: possible EventEmitter memory ' +\n                                'leak detected. %d listeners added. ' +\n                                'Use emitter.setMaxListeners() to increase limit.',\n                                tree._listeners.length);\n                            if(console.trace){\n                                console.trace();\n                            }\n                        }\n                    }\n                }\n                return true;\n            }\n            name = type.shift();\n        }\n        return true;\n    }\n\n    // By default EventEmitters will print a warning if more than\n    // 10 listeners are added to it. This is a useful default which\n    // helps finding memory leaks.\n    //\n    // Obviously not all Emitters should be limited to 10. This function allows\n    // that to be increased. Set to zero for unlimited.\n\n    EventEmitter.prototype.delimiter = '.';\n\n    EventEmitter.prototype.setMaxListeners = function(n) {\n        this._events || init.call(this);\n        this._events.maxListeners = n;\n        if (!this._conf) this._conf = {};\n        this._conf.maxListeners = n;\n    };\n\n    EventEmitter.prototype.event = '';\n\n    EventEmitter.prototype.once = function(event, fn) {\n        this.many(event, 1, fn);\n        return this;\n    };\n\n    EventEmitter.prototype.many = function(event, ttl, fn) {\n        var self = this;\n\n        if (typeof fn !== 'function') {\n            throw new Error('many only accepts instances of Function');\n        }\n\n        function listener() {\n            if (--ttl === 0) {\n                self.off(event, listener);\n            }\n            fn.apply(this, arguments);\n        }\n\n        listener._origin = fn;\n\n        this.on(event, listener);\n\n        return self;\n    };\n\n    EventEmitter.prototype.emit = function() {\n\n        this._events || init.call(this);\n\n        var type = arguments[0];\n\n        if (type === 'newListener' && !this.newListener) {\n            if (!this._events.newListener) { return false; }\n        }\n\n        // Loop through the *_all* functions and invoke them.\n        if (this._all) {\n            var l = arguments.length;\n            var args = new Array(l - 1);\n            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n            for (i = 0, l = this._all.length; i < l; i++) {\n                this.event = type;\n                this._all[i].apply(this, args);\n            }\n        }\n\n        // If there is no 'error' event listener then throw.\n        if (type === 'error') {\n\n            if (!this._all &&\n                !this._events.error &&\n                !(this.wildcard && this.listenerTree.error)) {\n\n                if (arguments[1] instanceof Error) {\n                    throw arguments[1]; // Unhandled 'error' event\n                } else {\n                    throw new Error(\"Uncaught, unspecified 'error' event.\");\n                }\n                return false;\n            }\n        }\n\n        var handler;\n\n        if(this.wildcard) {\n            handler = [];\n            var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n            searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n        }\n        else {\n            handler = this._events[type];\n        }\n\n        if (typeof handler === 'function') {\n            this.event = type;\n            if (arguments.length === 1) {\n                handler.call(this);\n            }\n            else if (arguments.length > 1)\n                switch (arguments.length) {\n                    case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n                    case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n                    // slower\n                    default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                }\n            return true;\n        }\n        else if (handler) {\n            var l = arguments.length;\n            var args = new Array(l - 1);\n            for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\n            var listeners = handler.slice();\n            for (var i = 0, l = listeners.length; i < l; i++) {\n                this.event = type;\n                listeners[i].apply(this, args);\n            }\n            return (listeners.length > 0) || !!this._all;\n        }\n        else {\n            return !!this._all;\n        }\n\n    };\n\n    EventEmitter.prototype.on = function(type, listener) {\n\n        if (typeof type === 'function') {\n            this.onAny(type);\n            return this;\n        }\n\n        if (typeof listener !== 'function') {\n            throw new Error('on only accepts instances of Function');\n        }\n        this._events || init.call(this);\n\n        // To avoid recursion in the case that type == \"newListeners\"! Before\n        // adding it to the listeners, first emit \"newListeners\".\n        this.emit('newListener', type, listener);\n\n        if(this.wildcard) {\n            growListenerTree.call(this, type, listener);\n            return this;\n        }\n\n        if (!this._events[type]) {\n            // Optimize the case of one listener. Don't need the extra array object.\n            this._events[type] = listener;\n        }\n        else if(typeof this._events[type] === 'function') {\n            // Adding the second element, need to change to array.\n            this._events[type] = [this._events[type], listener];\n        }\n        else if (isArray(this._events[type])) {\n            // If we've already got an array, just append.\n            this._events[type].push(listener);\n\n            // Check for listener leak\n            if (!this._events[type].warned) {\n\n                var m = defaultMaxListeners;\n\n                if (typeof this._events.maxListeners !== 'undefined') {\n                    m = this._events.maxListeners;\n                }\n\n                if (m > 0 && this._events[type].length > m) {\n\n                    this._events[type].warned = true;\n                    console.error('(node) warning: possible EventEmitter memory ' +\n                        'leak detected. %d listeners added. ' +\n                        'Use emitter.setMaxListeners() to increase limit.',\n                        this._events[type].length);\n                    if(console.trace){\n                        console.trace();\n                    }\n                }\n            }\n        }\n        return this;\n    };\n\n    EventEmitter.prototype.onAny = function(fn) {\n\n        if (typeof fn !== 'function') {\n            throw new Error('onAny only accepts instances of Function');\n        }\n\n        if(!this._all) {\n            this._all = [];\n        }\n\n        // Add the function to the event listener collection.\n        this._all.push(fn);\n        return this;\n    };\n\n    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n    EventEmitter.prototype.off = function(type, listener) {\n        if (typeof listener !== 'function') {\n            throw new Error('removeListener only takes instances of Function');\n        }\n\n        var handlers,leafs=[];\n\n        if(this.wildcard) {\n            var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n            leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n        }\n        else {\n            // does not use listeners(), so no side effect of creating _events[type]\n            if (!this._events[type]) return this;\n            handlers = this._events[type];\n            leafs.push({_listeners:handlers});\n        }\n\n        for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n            var leaf = leafs[iLeaf];\n            handlers = leaf._listeners;\n            if (isArray(handlers)) {\n\n                var position = -1;\n\n                for (var i = 0, length = handlers.length; i < length; i++) {\n                    if (handlers[i] === listener ||\n                        (handlers[i].listener && handlers[i].listener === listener) ||\n                        (handlers[i]._origin && handlers[i]._origin === listener)) {\n                        position = i;\n                        break;\n                    }\n                }\n\n                if (position < 0) {\n                    continue;\n                }\n\n                if(this.wildcard) {\n                    leaf._listeners.splice(position, 1);\n                }\n                else {\n                    this._events[type].splice(position, 1);\n                }\n\n                if (handlers.length === 0) {\n                    if(this.wildcard) {\n                        delete leaf._listeners;\n                    }\n                    else {\n                        delete this._events[type];\n                    }\n                }\n                return this;\n            }\n            else if (handlers === listener ||\n                (handlers.listener && handlers.listener === listener) ||\n                (handlers._origin && handlers._origin === listener)) {\n                if(this.wildcard) {\n                    delete leaf._listeners;\n                }\n                else {\n                    delete this._events[type];\n                }\n            }\n        }\n\n        function recursivelyGarbageCollect(root) {\n            if (root === undefined) {\n                return;\n            }\n            var keys = Object.keys(root);\n            for (var i in keys) {\n                var key = keys[i];\n                var obj = root[key];\n                if ((obj instanceof Function) || (typeof obj !== \"object\"))\n                    continue;\n                if (Object.keys(obj).length > 0) {\n                    recursivelyGarbageCollect(root[key]);\n                }\n                if (Object.keys(obj).length === 0) {\n                    delete root[key];\n                }\n            }\n        }\n        recursivelyGarbageCollect(this.listenerTree);\n\n        return this;\n    };\n\n    EventEmitter.prototype.offAny = function(fn) {\n        var i = 0, l = 0, fns;\n        if (fn && this._all && this._all.length > 0) {\n            fns = this._all;\n            for(i = 0, l = fns.length; i < l; i++) {\n                if(fn === fns[i]) {\n                    fns.splice(i, 1);\n                    return this;\n                }\n            }\n        } else {\n            this._all = [];\n        }\n        return this;\n    };\n\n    EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n    EventEmitter.prototype.removeAllListeners = function(type) {\n        if (arguments.length === 0) {\n            !this._events || init.call(this);\n            return this;\n        }\n\n        if(this.wildcard) {\n            var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n            var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\n            for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n                var leaf = leafs[iLeaf];\n                leaf._listeners = null;\n            }\n        }\n        else {\n            if (!this._events[type]) return this;\n            this._events[type] = null;\n        }\n        return this;\n    };\n\n    EventEmitter.prototype.listeners = function(type) {\n        if(this.wildcard) {\n            var handlers = [];\n            var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n            searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n            return handlers;\n        }\n\n        this._events || init.call(this);\n\n        if (!this._events[type]) this._events[type] = [];\n        if (!isArray(this._events[type])) {\n            this._events[type] = [this._events[type]];\n        }\n        return this._events[type];\n    };\n\n    EventEmitter.prototype.listenersAny = function() {\n\n        if(this._all) {\n            return this._all;\n        }\n        else {\n            return [];\n        }\n\n    };\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(function() {\n            return EventEmitter;\n        });\n    } else if (typeof exports === 'object') {\n        // CommonJS\n        exports.EventEmitter2 = EventEmitter;\n    }\n    else {\n        // Browser global.\n        window.EventEmitter2 = EventEmitter;\n    }\n}();"],"sourceRoot":"./"}